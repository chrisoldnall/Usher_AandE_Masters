ggplot(data = Covidscottish_health_boardsattendancerate2022) +
geom_sf(aes(fill = attendanceper1000pop)) +  # Plot the health board regions with fill mapped to your data
geom_sf_text(data = labels_data, aes(label = HBName), size = 3) +  # Add labels
#scale_fill_viridis_c() +  # Optional: Use a nice color scale
scale_fill_continuous(labels = label_comma(), type="heat",
direction = -1,
limits=c(10, 35),
guide_legend(title = "Attendance rate \nper 1000 population")) +
#labs(title = "Attendance rate per 1000 population in 2022 \nby Scottish health board", fill = "attendanceper1000pop") +
#theme_minimal()
theme_void()
ggplot(data = Covidscottish_health_boardsattendancerate2022) +
geom_sf(aes(fill = attendanceper1000pop)) +  # Plot the health board regions with fill mapped to your data
geom_sf_text(data = labels_data, aes(label = HBName), size = 3) +  # Add labels
#scale_fill_viridis_c() +  # Optional: Use a nice color scale
scale_fill_continuous(labels = label_comma(), type="gradient",
direction = -1,
limits=c(10, 35),
guide_legend(title = "Attendance rate \nper 1000 population")) +
#labs(title = "Attendance rate per 1000 population in 2022 \nby Scottish health board", fill = "attendanceper1000pop") +
#theme_minimal()
theme_void()
ggplot(data = Covidscottish_health_boardsattendancerate2022) +
geom_sf(aes(fill = attendanceper1000pop)) +  # Plot the health board regions with fill mapped to your data
geom_sf_text(data = labels_data, aes(label = HBName), size = 3) +  # Add labels
#scale_fill_viridis_c() +  # Optional: Use a nice color scale
scale_fill_continuous(labels = label_comma(), type="gradient",
#direction = -1,
limits=c(10, 35),
guide_legend(title = "Attendance rate \nper 1000 population")) +
#labs(title = "Attendance rate per 1000 population in 2022 \nby Scottish health board", fill = "attendanceper1000pop") +
#theme_minimal()
theme_void()
scale_fill_continuous()?
?scale_fill_continuous
?scale_fill_continuous
?scale_fill_viridis_c
ggplot(data = Covidscottish_health_boardsattendancerate2022) +
geom_sf(aes(fill = attendanceper1000pop)) +  # Plot the health board regions with fill mapped to your data
geom_sf_text(data = labels_data, aes(label = HBName), size = 3) +  # Add labels
#scale_fill_viridis_c() +  # Optional: Use a nice color scale
scale_fill_viridis_c(limits=c(10, 35),
guide_legend(title = "Attendance rate \nper 1000 population")) +
#scale_fill_continuous(labels = label_comma(), type="viridis",
#direction = -1,
#                    limits=c(10, 35),
#                    guide_legend(title = "Attendance rate \nper 1000 population")) +
#labs(title = "Attendance rate per 1000 population in 2022 \nby Scottish health board", fill = "attendanceper1000pop") +
#theme_minimal()
theme_void()
ggplot(data = Covidscottish_health_boardsattendancerate2022) +
geom_sf(aes(fill = attendanceper1000pop)) +  # Plot the health board regions with fill mapped to your data
geom_sf_text(data = labels_data, aes(label = HBName), size = 3) +  # Add labels
#scale_fill_viridis_c() +  # Optional: Use a nice color scale
scale_fill_viridis_d(limits=c(10, 35),
guide_legend(title = "Attendance rate \nper 1000 population")) +
#scale_fill_continuous(labels = label_comma(), type="viridis",
#direction = -1,
#                    limits=c(10, 35),
#                    guide_legend(title = "Attendance rate \nper 1000 population")) +
#labs(title = "Attendance rate per 1000 population in 2022 \nby Scottish health board", fill = "attendanceper1000pop") +
#theme_minimal()
theme_void()
ggplot(data = Covidscottish_health_boardsattendancerate2022) +
geom_sf(aes(fill = attendanceper1000pop)) +  # Plot the health board regions with fill mapped to your data
geom_sf_text(data = labels_data, aes(label = HBName), size = 3) +  # Add labels
#scale_fill_viridis_c() +  # Optional: Use a nice color scale
scale_fill_viridis_a(limits=c(10, 35),
guide_legend(title = "Attendance rate \nper 1000 population")) +
#scale_fill_continuous(labels = label_comma(), type="viridis",
#direction = -1,
#                    limits=c(10, 35),
#                    guide_legend(title = "Attendance rate \nper 1000 population")) +
#labs(title = "Attendance rate per 1000 population in 2022 \nby Scottish health board", fill = "attendanceper1000pop") +
#theme_minimal()
theme_void()
ggplot(data = Covidscottish_health_boardsattendancerate2022) +
geom_sf(aes(fill = attendanceper1000pop)) +  # Plot the health board regions with fill mapped to your data
geom_sf_text(data = labels_data, aes(label = HBName), size = 3) +  # Add labels
#scale_fill_viridis_c() +  # Optional: Use a nice color scale
scale_fill_continuous(labels = label_comma(), type="viridis",
direction = -1,
limits=c(10, 35),
guide_legend(title = "Attendance rate \nper 1000 population")) +
#labs(title = "Attendance rate per 1000 population in 2022 \nby Scottish health board", fill = "attendanceper1000pop") +
#theme_minimal()
theme_void()
ggplot(data = Covidscottish_health_boardsattendancerate2022) +
geom_sf(aes(fill = attendanceper1000pop)) +  # Plot the health board regions with fill mapped to your data
geom_sf_text(data = labels_data, aes(label = HBName), size = 3) +  # Add labels
#scale_fill_viridis_c() +  # Optional: Use a nice color scale
scale_fill_continuous(labels = label_comma(), type="viridis",
direction = -1,
limits=c(10, 35),
low = "firebrick4", high = "firebrick1",
guide_legend(title = "Attendance rate \nper 1000 population")) +
#labs(title = "Attendance rate per 1000 population in 2022 \nby Scottish health board", fill = "attendanceper1000pop") +
#theme_minimal()
theme_void()
ggplot(data = Covidscottish_health_boardsattendancerate2022) +
geom_sf(aes(fill = attendanceper1000pop)) +  # Plot the health board regions with fill mapped to your data
geom_sf_text(data = labels_data, aes(label = HBName), size = 3) +  # Add labels
#scale_fill_viridis_c() +  # Optional: Use a nice color scale
scale_fill_continuous(labels = label_comma(),
#type="viridis",
direction = -1,
limits=c(10, 35),
low = "firebrick4", high = "firebrick1",
guide_legend(title = "Attendance rate \nper 1000 population")) +
#labs(title = "Attendance rate per 1000 population in 2022 \nby Scottish health board", fill = "attendanceper1000pop") +
#theme_minimal()
theme_void()
ggplot(data = Covidscottish_health_boardsattendancerate2022) +
geom_sf(aes(fill = attendanceper1000pop)) +  # Plot the health board regions with fill mapped to your data
geom_sf_text(data = labels_data, aes(label = HBName), size = 3) +  # Add labels
#scale_fill_viridis_c() +  # Optional: Use a nice color scale
scale_fill_continuous(labels = label_comma(),
#type="viridis",
#direction = -1,
limits=c(10, 35),
low = "firebrick4", high = "firebrick1",
guide_legend(title = "Attendance rate \nper 1000 population")) +
#labs(title = "Attendance rate per 1000 population in 2022 \nby Scottish health board", fill = "attendanceper1000pop") +
#theme_minimal()
theme_void()
ggplot(data = Covidscottish_health_boardsattendancerate2022) +
geom_sf(aes(fill = attendanceper1000pop)) +  # Plot the health board regions with fill mapped to your data
geom_sf_text(data = labels_data, aes(label = HBName), size = 3) +  # Add labels
#scale_fill_viridis_c() +  # Optional: Use a nice color scale
scale_fill_continuous(labels = label_comma(),
#type="viridis",
#direction = -1,
limits=c(10, 35),
low = "yellow", high = "firebrick1",
guide_legend(title = "Attendance rate \nper 1000 population")) +
#labs(title = "Attendance rate per 1000 population in 2022 \nby Scottish health board", fill = "attendanceper1000pop") +
#theme_minimal()
theme_void()
ggplot(data = Covidscottish_health_boardsattendancerate2022) +
geom_sf(aes(fill = attendanceper1000pop)) +  # Plot the health board regions with fill mapped to your data
geom_sf_text(data = labels_data, aes(label = HBName), size = 3) +  # Add labels
#scale_fill_viridis_c() +  # Optional: Use a nice color scale
scale_fill_continuous(labels = label_comma(),
#type="viridis",
#direction = -1,
limits=c(10, 35),
low = "khaki", high = "red2",
guide_legend(title = "Attendance rate \nper 1000 population")) +
#labs(title = "Attendance rate per 1000 population in 2022 \nby Scottish health board", fill = "attendanceper1000pop") +
#theme_minimal()
theme_void()
ggplot(data = Covidscottish_health_boardsattendancerate2022) +
geom_sf(aes(fill = attendanceper1000pop)) +  # Plot the health board regions with fill mapped to your data
geom_sf_text(data = labels_data, aes(label = HBName), size = 3) +  # Add labels
#scale_fill_viridis_c() +  # Optional: Use a nice color scale
scale_fill_continuous(labels = label_comma(),
#type="viridis",
#direction = -1,
limits=c(10, 35),
low = "khaki", medium = "springgreen2", high = "red2",
guide_legend(title = "Attendance rate \nper 1000 population")) +
#labs(title = "Attendance rate per 1000 population in 2022 \nby Scottish health board", fill = "attendanceper1000pop") +
#theme_minimal()
theme_void()
ggplot(data = Covidscottish_health_boardsattendancerate2022) +
geom_sf(aes(fill = attendanceper1000pop)) +  # Plot the health board regions with fill mapped to your data
geom_sf_text(data = labels_data, aes(label = HBName), size = 3) +  # Add labels
#scale_fill_viridis_c() +  # Optional: Use a nice color scale
scale_fill_continuous(labels = label_comma(),
#type="viridis",
#direction = -1,
limits=c(10, 35),
low = "yellow", high = "red2",
guide_legend(title = "Attendance rate \nper 1000 population")) +
#labs(title = "Attendance rate per 1000 population in 2022 \nby Scottish health board", fill = "attendanceper1000pop") +
#theme_minimal()
theme_void()
ggplot(data = Covidscottish_health_boardsattendancerate2022) +
geom_sf(aes(fill = attendanceper1000pop)) +  # Plot the health board regions with fill mapped to your data
geom_sf_text(data = labels_data, aes(label = HBName), size = 3) +  # Add labels
#scale_fill_viridis_c() +  # Optional: Use a nice color scale
scale_fill_continuous(labels = label_comma(),
#type="viridis",
#direction = -1,
limits=c(10, 35),
low = "palegreen", high = "red2",
guide_legend(title = "Attendance rate \nper 1000 population")) +
#labs(title = "Attendance rate per 1000 population in 2022 \nby Scottish health board", fill = "attendanceper1000pop") +
#theme_minimal()
theme_void()
ggplot(data = Covidscottish_health_boardsattendancerate2022) +
geom_sf(aes(fill = attendanceper1000pop)) +  # Plot the health board regions with fill mapped to your data
geom_sf_text(data = labels_data, aes(label = HBName), size = 3) +  # Add labels
#scale_fill_viridis_c() +  # Optional: Use a nice color scale
scale_fill_continuous(labels = label_comma(),
#type="viridis",
#direction = -1,
limits=c(10, 35),
low = "seagreen2", high = "magenta1",
guide_legend(title = "Attendance rate \nper 1000 population")) +
#labs(title = "Attendance rate per 1000 population in 2022 \nby Scottish health board", fill = "attendanceper1000pop") +
#theme_minimal()
theme_void()
ggplot(data = Covidscottish_health_boardsattendancerate2022) +
geom_sf(aes(fill = attendanceper1000pop)) +  # Plot the health board regions with fill mapped to your data
geom_sf_text(data = labels_data, aes(label = HBName), size = 3) +  # Add labels
#scale_fill_viridis_c() +  # Optional: Use a nice color scale
scale_fill_continuous(labels = label_comma(),
#type="viridis",
#direction = -1,
limits=c(10, 35),
low = "yellow", high = "dodgerblue",
guide_legend(title = "Attendance rate \nper 1000 population")) +
#labs(title = "Attendance rate per 1000 population in 2022 \nby Scottish health board", fill = "attendanceper1000pop") +
#theme_minimal()
theme_void()
ggplot(data = Covidscottish_health_boardsattendancerate2022) +
geom_sf(aes(fill = attendanceper1000pop)) +  # Plot the health board regions with fill mapped to your data
geom_sf_text(data = labels_data, aes(label = HBName), size = 3) +  # Add labels
#scale_fill_viridis_c() +  # Optional: Use a nice color scale
scale_fill_continuous(labels = label_comma(),
type="viridis",
direction = -1,
limits=c(10, 35),
#low = "yellow", high = "dodgerblue",
guide_legend(title = "Attendance rate \nper 1000 population")) +
#labs(title = "Attendance rate per 1000 population in 2022 \nby Scottish health board", fill = "attendanceper1000pop") +
#theme_minimal()
theme_void()
ggplot(data = Covidscottish_health_boards4hour2022) +
geom_sf(aes(fill = PercentageWithin4HoursAll)) +  # Plot the health board regions with fill mapped to your data
geom_sf_text(data = labels_data, aes(label = HBName), size = 3) +  # Add labels
#scale_fill_viridis_c() +  # Optional: Use a nice color scale
scale_fill_continuous(labels = label_comma(), type="viridis",
direction = -1,
limits=c(55, 100),
guide_legend(title = "Percentage patients \nseen within 4 hours")) +
#labs(title = "Percentage patients seen within 4 hours in 2022 \nby Scottish health board", fill = "PercentageWithin4HoursAll") +
#theme_minimal()
theme_void()
Covid_monthlyae_popest4hour2022 <- data.frame(
HBName = c("Ayrshire and Arran", "Borders", "Dumfries and Galloway", "Fife","Forth Valley", "Grampian", "Greater Glasgow and Clyde", "Highland", "Lanarkshire", "Lothian", "Orkney", "Shetland", "Tayside", "Western Isles"),
PercentageWithin4HoursAll = c(86.3, 64.6, 82.3, 91.3, 75.6, 87.3, 79.0, 95.2, 58.2, 67.2, 91.5, 94.2, 95.0, 99.0))
Covidscottish_health_boards4hour2022 <- scottish_health_boards %>%
left_join(Covid_monthlyae_popest4hour2022, by="HBName")
ggplot(data = Covidscottish_health_boards4hour2022) +
geom_sf(aes(fill = PercentageWithin4HoursAll)) +  # Plot the health board regions with fill mapped to your data
geom_sf_text(data = labels_data, aes(label = HBName), size = 3) +  # Add labels
#scale_fill_viridis_c() +  # Optional: Use a nice color scale
scale_fill_continuous(labels = label_comma(), type="viridis",
direction = -1,
limits=c(55, 100),
guide_legend(title = "Percentage patients \nseen within 4 hours")) +
#labs(title = "Percentage patients seen within 4 hours in 2022 \nby Scottish health board", fill = "PercentageWithin4HoursAll") +
#theme_minimal()
theme_void()
CovidScottish4hour2022 <- ggplot(data = Covidscottish_health_boards4hour2022) +
geom_sf(aes(fill = PercentageWithin4HoursAll)) +  # Plot the health board regions with fill mapped to your data
geom_sf_text(data = labels_data, aes(label = HBName), size = 3) +  # Add labels
#scale_fill_viridis_c() +  # Optional: Use a nice color scale
scale_fill_continuous(labels = label_comma(), type="viridis",
direction = -1,
limits=c(55, 100),
guide_legend(title = "Percentage patients \nseen within 4 hours")) +
#labs(title = "Percentage patients seen within 4 hours in 2022 \nby Scottish health board", fill = "PercentageWithin4HoursAll") +
#theme_minimal()
theme_void()
save_plot("Output/CovidScottish4hour2022.svg", fig = CovidScottish4hour2022, width = 16, height = 18)
Covid_monthlyae_activity4hour2022 <- data.frame(
HBName = c("Ayrshire and Arran", "Borders", "Dumfries and Galloway", "Fife","Forth Valley", "Grampian", "Greater Glasgow and Clyde", "Highland", "Lanarkshire", "Lothian", "Orkney", "Shetland", "Tayside", "Western Isles"),
Percentwithin4hr = c(69.5, 64.5, 79.7, 73.0, 64.7, 70.9, 71.1, 85.4, 58.2, 63.4, 91.4, 94.0, 90.4, 97.8))
Covidscottish_health_boards4hour2022calculated <- scottish_health_boards %>%
left_join(Covid_monthlyae_activity4hour2022, by="HBName")
CovidScottish4hour2022calculated <- ggplot(data = Covidscottish_health_boards4hour2022calculated) +
geom_sf(aes(fill = Percentwithin4hr)) +  # Plot the health board regions with fill mapped to your data
geom_sf_text(data = labels_data, aes(label = HBName), size = 3) +  # Add labels
#scale_fill_viridis_c() +  # Optional: Use a nice color scale
scale_fill_continuous(labels = label_comma(), type="viridis",
direction = -1,
limits=c(55, 100),
guide_legend(title = "Percentage patients \nseen within 4 hours")) +
#labs(title = "Percentage patients seen within 4 hours in 2022 \nby Scottish health board", fill = "PercentageWithin4HoursAll") +
#theme_minimal()
theme_void()
save_plot("Output/CovidScottish4hour2022calculated.svg", fig = CovidScottish4hour2022calculated, width = 16, height = 18)
CovidScottish4hour2020 <- ggplot(data = Covidscottish_health_boards4hour2020) +
geom_sf(aes(fill = PercentageWithin4HoursAll)) +  # Plot the health board regions with fill mapped to your data
geom_sf_text(data = labels_data, aes(label = HBName), size = 3) +  # Add labels
#scale_fill_viridis_c() +  # Optional: Use a nice color scale
scale_fill_continuous(labels = label_comma(), type="viridis",
direction = -1,
limits=c(55, 100),
guide_legend(title = "Percentage patients \nseen within 4 hours")) +
#labs(title = "Percentage patients seen within 4 hours in 2020 \nby Scottish health board", fill = "PercentageWithin4HoursAll") +
#theme_minimal()
theme_void()
Covid_monthlyae_activity4hour2020 <- data.frame(
HBName = c("Ayrshire and Arran", "Borders", "Dumfries and Galloway", "Fife","Forth Valley", "Grampian", "Greater Glasgow and Clyde", "Highland", "Lanarkshire", "Lothian", "Orkney", "Shetland", "Tayside", "Western Isles"),
Percentwithin4hr = c(88.2, 87.5, 92.0, 93.7, 93.7, 92.2, 90.5, 94.9, 87.6, 89.1, 96.7, 96.6, 97.0, 98.1))
Covidscottish_health_boards4hour2020calculated <- scottish_health_boards %>%
left_join(Covid_monthlyae_activity4hour2020, by="HBName")
CovidScottish4hour2020calculated <- ggplot(data = Covidscottish_health_boards4hour2020calculated) +
geom_sf(aes(fill = Percentwithin4hr)) +  # Plot the health board regions with fill mapped to your data
geom_sf_text(data = labels_data, aes(label = HBName), size = 3) +  # Add labels
#scale_fill_viridis_c() +  # Optional: Use a nice color scale
scale_fill_continuous(labels = label_comma(), type="viridis",
direction = -1,
limits=c(55, 100),
guide_legend(title = "Percentage patients \nseen within 4 hours")) +
#labs(title = "Percentage patients seen within 4 hours in 2020 \nby Scottish health board", fill = "PercentageWithin4HoursAll") +
#theme_minimal()
theme_void()
save_plot("Output/CovidScottish4hour2020calculated.svg", fig = CovidScottish4hour2020calculated, width = 16, height = 18)
Covid_monthlyae_popest4hour2018 <- data.frame(
HBName = c("Ayrshire and Arran", "Borders", "Dumfries and Galloway", "Fife","Forth Valley", "Grampian", "Greater Glasgow and Clyde", "Highland", "Lanarkshire", "Lothian", "Orkney", "Shetland", "Tayside", "Western Isles"),
PercentageWithin4HoursAll = c(96.4, 98.4, 97.1, 98.4, 89.9, 98.9, 93.0, 98.7, 94.5, 89.2, 96.0, 96.4, 99.4, 99.4))
Covidscottish_health_boards4hour2018 <- scottish_health_boards %>%
left_join(Covid_monthlyae_popest4hour2018, by="HBName")
CovidScottish4hour2018 <- ggplot(data = Covidscottish_health_boards4hour2018) +
geom_sf(aes(fill = PercentageWithin4HoursAll)) +  # Plot the health board regions with fill mapped to your data
geom_sf_text(data = labels_data, aes(label = HBName), size = 3) +  # Add labels
#scale_fill_viridis_c() +  # Optional: Use a nice color scale
scale_fill_continuous(labels = label_comma(), type="viridis",
direction = -1,
limits=c(55, 100),
guide_legend(title = "Percentage patients \nseen within 4 hours")) +
#labs(title = "Percentage patients seen within 4 hours in 2018 \nby Scottish health board", fill = "PercentageWithin4HoursAll") +
#theme_minimal()
theme_void()
save_plot("Output/CovidScottish4hour2018.svg", fig = CovidScottish4hour2018, width = 16, height = 18)
Covid_monthlyae_activity4hour2018 <- data.frame(
HBName = c("Ayrshire and Arran", "Borders", "Dumfries and Galloway", "Fife","Forth Valley", "Grampian", "Greater Glasgow and Clyde", "Highland", "Lanarkshire", "Lothian", "Orkney", "Shetland", "Tayside", "Western Isles"),
Percentwithin4hr = c(93.2, 92.4, 92.1, 95.7, 84.7, 94.5, 90.1, 96.4, 90.9, 84.2, 96.1, 96.4, 97.8, 98.8))
Covidscottish_health_boards4hour2018calculated <- scottish_health_boards %>%
left_join(Covid_monthlyae_activity4hour2018, by="HBName")
CovidScottish4hour2018calculated <- ggplot(data = Covidscottish_health_boards4hour2018calculated) +
geom_sf(aes(fill = Percentwithin4hr)) +  # Plot the health board regions with fill mapped to your data
geom_sf_text(data = labels_data, aes(label = HBName), size = 3) +  # Add labels
#scale_fill_viridis_c() +  # Optional: Use a nice color scale
scale_fill_continuous(labels = label_comma(), type="viridis",
direction = -1,
limits=c(55, 100),
guide_legend(title = "Percentage patients \nseen within 4 hours")) +
#labs(title = "Percentage patients seen within 4 hours in 2018 \nby Scottish health board", fill = "PercentageWithin4HoursAll") +
#theme_minimal()
theme_void()
save_plot("Output/CovidScottish4hour2018calculated.svg", fig = CovidScottish4hour2018calculated, width = 16, height = 18)
Covid_monthlyae_popest4hour2020 <- data.frame(
HBName = c("Ayrshire and Arran", "Borders", "Dumfries and Galloway", "Fife","Forth Valley", "Grampian", "Greater Glasgow and Clyde", "Highland", "Lanarkshire", "Lothian", "Orkney", "Shetland", "Tayside", "Western Isles"),
PercentageWithin4HoursAll = c(93.9, 91.9, 93.7, 97.7, 95.6, 97.1, 93.6, 98.1, 89.3, 92.5, 96.9, 96.6, 98.5, 99.0))
Covidscottish_health_boards4hour2020 <- scottish_health_boards %>%
left_join(Covid_monthlyae_popest4hour2020, by="HBName")
CovidScottish4hour2020 <- ggplot(data = Covidscottish_health_boards4hour2020) +
geom_sf(aes(fill = PercentageWithin4HoursAll)) +  # Plot the health board regions with fill mapped to your data
geom_sf_text(data = labels_data, aes(label = HBName), size = 3) +  # Add labels
#scale_fill_viridis_c() +  # Optional: Use a nice color scale
scale_fill_continuous(labels = label_comma(), type="viridis",
direction = -1,
limits=c(55, 100),
guide_legend(title = "Percentage patients \nseen within 4 hours")) +
#labs(title = "Percentage patients seen within 4 hours in 2020 \nby Scottish health board", fill = "PercentageWithin4HoursAll") +
#theme_minimal()
theme_void()
save_plot("Output/CovidScottish4hour2020.svg", fig = CovidScottish4hour2020, width = 16, height = 18)
View(Covid_HBpopulation_estimate)
library(tidyverse)
library(here)
library(readxl)
library(dplyr)
library(ggplot2)
library(lubridate)
library(sf)
library(scales)
library(sjPlot)
#Loading A&E monthly attendance and waiting times csv file
Covid_monthlyae_glm <- read_csv(here("Rawdata", "monthlyae_activity_202406.csv"))
View(Covid_monthlyae_glm)
#Attendance and percentage within 4 hours by HB each month
Covid_monthlyae_glm <- Covid_monthlyae_glm %>%
select(Month, HBT, NumberOfAttendancesAll) %>%
group_by(Month, HBT) %>%
summarise(NumberOfAttendancesAll=sum(NumberOfAttendancesAll))
View(Covid_monthlyae_glm)
Covid_monthlyae_glmdemographics <- read_csv(here("Rawdata", "monthlyae_demographics_202406.csv"))
View(Covid_monthlyae_glmdemographics)
View(glm_sex)
View(monthattendances_proportions20182023wideJantoDec)
View(monthattendances_proportions)
View(monthattendances_Updatedproportions)
Covid_monthlyae_glm <- read_csv(here("Rawdata", "monthlyae_activity_202406.csv"))
View(Covid_monthlyae_glm)
Covid_monthlyae_glm <- Covid_monthlyae_glm %>%
select(Month, HBT, DepartmentType, NumberOfAttendancesAll) %>%
group_by(Month, HBT, DepartmentType) %>%
summarise(NumberOfAttendancesAll=sum(NumberOfAttendancesAll))
View(Covid_monthlyae_glm)
Covid_monthlyae_glm <- Covid_monthlyae_glm %>%
select(Month, HBT,
#DepartmentType,
NumberOfAttendancesAll) %>%
group_by(Month,
HBT
#,DepartmentType
) %>%
summarise(NumberOfAttendancesAll=sum(NumberOfAttendancesAll))
View(Covid_monthlyae_glm)
Covid_monthlyae_glm <- Covid_monthlyae_glm %>%
select(Month,
#HBT,
#DepartmentType,
NumberOfAttendancesAll) %>%
group_by(Month
#,HBT
#,DepartmentType
) %>%
summarise(NumberOfAttendancesAll=sum(NumberOfAttendancesAll))
View(Covid_monthlyae_glm)
Covid_monthlyae_glmdemographics <- Covid_monthlyae_glmdemographics %>%
select(Month, NumberOfAttendances) %>%
group_by(Month) %>%
summarise(NumberOfAttendances=sum(NumberOfAttendances))
View(Covid_monthlyae_glmdemographics)
Covid_monthlyae_glm <- read_csv(here("Rawdata", "monthlyae_activity_202406.csv"))
View(Covid_monthlyae_glm)
Covid_monthlyae_glmdemographics <- read_csv(here("Rawdata", "monthlyae_demographics_202406.csv"))
View(Covid_monthlyae_glmdemographics)
Covid_monthlyae_glmwhen <- read_csv(here("Rawdata", "monthlyae_when_202406.csv"))
View(Covid_monthlyae_glmwhen)
Covid_monthlyae_glmwhen <- Covid_monthlyae_glmwhen %>%
select(Month, NumberOfAttendances) %>%
group_by(Month) %>%
summarise(NumberOfAttendances=sum(NumberOfAttendances))
Covid_monthlyae_glmdemographics <- read_csv(here("Rawdata", "monthlyae_demographics_202406.csv"))
Covid_monthlyae_glmdemographics <- Covid_monthlyae_glmdemographics %>%
select(Month, NumberOfAttendances) %>%
group_by(Month) %>%
summarise(NumberOfAttendances=sum(NumberOfAttendances))
Covid_monthlyae_glmwhen <- read_csv(here("Rawdata", "monthlyae_when_202406.csv"))
View(Covid_monthlyae_glmwhen)
Covid_monthlyae_glmdemographics <- read_csv(here("Rawdata", "monthlyae_demographics_202406.csv"))
View(Covid_monthlyae_glmdemographics)
Covid_monthlyae_glmdemographicsage <- Covid_monthlyae_glmdemographics %>%
select(Month, Age, NumberOfAttendances) %>%
group_by(Month, Age) %>%
summarise(NumberOfAttendances=sum(NumberOfAttendances))
View(Covid_monthlyae_glmdemographicsage)
View(agegroupScot_proportions)
View(agegroupScot_monthtotal)
View(agegroupScot)
replace_na(Covid_monthlyae_glmdemographicsage, Age="Unknown")
str(Covid_monthlyae_glmdemographicsage)
replace_na(Covid_monthlyae_glmdemographicsage$Age, Age="Unknown")
Covid_monthlyae_glmdemographicsage %>% replace_na(list(Age="Unknown"))
View(Covid_monthlyae_glmdemographicsage)
Covid_monthlyae_glmdemographicsage <- Covid_monthlyae_glmdemographicsage %>% replace_na(list(Age="Unknown"))
View(Covid_monthlyae_glmdemographicsage)
Covid_monthlyae_glmdemographicsage$Date <-paste(Covid_monthlyae_glmdemographicsage$Month,"01")
View(Covid_monthlyae_glmdemographicsage)
Covid_monthlyae_glmdemographicsage$Date <- format(as.Date(Covid_monthlyae_glmdemographicsage$Date, format="%Y/%m/%d"))
str(Covid_monthlyae_glmdemographicsage)
View(Covid_monthlyae_glmdemographicsage)
Covid_monthlyae_glmdemographicsage$Date <-paste(Covid_monthlyae_glmdemographicsage$Month,"01")
View(Covid_monthlyae_glmdemographicsage)
str(Covid_monthlyae_glmdemographicsage)
Covid_monthlyae_glmdemographicsage$Year <- substr(Covid_monthlyae_activity$Month, 1,4)
#creating a new column for Year using the first 4 digits of the Month column
Covid_monthlyae_glmdemographicsage$Year <- substr(Covid_monthlyae_glmdemographicsage$Month, 1,4)
Covid_monthlyae_glmdemographicsage$monthnumeric <- substr(Covid_monthlyae_glmdemographicsage$Month, 5,6)
str(Covid_monthlyae_glmdemographicsage)
Covid_monthlyae_glmdemographicsage$day <- "01"
str(Covid_monthlyae_glmdemographicsage)
Covid_monthlyae_glmdemographicsage$Year <- as.numeric(Covid_monthlyae_glmdemographicsage$Year)
Covid_monthlyae_glmdemographicsage$monthnumeric <- as.numeric(Covid_monthlyae_glmdemographicsage$monthnumeric)
Covid_monthlyae_glmdemographicsage$day <- as.numeric(Covid_monthlyae_glmdemographicsage$day)
str(Covid_monthlyae_glmdemographicsage)
Covid_monthlyae_glmdemographicsage$Date<- Covid_monthlyae_glmdemographicsage %>%
mutate(date=make_date(Year, monthnumeric, day))
str(Covid_monthlyae_glmdemographicsage)
#Demographics
#Loading A&E demographic csv file
Covid_monthlyae_glmdemographics <- read_csv(here("Rawdata", "monthlyae_demographics_202406.csv"))
str(Covid_monthlyae_glmdemographics)
#Demographics
#Loading A&E demographic csv file
Covid_monthlyae_glmdemographics <- read_csv(here("Rawdata", "monthlyae_demographics_202406.csv"))
Covid_monthlyae_glmdemographics$Year <- substr(Covid_monthlyae_glmdemographics$Month, 1,4)
Covid_monthlyae_glmdemographics$monthnumeric <- substr(Covid_monthlyae_glmdemographics$Month, 5,6)
Covid_monthlyae_glmdemographics$day <- "01"
Covid_monthlyae_glmdemographics$Year <- as.numeric(Covid_monthlyae_glmdemographics$Year)
Covid_monthlyae_glmdemographics$monthnumeric <- as.numeric(Covid_monthlyae_glmdemographics$monthnumeric)
Covid_monthlyae_glmdemographics$day <- as.numeric(Covid_monthlyae_glmdemographics$day)
#making a date column using the Year, monthnumeric and day columns
Covid_monthlyae_glmdemographics<- Covid_monthlyae_glmdemographics %>%
mutate(date=make_date(Year, monthnumeric, day))
str(Covid_monthlyae_glmdemographics)
#AGE
#calculating total attendances for all age groups
Covid_monthlyae_glmdemographicstotal <- Covid_monthlyae_glmdemographics %>%
select(date, NumberOfAttendances) %>%
group_by(date) %>%
summarise(NumberOfAttendances=sum(NumberOfAttendances))
View(Covid_monthlyae_glmdemographicstotal)
#calculating total attendances by age groups
Covid_monthlyae_glmdemographicsage <- Covid_monthlyae_glmdemographics %>%
select(date, Age, NumberOfAttendances) %>%
group_by(date, Age) %>%
summarise(NumberOfAttendances=sum(NumberOfAttendances))
View(Covid_monthlyae_glmdemographicsage)
#renaming all na age to unknown
Covid_monthlyae_glmdemographicsage <- Covid_monthlyae_glmdemographicsage %>% replace_na(list(Age="Unknown"))
str(Covid_monthlyae_glmdemographicsage)
View(Covid_monthlyae_glmdemographicsage)
