Covid_monthlyae_glmdemographicssex <- Covid_monthlyae_glmdemographics %>%
select(date, Sex, NumberOfAttendances) %>%
group_by(date, Sex) %>%
summarise(NumberOfAttendances=sum(NumberOfAttendances))
#renaming all na age to unknown
Covid_monthlyae_glmdemographicssex <- Covid_monthlyae_glmdemographicssex %>% replace_na(list(Sex="UnknownSex"))
#merge sex attendances with total attendances to calculate proportion
Covid_monthlyae_glmdemographicssex <- merge(Covid_monthlyae_glmdemographicssex, Covid_monthlyae_glmdemographicstotal, by=c("date"))
#changing column names so it is clear which is total and which is for age
colnames(Covid_monthlyae_glmdemographicssex)<- c("date", "Sex","SexAttendances","TotalAttendances")
#to calculate the proportion for each age
Covid_monthlyae_glmdemographicssex$Proportions <-Covid_monthlyae_glmdemographicssex$SexAttendances/Covid_monthlyae_glmdemographicssex$TotalAttendances
Covid_monthlyae_glmdemographicssex <- Covid_monthlyae_glmdemographicssex %>% select(date,Sex,Proportions)
#to change the data from a long to a wide format
Covid_monthlyae_glmdemographicssex <- pivot_wider(Covid_monthlyae_glmdemographicssex, names_from = Sex, values_from = Proportions)
str(Covid_monthlyae_glmdemographicssex)
#calculating total attendances by deprivation
Covid_monthlyae_glmdemographicsdeprivation <- Covid_monthlyae_glmdemographics %>%
select(date, Deprivation, NumberOfAttendances) %>%
group_by(date, Deprivation) %>%
summarise(NumberOfAttendances=sum(NumberOfAttendances))
#renaming all na deprivation to unknown
str(Covid_monthlyae_glmdemographicsdeprivation)
#have to change Deprivation from double to character before changing na to unknown
Covid_monthlyae_glmdemographicsdeprivation$Deprivation <- as.character(Covid_monthlyae_glmdemographicsdeprivation$Deprivation)
Covid_monthlyae_glmdemographicsdeprivation <- Covid_monthlyae_glmdemographicsdeprivation %>% replace_na(list(Deprivation="UnknownSIMD"))
#merge deprivation attendances with total attendances to calculate proportion
Covid_monthlyae_glmdemographicsdeprivation <- merge(Covid_monthlyae_glmdemographicsdeprivation, Covid_monthlyae_glmdemographicstotal, by=c("date"))
#changing column names so it is clear which is total and which is for deprivation
colnames(Covid_monthlyae_glmdemographicsdeprivation)<- c("date", "SIMD","SIMDAttendances","TotalAttendances")
#to calculate the proportion for each deprivation
Covid_monthlyae_glmdemographicsdeprivation$Proportions <-Covid_monthlyae_glmdemographicsdeprivation$SIMDAttendances/Covid_monthlyae_glmdemographicsdeprivation$TotalAttendances
Covid_monthlyae_glmdemographicsdeprivation <- Covid_monthlyae_glmdemographicsdeprivation %>% select(date,SIMD,Proportions)
#to change the data from a long to a wide format
Covid_monthlyae_glmdemographicsdeprivation <- pivot_wider(Covid_monthlyae_glmdemographicsdeprivation, names_from = SIMD, values_from = Proportions)
#changing SIMD column names to be clearer
colnames(Covid_monthlyae_glmdemographicsdeprivation)<- c("date", "SIMD1","SIMD2","SIMD3", "SIMD4", "SIMD5", "UnknownSIMD")
str(Covid_monthlyae_glmdemographicsdeprivation)
#calculating total attendances by department type
Covid_monthlyae_glmdemographicsdepttype <- Covid_monthlyae_glmdemographics %>%
select(date, DepartmentType, NumberOfAttendances) %>%
group_by(date, DepartmentType) %>%
summarise(NumberOfAttendances=sum(NumberOfAttendances))
#merge dept type attendances with total attendances to calculate proportion
Covid_monthlyae_glmdemographicsdepttype <- merge(Covid_monthlyae_glmdemographicsdepttype, Covid_monthlyae_glmdemographicstotal, by=c("date"))
#changing column names so it is clear which is total and which is for depttype
colnames(Covid_monthlyae_glmdemographicsdepttype)<- c("date", "DepartmentType","DepttypeAttendances","TotalAttendances")
#to calculate the proportion for each depttype
Covid_monthlyae_glmdemographicsdepttype$Proportions <-Covid_monthlyae_glmdemographicsdepttype$DepttypeAttendances/Covid_monthlyae_glmdemographicsdepttype$TotalAttendances
Covid_monthlyae_glmdemographicsdepttype <- Covid_monthlyae_glmdemographicsdepttype %>% select(date,DepartmentType,Proportions)
#to change the data from a long to a wide format
Covid_monthlyae_glmdemographicsdepttype <- pivot_wider(Covid_monthlyae_glmdemographicsdepttype, names_from = DepartmentType, values_from = Proportions)
#changing column names to ED and MIU
colnames(Covid_monthlyae_glmdemographicsdepttype)<- c("date", "ED","MIU/Other")
str(Covid_monthlyae_glmdemographicsdepttype)
#calculating total attendances by health board
Covid_monthlyae_glmdemographicsHB <- Covid_monthlyae_glmdemographics %>%
select(date, HBT, NumberOfAttendances) %>%
group_by(date, HBT) %>%
summarise(NumberOfAttendances=sum(NumberOfAttendances))
#merge HB attendances with total attendances to calculate proportion
Covid_monthlyae_glmdemographicsHB <- merge(Covid_monthlyae_glmdemographicsHB, Covid_monthlyae_glmdemographicstotal, by=c("date"))
#changing column names so it is clear which is total and which is for HB
colnames(Covid_monthlyae_glmdemographicsHB)<- c("date", "HBT","HBAttendances","TotalAttendances")
#to calculate the proportion for each depttype
Covid_monthlyae_glmdemographicsHB$Proportions <-Covid_monthlyae_glmdemographicsHB$HBAttendances/Covid_monthlyae_glmdemographicsHB$TotalAttendances
Covid_monthlyae_glmdemographicsHB <- Covid_monthlyae_glmdemographicsHB %>% select(date,HBT,Proportions)
#to change the data from a long to a wide format
Covid_monthlyae_glmdemographicsHB <- pivot_wider(Covid_monthlyae_glmdemographicsHB, names_from = HBT, values_from = Proportions)
Covid_monthlyae_glmdemographicsHB <- Covid_monthlyae_glmdemographicsHB %>%
rename(c("NHSAyrshireandArran" = "S08000015",
"NHSBorders" = "S08000016",
"NHSDumfriesandGalloway" = "S08000017",
"NHSForthValley" = "S08000019",
"NHSGrampian" = "S08000020",
"NHSHighland" = "S08000022",
"NHSLothian" = "S08000024",
"NHSOrkney" = "S08000025",
"NHSShetland" = "S08000026",
"NHSWesternIsles" = "S08000028",
"NHSFife" = "S08000029",
"NHSTayside" = "S08000030",
"NHSGreaterGlasgowandClyde" = "S08000031",
"NHSLanarkshire" = "S08000032"))
Covid_monthlyae_glmdemographicsCoviddate <- Covid_monthlyae_glmdemographics %>%
select(date, NumberOfAttendances) %>%
group_by(date) %>%
summarise(NumberOfAttendances=sum(NumberOfAttendances))
#Populating each batch of date ranges individually
Covid_monthlyae_glmdemographicsCoviddate_a <- Covid_monthlyae_glmdemographicsCoviddate %>%
filter(between(date, as.Date('2018-01-01'), as.Date('2020-03-31'))) %>%
mutate(Coviddate1 = 0,
Coviddate2 = 0,
Coviddate3 = 0,
Coviddate4 = 1)
Covid_monthlyae_glmdemographicsCoviddate_b <- Covid_monthlyae_glmdemographicsCoviddate %>%
filter(between(date, as.Date('2020-04-01'), as.Date('2020-05-31'))) %>%
mutate(Coviddate1 = 1,
Coviddate2 = 0,
Coviddate3 = 0,
Coviddate4 = 0)
Covid_monthlyae_glmdemographicsCoviddate_c <- Covid_monthlyae_glmdemographicsCoviddate %>%
filter(between(date, as.Date('2020-06-01'), as.Date('2020-09-30'))) %>%
mutate(Coviddate1 = 0,
Coviddate2 = 0,
Coviddate3 = 1,
Coviddate4 = 0)
Covid_monthlyae_glmdemographicsCoviddate_d <- Covid_monthlyae_glmdemographicsCoviddate %>%
filter(between(date, as.Date('2020-10-01'), as.Date('2020-12-31'))) %>%
mutate(Coviddate1 = 0,
Coviddate2 = 1,
Coviddate3 = 0,
Coviddate4 = 0)
Covid_monthlyae_glmdemographicsCoviddate_e <- Covid_monthlyae_glmdemographicsCoviddate %>%
filter(between(date, as.Date('2021-01-01'), as.Date('2021-04-30'))) %>%
mutate(Coviddate1 = 1,
Coviddate2 = 0,
Coviddate3 = 0,
Coviddate4 = 0)
Covid_monthlyae_glmdemographicsCoviddate_f <- Covid_monthlyae_glmdemographicsCoviddate %>%
filter(between(date, as.Date('2021-05-01'), as.Date('2021-07-31'))) %>%
mutate(Coviddate1 = 0,
Coviddate2 = 0,
Coviddate3 = 1,
Coviddate4 = 0)
Covid_monthlyae_glmdemographicsCoviddate_g <- Covid_monthlyae_glmdemographicsCoviddate %>%
filter(between(date, as.Date('2021-08-01'), as.Date('2024-06-30'))) %>%
mutate(Coviddate1 = 0,
Coviddate2 = 0,
Coviddate3 = 0,
Coviddate4 = 1)
#Combining all the batches of date ranges for Covid into one dataframe
Covid_monthlyae_glmdemographicsCoviddate_all <- rbind(Covid_monthlyae_glmdemographicsCoviddate_a, Covid_monthlyae_glmdemographicsCoviddate_b)
Covid_monthlyae_glmdemographicsCoviddate_all <- rbind(Covid_monthlyae_glmdemographicsCoviddate_all, Covid_monthlyae_glmdemographicsCoviddate_c)
Covid_monthlyae_glmdemographicsCoviddate_all <- rbind(Covid_monthlyae_glmdemographicsCoviddate_all, Covid_monthlyae_glmdemographicsCoviddate_d)
Covid_monthlyae_glmdemographicsCoviddate_all <- rbind(Covid_monthlyae_glmdemographicsCoviddate_all, Covid_monthlyae_glmdemographicsCoviddate_e)
Covid_monthlyae_glmdemographicsCoviddate_all <- rbind(Covid_monthlyae_glmdemographicsCoviddate_all, Covid_monthlyae_glmdemographicsCoviddate_f)
Covid_monthlyae_glmdemographicsCoviddate_all <- rbind(Covid_monthlyae_glmdemographicsCoviddate_all, Covid_monthlyae_glmdemographicsCoviddate_g)
#When
Covid_monthlyae_glmwhen <- read_csv(here("Rawdata", "monthlyae_when_202406.csv"))
#To create a date column
#creating a new column for Year, monthnumeric and day using data from the Month column
Covid_monthlyae_glmwhen$Year <- substr(Covid_monthlyae_glmwhen$Month, 1,4)
Covid_monthlyae_glmwhen$monthnumeric <- substr(Covid_monthlyae_glmwhen$Month, 5,6)
Covid_monthlyae_glmwhen$day <- "01"
#converting from character to numeric variable
Covid_monthlyae_glmwhen$Year <- as.numeric(Covid_monthlyae_glmwhen$Year)
Covid_monthlyae_glmwhen$monthnumeric <- as.numeric(Covid_monthlyae_glmwhen$monthnumeric)
Covid_monthlyae_glmwhen$day <- as.numeric(Covid_monthlyae_glmwhen$day)
#making a date column using the Year, monthnumeric and day columns
Covid_monthlyae_glmwhen<- Covid_monthlyae_glmwhen%>%
mutate(date=make_date(Year, monthnumeric, day))
str(Covid_monthlyae_glmwhen)
#calculating total attendances
Covid_monthlyae_glmwhentotal <- Covid_monthlyae_glmwhen %>%
select(date, NumberOfAttendances) %>%
group_by(date) %>%
summarise(NumberOfAttendances=sum(NumberOfAttendances))
#calculating total attendances by day
Covid_monthlyae_glmwhenday <- Covid_monthlyae_glmwhen %>%
select(date, Day, NumberOfAttendances) %>%
group_by(date, Day) %>%
summarise(NumberOfAttendances=sum(NumberOfAttendances))
#merge day attendances with total attendances to calculate proportion
Covid_monthlyae_glmwhenday <- merge(Covid_monthlyae_glmwhenday, Covid_monthlyae_glmwhentotal, by=c("date"))
#changing column names so it is clear which is total and which is for day
colnames(Covid_monthlyae_glmwhenday)<- c("date", "Day","DayAttendances","TotalAttendances")
#to calculate the proportion for each day
Covid_monthlyae_glmwhenday$Proportions <-Covid_monthlyae_glmwhenday$DayAttendances/Covid_monthlyae_glmwhenday$TotalAttendances
Covid_monthlyae_glmwhenday <- Covid_monthlyae_glmwhenday %>% select(date,Day,Proportions)
#to change the data from a long to a wide format
Covid_monthlyae_glmwhenday <- pivot_wider(Covid_monthlyae_glmwhenday, names_from = Day, values_from = Proportions)
str(Covid_monthlyae_glmwhenday)
#calculating total attendances by hour
Covid_monthlyae_glmwhenhour <- Covid_monthlyae_glmwhen %>%
select(date, Hour, NumberOfAttendances) %>%
group_by(date, Hour) %>%
summarise(NumberOfAttendances=sum(NumberOfAttendances))
#merge hour attendances with total attendances to calculate proportion
Covid_monthlyae_glmwhenhour <- merge(Covid_monthlyae_glmwhenhour, Covid_monthlyae_glmwhentotal, by=c("date"))
#changing column names so it is clear which is total and which is for hour
colnames(Covid_monthlyae_glmwhenhour)<- c("date", "Hour","HourAttendances","TotalAttendances")
#to calculate the proportion for each hour
Covid_monthlyae_glmwhenhour$Proportions <-Covid_monthlyae_glmwhenhour$HourAttendances/Covid_monthlyae_glmwhenhour$TotalAttendances
Covid_monthlyae_glmwhenhour <- Covid_monthlyae_glmwhenhour %>% select(date,Hour,Proportions)
#to change the data from a long to a wide format
Covid_monthlyae_glmwhenhour <- pivot_wider(Covid_monthlyae_glmwhenhour, names_from = Hour, values_from = Proportions)
Covid_monthlyae_glmwhenhour <- Covid_monthlyae_glmwhenhour %>%
rename(c("Midnighttoone" = "00:00 to 00:59",
"Onetotwoam" = "01:00 to 01:59",
"Twotothreeam" = "02:00 to 02:59",
"Threetofouram" = "03:00 to 03:59",
"Fourtofiveam" = "04:00 to 04:59",
"Fivetosixam" = "05:00 to 05:59",
"Sixtosevenam" = "06:00 to 06:59",
"Seventoeightam" = "07:00 to 07:59",
"Eighttonineam" = "08:00 to 08:59",
"Ninetotenam" = "09:00 to 09:59",
"Tentoelevenam" = "10:00 to 10:59",
"Eleventonoon" = "11:00 to 11:59",
"Noontoonepm" = "12:00 to 12:59",
"Onetotwopm" = "13:00 to 13:59",
"Twotothreepm" = "14:00 to 14:59",
"Threetofourpm" = "15:00 to 15:59",
"Fourtofivepm" = "16:00 to 16:59",
"Fivetosixpm" = "17:00 to 17:59",
"Sixtosevenpm" = "18:00 to 18:59",
"Seventoeightpm" = "19:00 to 19:59",
"Eighttoninepm" = "20:00 to 20:59",
"Ninetotenpm" = "21:00 to 21:59",
"Tentoelevenpm" = "22:00 to 22:59",
"Eleventomidnight" = "23:00 to 23:59"))
str(Covid_monthlyae_glmwhenhour)
Covid_monthlyae_glmwhenmonth <- Covid_monthlyae_glmwhen %>%
select(date, monthnumeric, NumberOfAttendances) %>%
group_by(date) %>%
summarise(NumberOfAttendances=sum(NumberOfAttendances))
#adding a new column for monthnumeric
Covid_monthlyae_glmwhenmonth$monthnumeric <-as.numeric(format(Covid_monthlyae_glmwhenmonth$date, "%m"))
#To set up the proportions for each month as a separate column
Covid_monthlyae_glmwhenmonth <- Covid_monthlyae_glmwhenmonth %>%
mutate(Jan = ifelse(.$monthnumeric=='1', '1', '0'),
Feb = ifelse(.$monthnumeric=='2', '1', '0'),
March = ifelse(.$monthnumeric=='3', '1', '0'),
April = ifelse(.$monthnumeric=='4', '1', '0'),
May = ifelse(.$monthnumeric=='5', '1', '0'),
June = ifelse(.$monthnumeric=='6', '1', '0'),
July = ifelse(.$monthnumeric=='7', '1', '0'),
August = ifelse(.$monthnumeric=='8', '1', '0'),
Sept = ifelse(.$monthnumeric=='9', '1', '0'),
Oct = ifelse(.$monthnumeric=='10', '1', '0'),
Nov = ifelse(.$monthnumeric=='11', '1', '0'),
Dec = ifelse(.$monthnumeric=='12', '1', '0'))
str(Covid_monthlyae_glmwhenmonth)
Covid_monthlyae_glmwhenmonth <- Covid_monthlyae_glmwhenmonth %>%
select(date, Jan, Feb, March, April, May, June, July, August, Sept, Oct, Nov, Dec)
Covid_monthlyae_glmwhenmonth$Jan <- as.numeric(Covid_monthlyae_glmwhenmonth$Jan)
Covid_monthlyae_glmwhenmonth$Feb <- as.numeric(Covid_monthlyae_glmwhenmonth$Feb)
Covid_monthlyae_glmwhenmonth$March <- as.numeric(Covid_monthlyae_glmwhenmonth$March)
Covid_monthlyae_glmwhenmonth$April <- as.numeric(Covid_monthlyae_glmwhenmonth$April)
Covid_monthlyae_glmwhenmonth$May <- as.numeric(Covid_monthlyae_glmwhenmonth$May)
Covid_monthlyae_glmwhenmonth$June <- as.numeric(Covid_monthlyae_glmwhenmonth$June)
Covid_monthlyae_glmwhenmonth$July <- as.numeric(Covid_monthlyae_glmwhenmonth$July)
Covid_monthlyae_glmwhenmonth$August <- as.numeric(Covid_monthlyae_glmwhenmonth$August)
Covid_monthlyae_glmwhenmonth$Sept <- as.numeric(Covid_monthlyae_glmwhenmonth$Sept)
Covid_monthlyae_glmwhenmonth$Oct <- as.numeric(Covid_monthlyae_glmwhenmonth$Oct)
Covid_monthlyae_glmwhenmonth$Nov <- as.numeric(Covid_monthlyae_glmwhenmonth$Nov)
Covid_monthlyae_glmwhenmonth$Dec <- as.numeric(Covid_monthlyae_glmwhenmonth$Dec)
#Combining all the proportions data into one table using merge
#Covid_monthlyae_glmdemographicsage
#Covid_monthlyae_glmdemographicssex
#Covid_monthlyae_glmdemographicsdeprivation
#Covid_monthlyae_glmdemographicsdepttype
#Covid_monthlyae_glmdemographicsHB
#Covid_monthlyae_glmdemographicsCoviddate_all
#Covid_monthlyae_glmwhenday
#Covid_monthlyae_glmwhenhour
#Covid_monthlyae_glmwhenmonth
Covid_monthlyae_glmprop <- merge(Covid_monthlyae_glmdemographicsCoviddate_all, Covid_monthlyae_glmdemographicsdepttype, by=c("date"))
Covid_monthlyae_glmprop <- merge(Covid_monthlyae_glmprop, Covid_monthlyae_glmdemographicssex, by=c("date"))
Covid_monthlyae_glmprop <- merge(Covid_monthlyae_glmprop, Covid_monthlyae_glmdemographicsage, by=c("date"))
Covid_monthlyae_glmprop <- merge(Covid_monthlyae_glmprop, Covid_monthlyae_glmdemographicsdeprivation, by=c("date"))
Covid_monthlyae_glmprop <- merge(Covid_monthlyae_glmprop, Covid_monthlyae_glmwhenday, by=c("date"))
Covid_monthlyae_glmprop <- merge(Covid_monthlyae_glmprop, Covid_monthlyae_glmwhenmonth, by=c("date"))
Covid_monthlyae_glmprop <- merge(Covid_monthlyae_glmprop, Covid_monthlyae_glmwhenhour, by=c("date"))
Covid_monthlyae_glmprop <- merge(Covid_monthlyae_glmprop, Covid_monthlyae_glmdemographicsHB, by=c("date"))
#To include Time into the data frame
#example given: df$Time <- as.numeric(df$Date - min(df$Date)) + 1
Covid_monthlyae_glmprop <- Covid_monthlyae_glmprop %>%
mutate(Time = as.numeric(Covid_monthlyae_glmprop$date - min(Covid_monthlyae_glmprop$date)) + 1)
#To limit the GLM proportion data to Jan 2018 to Dec 2022.
Covid_monthlyae_glmprop <- Covid_monthlyae_glmprop %>%
filter(between(date, as.Date("2018-01-01"), as.Date("2022-12-31")))
#To limit the glmdemographicstotal data to Jan 2018 to Dec 2022.
Covid_monthlyae_glmdemographicstotal <- Covid_monthlyae_glmdemographicstotal %>%
filter(between(date, as.Date("2018-01-01"), as.Date("2022-12-31")))
#To limit the glmwhentotal data to Jan 2018 to Dec 2022.
Covid_monthlyae_glmwhentotal <- Covid_monthlyae_glmwhentotal %>%
filter(between(date, as.Date("2018-01-01"), as.Date("2022-12-31")))
HistogramCovid_monthlyae_glmdemographicstotal <- Covid_monthlyae_glmdemographicstotal %>%
ggplot(aes(x=NumberOfAttendances))+
geom_histogram()
save_plot("Output/HistogramCovid_monthlyae_glmdemographicstotal.svg", fig = HistogramCovid_monthlyae_glmdemographicstotal, width = 14, height = 12)
QQplotglmdemographicstotal <- Covid_monthlyae_glmdemographicstotal %>%
ggplot(aes(sample=NumberOfAttendances)) +
stat_qq() +
stat_qq_line(color=2)
save_plot("Output/QQplotglmdemographicstotal.svg", fig = QQplotglmdemographicstotal, width = 14, height = 12)
Covid_monthlyae_glmdemographicstotal %>%
pull(NumberOfAttendances) %>%
ks.test(., "pnorm", mean=mean(.), sd=sd(.))
Covidglm_Coviddate <- glm(NumberOfAttendances ~ Coviddate2 + Coviddate3 + Coviddate4,
family = poisson(link = "log"),
data = Covid_monthlyae_glmprop)
summary(Covidglm_Coviddate)
Covidglm_Coviddatesex <- glm(NumberOfAttendances ~ Coviddate2 + Coviddate3 + Coviddate4 + Male + Female,
family = poisson(link = "log"),
data = Covid_monthlyae_glmprop)
summary(Covidglm_Coviddatesex)
Covidglm_Coviddatesexage <- glm(NumberOfAttendances ~ Coviddate2 + Coviddate3 + Coviddate4 + Male + Female + Under18 + EighteentoTwentyfour + TwentyfivetoThirtynine + FortytoSixtyfour + SixtyfivetoSeventyfour,
family = poisson(link = "log"),
data = Covid_monthlyae_glmprop)
summary(Covidglm_Coviddatesexage)
Covidglm_CoviddatesexageSIMD <- glm(NumberOfAttendances ~ Coviddate2 + Coviddate3 + Coviddate4 + Male + Female + Under18 + EighteentoTwentyfour + TwentyfivetoThirtynine + FortytoSixtyfour + SixtyfivetoSeventyfour + SIMD1 + SIMD2 + SIMD3 + SIMD4 + SIMD5,
family = poisson(link = "log"),
data = Covid_monthlyae_glmprop)
summary(Covidglm_CoviddatesexageSIMD)
Covidglm_CoviddatesexageSIMDday <- glm(NumberOfAttendances ~ Coviddate2 + Coviddate3 + Coviddate4 + Male + Female + Under18 + EighteentoTwentyfour + TwentyfivetoThirtynine + FortytoSixtyfour + SixtyfivetoSeventyfour + SIMD1 + SIMD2 + SIMD3 + SIMD4 + SIMD5 + Tuesday + Wednesday + Thursday + Friday + Saturday + Sunday,
family = poisson(link = "log"),
data = Covid_monthlyae_glmprop)
summary(Covidglm_CoviddatesexageSIMDday)
Covidglm_CoviddatesexageSIMDdaytype <- glm(NumberOfAttendances ~ Coviddate2 + Coviddate3 + Coviddate4 + Male + Female + Under18 + EighteentoTwentyfour + TwentyfivetoThirtynine + FortytoSixtyfour + SixtyfivetoSeventyfour + SIMD1 + SIMD2 + SIMD3 + SIMD4 + SIMD5 + Tuesday + Wednesday + Thursday + Friday + Saturday + Sunday + ED,
family = poisson(link = "log"),
data = Covid_monthlyae_glmprop)
summary(Covidglm_CoviddatesexageSIMDdaytype)
Covidglm_CoviddatesexageSIMDdaytypehour <- glm(NumberOfAttendances ~ Coviddate2 + Coviddate3 + Coviddate4 + Male + Female + Under18 + EighteentoTwentyfour + TwentyfivetoThirtynine + FortytoSixtyfour + SixtyfivetoSeventyfour + SIMD1 + SIMD2 + SIMD3 + SIMD4 + SIMD5 + Tuesday + Wednesday + Thursday + Friday + Saturday + Sunday + ED + Midnighttoone + Twotothreeam + Threetofouram + Fourtofiveam + Fivetosixam + Sixtosevenam + Seventoeightam + Eighttonineam + Ninetotenam + Tentoelevenam + Eleventonoon + Noontoonepm + Onetotwopm + Twotothreepm + Threetofourpm + Fourtofivepm + Fivetosixpm + Sixtosevenpm + Seventoeightpm + Eighttoninepm + Ninetotenpm + Tentoelevenpm + Eleventomidnight,
family = poisson(link = "log"),
data = Covid_monthlyae_glmprop)
summary(Covidglm_CoviddatesexageSIMDdaytypehour)
Covidglm_CoviddatesexageSIMDdaytypehourHB <- glm(NumberOfAttendances ~ Coviddate2 + Coviddate3 + Coviddate4 + Male + Female + Under18 + EighteentoTwentyfour + TwentyfivetoThirtynine + FortytoSixtyfour + SixtyfivetoSeventyfour + SIMD1 + SIMD2 + SIMD3 + SIMD4 + SIMD5 + Tuesday + Wednesday + Thursday + Friday + Saturday + Sunday + ED + Midnighttoone + Twotothreeam + Threetofouram + Fourtofiveam + Fivetosixam + Sixtosevenam + Seventoeightam + Eighttonineam + Ninetotenam + Tentoelevenam + Eleventonoon + Noontoonepm + Onetotwopm + Twotothreepm + Threetofourpm + Fourtofivepm + Fivetosixpm + Sixtosevenpm + Seventoeightpm + Eighttoninepm + Ninetotenpm + Tentoelevenpm + Eleventomidnight + NHSBorders + NHSFife + NHSShetland + NHSLanarkshire + NHSDumfriesandGalloway+ NHSForthValley + NHSGrampian + NHSWesternIsles + NHSOrkney + NHSTayside + NHSGreaterGlasgowandClyde + NHSHighland + NHSLothian,
family = poisson(link = "log"),
data = Covid_monthlyae_glmprop)
summary(Covidglm_CoviddatesexageSIMDdaytypehourHB)
Covidglm_CoviddatesexageSIMDdaytypehourHBmonth <- glm(NumberOfAttendances ~ Coviddate2 + Coviddate3 + Coviddate4 + Male + Female + Under18 + EighteentoTwentyfour + TwentyfivetoThirtynine + FortytoSixtyfour + SixtyfivetoSeventyfour + SIMD1 + SIMD2 + SIMD3 + SIMD4 + SIMD5 + Tuesday + Wednesday + Thursday + Friday + Saturday + Sunday + ED + Midnighttoone + Twotothreeam + Threetofouram + Fourtofiveam + Fivetosixam + Sixtosevenam + Seventoeightam + Eighttonineam + Ninetotenam + Tentoelevenam + Eleventonoon + Noontoonepm + Onetotwopm + Twotothreepm + Threetofourpm + Fourtofivepm + Fivetosixpm + Sixtosevenpm + Seventoeightpm + Eighttoninepm + Ninetotenpm + Tentoelevenpm + Eleventomidnight + NHSBorders + NHSFife + NHSShetland + NHSLanarkshire + NHSDumfriesandGalloway+ NHSForthValley + NHSGrampian + NHSWesternIsles + NHSOrkney + NHSTayside + NHSGreaterGlasgowandClyde + NHSHighland + NHSLothian + Feb + March + April + May + June + July + August + Sept + Oct + Nov + Dec,
family = poisson(link = "log"),
data = Covid_monthlyae_glmprop)
summary(Covidglm_CoviddatesexageSIMDdaytypehourHBmonth)
Covidglm_CoviddatesexageSIMDdaytypehourHBTime <- glm(NumberOfAttendances ~ Coviddate2 + Coviddate3 + Coviddate4 + Male + Female + Under18 + EighteentoTwentyfour + TwentyfivetoThirtynine + FortytoSixtyfour + SixtyfivetoSeventyfour + SIMD1 + SIMD2 + SIMD3 + SIMD4 + SIMD5 + Tuesday + Wednesday + Thursday + Friday + Saturday + Sunday + ED + Midnighttoone + Twotothreeam + Threetofouram + Fourtofiveam + Fivetosixam + Sixtosevenam + Seventoeightam + Eighttonineam + Ninetotenam + Tentoelevenam + Eleventonoon + Noontoonepm + Onetotwopm + Twotothreepm + Threetofourpm + Fourtofivepm + Fivetosixpm + Sixtosevenpm + Seventoeightpm + Eighttoninepm + Ninetotenpm + Tentoelevenpm + Eleventomidnight + NHSBorders + NHSFife + NHSShetland + NHSLanarkshire + NHSDumfriesandGalloway+ NHSForthValley + NHSGrampian + NHSWesternIsles + NHSOrkney + NHSTayside + NHSGreaterGlasgowandClyde + NHSHighland + NHSLothian + Time,
family = poisson(link = "log"),
data = Covid_monthlyae_glmprop)
summary(Covidglm_CoviddatesexageSIMDdaytypehourHBTime)
coefficients <- coef(Covidglm_CoviddatesexageSIMDdaytypehourHBTime)
exp_coefficients <- exp(coefficients)
exp_coefficients_df <- data.frame(Estimate = exp_coefficients)
print(exp_coefficients_df)
Covidglm_CoviddatesexageSIMDdaytypeHBTimenohour <- glm(NumberOfAttendances ~ Coviddate2 + Coviddate3 + Coviddate4 + Male + Female + Under18 + EighteentoTwentyfour + TwentyfivetoThirtynine + FortytoSixtyfour + SixtyfivetoSeventyfour + SIMD1 + SIMD2 + SIMD3 + SIMD4 + SIMD5 + Tuesday + Wednesday + Thursday + Friday + Saturday + Sunday + ED + NHSBorders + NHSFife + NHSShetland + NHSLanarkshire + NHSDumfriesandGalloway+ NHSForthValley + NHSGrampian + NHSWesternIsles + NHSOrkney + NHSTayside + NHSGreaterGlasgowandClyde + NHSHighland + NHSLothian + Time,
family = poisson(link = "log"),
data = Covid_monthlyae_glmprop)
summary(Covidglm_CoviddatesexageSIMDdaytypeHBTimenohour)
coefficients <- coef(Covidglm_CoviddatesexageSIMDdaytypeHBTimenohour)
exp_coefficients <- exp(coefficients)
exp_coefficients_df <- data.frame(Estimate = exp_coefficients)
print(exp_coefficients_df)
coefficients
coefficients_df <- data.frame(Estimate = coefficients)
print(coefficients_df)
conf_intervals <- confint(Covidglm_CoviddatesexageSIMDdaytypeHBTimenohour)
exp_conf_intervals <- exp(conf_intervals)
exp_conf_intervals
glm_Coviddate_aic <- AIC(Covidglm_Coviddate)
glm_Coviddatesex_aic <- AIC(Covidglm_Coviddatesex)
glm_Coviddatesexage_aic <- AIC(Covidglm_Coviddatesexage)
glm_CoviddatesexageSIMD_aic <- AIC(Covidglm_CoviddatesexageSIMD)
glm_CoviddatesexageSIMDday_aic <- AIC(Covidglm_CoviddatesexageSIMDday)
glm_CoviddatesexageSIMDdaytype_aic <- AIC(Covidglm_CoviddatesexageSIMDdaytype)
glm_CoviddatesexageSIMDdaytypehour_aic <- AIC(Covidglm_CoviddatesexageSIMDdaytypehour)
glm_CoviddatesexageSIMDdaytypehourHB_aic <- AIC(Covidglm_CoviddatesexageSIMDdaytypehourHB)
glm_CoviddatesexageSIMDdaytypehourHBmonth_aic <- AIC(Covidglm_CoviddatesexageSIMDdaytypehourHBmonth)
glm_CoviddatesexageSIMDdaytypehourHBTime_aic <- AIC(Covidglm_CoviddatesexageSIMDdaytypehourHBTime)
glm_CoviddatesexageSIMDdaytypeHBTimenohour_aic <- AIC(Covidglm_CoviddatesexageSIMDdaytypeHBTimenohour)
glm_CoviddatesexageSIMDdaytypeHBTimenohour_aic
glm_CoviddatesexageSIMDdaytypehourHBTime_aic
glm_CoviddatesexageSIMDdaytypehourHBmonth_aic
glm_CoviddatesexageSIMDdaytypehourHB_aic
glm_CoviddatesexageSIMDdaytypehour_aic
glm_CoviddatesexageSIMDdaytype_aic
glm_CoviddatesexageSIMDday_aic
glm_CoviddatesexageSIMD_aic
glm_Coviddatesexage_aic
glm_Coviddatesex_aic
glm_Coviddate_aic
pR2(Covidglm_CoviddatesexageSIMDdaytypehourHBTime)['McFadden']
library(pscl)
pR2(Covidglm_CoviddatesexageSIMDdaytypehourHBTime)['McFadden']
pR2(Covidglm_CoviddatesexageSIMDdaytypeHBTimenohour)['McFadden']
glm_Coviddate_predictions <-predict(Covidglm_Coviddate, type = "response")
summary(glm_Coviddate_predictions)
glm_Coviddatesex_predictions <-predict(Covidglm_Coviddatesex, type = "response")
summary(glm_Coviddatesex_predictions)
glm_Coviddatesexage_predictions <-predict(Covidglm_Coviddatesexage, type = "response")
summary(glm_Coviddatesexage_predictions)
glm_CoviddatesexageSIMD_predictions <-predict(Covidglm_CoviddatesexageSIMD, type = "response")
summary(glm_CoviddatesexageSIMD_predictions)
glm_CoviddatesexageSIMDday_predictions <-predict(Covidglm_CoviddatesexageSIMDday, type = "response")
summary(glm_CoviddatesexageSIMDday_predictions)
glm_CoviddatesexageSIMDdaytype_predictions <-predict(Covidglm_CoviddatesexageSIMDdaytype, type = "response")
summary(glm_CoviddatesexageSIMDdaytype_predictions)
glm_CoviddatesexageSIMDdaytypehour_predictions <-predict(Covidglm_CoviddatesexageSIMDdaytypehour, type = "response")
summary(glm_CoviddatesexageSIMDdaytypehour_predictions)
glm_CoviddatesexageSIMDdaytypehourHB_predictions <-predict(Covidglm_CoviddatesexageSIMDdaytypehourHB, type = "response")
summary(glm_CoviddatesexageSIMDdaytypehourHB_predictions)
glm_CoviddatesexageSIMDdaytypehourHBmonth_predictions <- predict(Covidglm_CoviddatesexageSIMDdaytypehourHBmonth, type = "response")
summary(glm_CoviddatesexageSIMDdaytypehourHBmonth_predictions)
glm_CoviddatesexageSIMDdaytypehourHBTime_predictions <- predict(Covidglm_CoviddatesexageSIMDdaytypehourHBTime, type = "response")
summary(glm_CoviddatesexageSIMDdaytypehourHBTime_predictions)
glm_CoviddatesexageSIMDdaytypeHBTimenohour_predictions <- predict(Covidglm_CoviddatesexageSIMDdaytypeHBTimenohour, type = "response")
summary(glm_CoviddatesexageSIMDdaytypeHBTimenohour_predictions)
#Loading population estimate (only till 2022) csv file
Scotpopulation2018to2022Covidglmplot <- read_csv(here("Rawdata", "20240809Popestimate_HB2019_1981to2022.csv"))
#Filtering out total Scottish estimates (HB S92000003) for each year, leaving just individual HBs in the list
Scotpopulation2018to2022Covidglmplot <- Scotpopulation2018to2022Covidglmplot %>%
filter(!HB%in%"S92000003")
#Excluding population by sex, only the totals for each HB each year
Scotpopulation2018to2022Covidglmplot <- Scotpopulation2018to2022Covidglmplot %>%
filter(Sex=="All")
#Only getting the total population estimates for 2018-2022
Scotpopulation2018to2022Covidglmplot <- Scotpopulation2018to2022Covidglmplot %>%
group_by(Year) %>%
summarise(AllAges=sum(AllAges)) %>%
filter(Year=="2018"|Year=="2019"|Year=="2020"|Year=="2021"|Year=="2022") %>%
select(Year, AllAges)
#Selecting only the columns needed for glm plot and adding a column for year to join with the population data
Covid_monthlyae_glmpropglmplot <- Covid_monthlyae_glmprop %>%
select(date, NumberOfAttendances)
str(Covid_monthlyae_glmpropglmplot )
#this didn't work because date was already in date format
#Covid_monthlyae_glmpropglmplot$Year <- format(Covid_monthlyae_glmprop$date, format="%Y/%m/%d","%Y")
#used this instead
Covid_monthlyae_glmpropglmplot$Year <- as.numeric(format(Covid_monthlyae_glmprop$date,'%Y'))
#combining population data with attendance data to create the glm plot
Covid_monthlyae_glmpropglmplot <-
merge(Scotpopulation2018to2022Covidglmplot, Covid_monthlyae_glmpropglmplot, by=c("Year"))
Covid_monthlyae_glmpropglmplot <- Covid_monthlyae_glmpropglmplot %>%
mutate("glmCoviddateprediction" = glm_Coviddate_predictions/AllAges,
"glmCoviddatesexprediction" = glm_Coviddatesex_predictions/AllAges,
"glmCoviddatesexageprediction" = glm_Coviddatesexage_predictions/AllAges,
"glmCoviddatesexageSIMDprediction" = glm_CoviddatesexageSIMD_predictions/AllAges,
"glmCoviddatesexageSIMDdayprediction" = glm_CoviddatesexageSIMDday_predictions/AllAges,
"glmCoviddatesexageSIMDdaytypeprediction" = glm_CoviddatesexageSIMDdaytype_predictions/AllAges,
"glmCoviddatesexageSIMDdaytypehourprediction" = glm_CoviddatesexageSIMDdaytypehour_predictions/AllAges,
"glmCoviddatesexageSIMDdaytypehourHBprediction" = glm_CoviddatesexageSIMDdaytypehourHB_predictions/AllAges,
"glmCoviddatesexageSIMDdaytypehourHBmonthprediction" = glm_CoviddatesexageSIMDdaytypehourHBmonth_predictions/AllAges,
"glmCoviddatesexageSIMDdaytypehourHBTimeprediction" = glm_CoviddatesexageSIMDdaytypehourHBTime_predictions/AllAges,
"glmCoviddatesexageSIMDdaytypeHBTimenohourprediction" = glm_CoviddatesexageSIMDdaytypeHBTimenohour_predictions/AllAges,
"rates" = NumberOfAttendances/AllAges)
glmCoviddateprediction <- ggplot(data=Covid_monthlyae_glmpropglmplot, aes(x=date))+
labs(x="Time", y= "Attendance rate",
#title = "glmCoviddateprediction"
)+
geom_line(aes(y= rates), color = "black")+
geom_line(aes(y=glmCoviddateprediction), color = "yellow4")
save_plot("Output/glmCoviddateprediction.svg", fig = glmCoviddateprediction, width = 5, height = 5)
glmCoviddatesexprediction <- ggplot(data=Covid_monthlyae_glmpropglmplot, aes(x=date))+
labs(x="Time", y= "Attendance rate",
#title = "glmCoviddateprediction"
)+
geom_line(aes(y= rates), color = "black")+
geom_line(aes(y=glmCoviddatesexprediction), color = "red")
save_plot("Output/glmCoviddatesexprediction.svg", fig = glmCoviddatesexprediction, width = 5, height = 5)
glmCoviddatesexageprediction <- ggplot(data=Covid_monthlyae_glmpropglmplot, aes(x=date))+
labs(x="Time", y= "Attendance rate",
#title = "glmCoviddatesexageprediction"
)+
geom_line(aes(y= rates), color = "black")+
geom_line(aes(y=glmCoviddatesexageprediction), color = "blue")
save_plot("Output/glmCoviddatesexageprediction.svg", fig = glmCoviddatesexageprediction, width = 5, height = 5)
glmCoviddatesexageSIMDprediction <- ggplot(data=Covid_monthlyae_glmpropglmplot, aes(x=date))+
labs(x="Time", y= "Attendance rate",
#title = "glmCoviddatesexageSIMDprediction"
)+
geom_line(aes(y= rates), color = "black")+
geom_line(aes(y=glmCoviddatesexageSIMDprediction), color = "green")
save_plot("Output/glmCoviddatesexageSIMDprediction.svg", fig = glmCoviddatesexageSIMDprediction, width = 5, height = 5)
glmCoviddatesexageSIMDdayprediction <- ggplot(data=Covid_monthlyae_glmpropglmplot, aes(x=date))+
labs(x="Time", y= "Attendance rate",
#title = "glmCoviddatesexageSIMDdayprediction"
)+
geom_line(aes(y= rates), color = "black")+
geom_line(aes(y=glmCoviddatesexageSIMDdayprediction), color = "yellow")
save_plot("Output/glmCoviddatesexageSIMDdayprediction.svg", fig = glmCoviddatesexageSIMDdayprediction, width = 5, height = 5)
glmCoviddatesexageSIMDdaytypeprediction <- ggplot(data=Covid_monthlyae_glmpropglmplot, aes(x=date))+
labs(x="Time", y= "Attendance rate",
#title = "glmCoviddatesexageSIMDdaytypeprediction"
)+
geom_line(aes(y= rates), color = "black")+
geom_line(aes(y=glmCoviddatesexageSIMDdaytypeprediction), color = "orange")
save_plot("Output/glmCoviddatesexageSIMDdaytypeprediction.svg", fig = glmCoviddatesexageSIMDdaytypeprediction, width = 5, height = 5)
glmCoviddatesexageSIMDdaytypehourprediction <- ggplot(data=Covid_monthlyae_glmpropglmplot, aes(x=date))+
labs(x="Time", y= "Attendance rate",
#title = "glmCoviddatesexageSIMDdaytypehourprediction"
)+
geom_line(aes(y= rates), color = "black")+
geom_line(aes(y=glmCoviddatesexageSIMDdaytypehourprediction), color = "purple")
save_plot("Output/glmCoviddatesexageSIMDdaytypehourprediction.svg", fig = glmCoviddatesexageSIMDdaytypehourprediction, width = 5, height = 5)
glmCoviddatesexageSIMDdaytypehourHBprediction <- ggplot(data=Covid_monthlyae_glmpropglmplot, aes(x=date))+
labs(x="Time", y= "Attendance rate",
#title = "glmCoviddatesexageSIMDdaytypehourHBprediction"
)+
geom_line(aes(y= rates), color = "black")+
geom_line(aes(y=glmCoviddatesexageSIMDdaytypehourHBprediction), color = "brown")
save_plot("Output/glmCoviddatesexageSIMDdaytypehourHBprediction.svg", fig = glmCoviddatesexageSIMDdaytypehourHBprediction, width = 5, height = 5)
glmCoviddatesexageSIMDdaytypehourHBmonthprediction <- ggplot(data=Covid_monthlyae_glmpropglmplot, aes(x=date))+
labs(x="Time", y= "Attendance rate",
#title = "glmCoviddatesexageSIMDdaytypehourHBmonthprediction"
)+
geom_line(aes(y= rates), color = "black")+
geom_line(aes(y=glmCoviddatesexageSIMDdaytypehourHBmonthprediction), color = "salmon")
save_plot("Output/glmCoviddatesexageSIMDdaytypehourHBmonthprediction.svg", fig = glmCoviddatesexageSIMDdaytypehourHBmonthprediction, width = 5, height = 5)
glmCoviddatesexageSIMDdaytypehourHBTimeprediction <- ggplot(data=Covid_monthlyae_glmpropglmplot, aes(x=date))+
labs(x="Time", y= "Attendance rate",
#title = "glmCoviddatesexageSIMDdaytypehourHBTimeprediction"
)+
geom_line(aes(y= rates), color = "black")+
geom_line(aes(y=glmCoviddatesexageSIMDdaytypehourHBTimeprediction), color = "magenta")
save_plot("Output/glmCoviddatesexageSIMDdaytypehourHBTimeprediction.svg", fig = glmCoviddatesexageSIMDdaytypehourHBTimeprediction, width = 5, height = 5)
glmCoviddatesexageSIMDdaytypeHBTimenohourprediction <- ggplot(data=Covid_monthlyae_glmpropglmplot, aes(x=date))+
labs(x="Time", y= "Attendance rate",
#title = "glmCoviddatesexageSIMDdaytypeHBTimenohourprediction"
)+
geom_line(aes(y= rates), color = "black")+
geom_line(aes(y=glmCoviddatesexageSIMDdaytypeHBTimenohourprediction), color = "orange")
save_plot("Output/glmCoviddatesexageSIMDdaytypeHBTimenohourprediction.svg", fig = glmCoviddatesexageSIMDdaytypeHBTimenohourprediction, width = 5, height = 5)
