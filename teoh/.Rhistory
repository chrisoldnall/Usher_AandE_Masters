Glasgow_Predictvsactual_Aug23toJan24 <- ggplot(data=Glasgow_Predictvsactual_Aug23Jan24, aes(x=Month, y=Attendances, ggroup=Model, color=Model))+
geom_line()+
labs(x="Month",
y="Attendances",
col="Key:")+
theme(legend.position = "bottom")
save_plot("Output/Glasgow_predictvsactual_Aug23Jan24.svg", fig=Glasgow_Predictvsactual_Aug23toJan24, width=12, height=12)
ggplot(data = agegroupScotED, aes(x= Month, y= `Rate/100,000`, group= Age, color= Age)) +
geom_line() +
labs(
#title = "Attendance rate per 100,000 in Scottish emergency departments \nby age group",
x = "Year",
y = "Attendance rate per 100,000")+
theme(legend.position = "bottom")
ggplot(data = agegroupScotED, aes(x= Month, y= `Rate/100,000`, group= Age, color= Age)) +
geom_line() +
labs(
#title = "Attendance rate per 100,000 in Scottish emergency departments \nby age group",
x = "Year",
y = "Attendance rate per 100,000")+
theme(legend.position = "bottom")
Scot_ED_attendancerate_agegroup_legendbottom <- ggplot(data = agegroupScotED, aes(x= Month, y= `Rate/100,000`, group= Age, color= Age)) +
geom_line() +
labs(
#title = "Attendance rate per 100,000 in Scottish emergency departments \nby age group",
x = "Year",
y = "Attendance rate per 100,000")+
theme(legend.position = "bottom")
save_plot("Output/Scot_ED_attendancerate_agegroup_legendbottom.svg", fig = Scot_ED_attendancerate_agegroup, width = 12, height = 14)
Scot_ED_attendancerate_agegroup_legendbottom <- ggplot(data = agegroupScotED, aes(x= Month, y= `Rate/100,000`, group= Age, color= Age)) +
geom_line() +
labs(
#title = "Attendance rate per 100,000 in Scottish emergency departments \nby age group",
x = "Year",
y = "Attendance rate per 100,000")+
theme(legend.position = "bottom")
save_plot("Output/Scot_ED_attendancerate_agegroup_legendbottom.svg", fig = Scot_ED_attendancerate_agegroup_legendbottom, width = 12, height = 14)
ggplot(data = agegroupScotED, aes(x= Month, y= `Rate/100,000`, group= Age, color= Age)) +
geom_line() +
labs(
#title = "Attendance rate per 100,000 in Scottish emergency departments \nby age group",
x = "Year",
y = "Attendance rate per 100,000")+
theme(legend.position = "bottom", legend.text=element_text(size=3))
ggplot(data = agegroupScotED, aes(x= Month, y= `Rate/100,000`, group= Age, color= Age)) +
geom_line() +
labs(
#title = "Attendance rate per 100,000 in Scottish emergency departments \nby age group",
x = "Year",
y = "Attendance rate per 100,000")+
theme(legend.position = "bottom", legend.text=element_text(size=10))
ggplot(data = agegroupScotED, aes(x= Month, y= `Rate/100,000`, group= Age, color= Age)) +
geom_line() +
labs(
#title = "Attendance rate per 100,000 in Scottish emergency departments \nby age group",
x = "Year",
y = "Attendance rate per 100,000")+
theme(legend.position = "bottom", legend.text=element_text(size=9))
ggplot(data = agegroupScotED, aes(x= Month, y= `Rate/100,000`, group= Age, color= Age)) +
geom_line() +
labs(
#title = "Attendance rate per 100,000 in Scottish emergency departments \nby age group",
x = "Year",
y = "Attendance rate per 100,000")+
theme(legend.position = "bottom", text=element_text(size=9))
ggplot(data = agegroupScotED, aes(x= Month, y= `Rate/100,000`, group= Age, color= Age)) +
geom_line() +
theme(legend.position = "bottom", text=element_text(size=10))+
labs(
#title = "Attendance rate per 100,000 in Scottish emergency departments \nby age group",
x = "Year",
y = "Attendance rate per 100,000")
ggplot(data = agegroupScotED, aes(x= Month, y= `Rate/100,000`, group= Age, color= Age)) +
geom_line() +
theme(legend.position = "bottom", text=element_text(size=12))+
labs(
#title = "Attendance rate per 100,000 in Scottish emergency departments \nby age group",
x = "Year",
y = "Attendance rate per 100,000")
ggplot(data = agegroupScotED, aes(x= Month, y= `Rate/100,000`, group= Age, color= Age)) +
geom_line() +
theme(legend.position = "bottom", text=element_text(size=12), legend.text=element_text(size=12))+
labs(
#title = "Attendance rate per 100,000 in Scottish emergency departments \nby age group",
x = "Year",
y = "Attendance rate per 100,000")
ggplot(data = agegroupScotED, aes(x= Month, y= `Rate/100,000`, group= Age, color= Age)) +
geom_line() +
theme(legend.position = "bottom", text=element_text(size=12), legend.text=element_text(size=10))+
labs(
#title = "Attendance rate per 100,000 in Scottish emergency departments \nby age group",
x = "Year",
y = "Attendance rate per 100,000")
Scot_ED_attendancerate_agegroup_legendbottom <- ggplot(data = agegroupScotED, aes(x= Month, y= `Rate/100,000`, group= Age, color= Age)) +
geom_line() +
theme(legend.position = "bottom", text=element_text(size=12), legend.text=element_text(size=10))+
labs(
#title = "Attendance rate per 100,000 in Scottish emergency departments \nby age group",
x = "Year",
y = "Attendance rate per 100,000")
save_plot("Output/Scot_ED_attendancerate_agegroup_legendbottom.svg", fig = Scot_ED_attendancerate_agegroup_legendbottom, width = 12, height = 14)
ggplot(data = agegroupScotED, aes(x= Month, y= `Rate/100,000`, group= Age, color= Age)) +
geom_line() +
theme(axis.text.x = element_text(size=10),
axis.text.y = element_text(size=10),
axis.title.x = element_text(size=10),
axis.title.y = element_text(size=10),
legend.position = "bottom", legend.text=element_text(size=10))+
labs(
#title = "Attendance rate per 100,000 in Scottish emergency departments \nby age group",
x = "Year",
y = "Attendance rate per 100,000")
Scot_ED_attendancerate_agegroup_legendbottom <- ggplot(data = agegroupScotED, aes(x= Month, y= `Rate/100,000`, group= Age, color= Age)) +
geom_line() +
theme(axis.text.x = element_text(size=10),
axis.text.y = element_text(size=10),
axis.title.x = element_text(size=10),
axis.title.y = element_text(size=10),
legend.position = "bottom", legend.text=element_text(size=10))+
labs(
#title = "Attendance rate per 100,000 in Scottish emergency departments \nby age group",
x = "Year",
y = "Attendance rate per 100,000")
save_plot("Output/Scot_ED_attendancerate_agegroup_legendbottom.svg", fig = Scot_ED_attendancerate_agegroup_legendbottom, width = 12, height = 14)
ggplot(data = agegroupScotMIUOther, aes(x= Month, y= `Rate/100,000`, group= Age, color= Age)) +
geom_line() +
theme(axis.text.x = element_text(size=10),
axis.text.y = element_text(size=10),
axis.title.x = element_text(size=10),
axis.title.y = element_text(size=10),
legend.position = "bottom", legend.text=element_text(size=10))+
labs(
#title = "Attendance rate per 100,000 in Scottish MIU/Other by age group",
x = "Year",
y = "Attendance rate per 100,000")
Scot_MIUOther_attendancerate_agegroup_legendbottom <- ggplot(data = agegroupScotMIUOther, aes(x= Month, y= `Rate/100,000`, group= Age, color= Age)) +
geom_line() +
theme(axis.text.x = element_text(size=10),
axis.text.y = element_text(size=10),
axis.title.x = element_text(size=10),
axis.title.y = element_text(size=10),
legend.position = "bottom", legend.text=element_text(size=10))+
labs(
#title = "Attendance rate per 100,000 in Scottish MIU/Other by age group",
x = "Year",
y = "Attendance rate per 100,000")
save_plot("Output/Scot_MIUOther_attendancerate_agegroup_legendbottom.svg", fig = Scot_MIUOther_attendancerate_agegroup_legendbottom, width = 12, height = 14)
ggplot(data = agegroupScotMIUOther, aes(x= Month, y= `Rate/100,000`, group= Age, color= Age)) +
geom_line() +
theme(axis.text.x = element_text(size=10),
axis.text.y = element_text(size=10),
axis.title.x = element_text(size=10),
axis.title.y = element_text(size=12),
legend.position = "bottom", legend.text=element_text(size=10))+
labs(
#title = "Attendance rate per 100,000 in Scottish MIU/Other by age group",
x = "Year",
y = "Attendance rate per 100,000")
Scot_MIUOther_attendancerate_agegroup_legendbottom <- ggplot(data = agegroupScotMIUOther, aes(x= Month, y= `Rate/100,000`, group= Age, color= Age)) +
geom_line() +
theme(axis.text.x = element_text(size=10),
axis.text.y = element_text(size=10),
axis.title.x = element_text(size=10),
axis.title.y = element_text(size=12),
legend.position = "bottom", legend.text=element_text(size=10))+
labs(
#title = "Attendance rate per 100,000 in Scottish MIU/Other by age group",
x = "Year",
y = "Attendance rate per 100,000")
save_plot("Output/Scot_MIUOther_attendancerate_agegroup_legendbottom.svg", fig = Scot_MIUOther_attendancerate_agegroup_legendbottom, width = 12, height = 14)
Scot_MIUOther_attendancerate_agegroup_legendbottom <- ggplot(data = agegroupScotMIUOther, aes(x= Month, y= `Rate/100,000`, group= Age, color= Age)) +
geom_line() +
theme(axis.text.x = element_text(size=12),
axis.text.y = element_text(size=12),
axis.title.x = element_text(size=12),
axis.title.y = element_text(size=12),
legend.position = "bottom", legend.text=element_text(size=10))+
labs(
#title = "Attendance rate per 100,000 in Scottish MIU/Other by age group",
x = "Year",
y = "Attendance rate per 100,000")
save_plot("Output/Scot_MIUOther_attendancerate_agegroup_legendbottom.svg", fig = Scot_MIUOther_attendancerate_agegroup_legendbottom, width = 12, height = 14)
Scot_ED_attendancerate_agegroup_legendbottom <- ggplot(data = agegroupScotED, aes(x= Month, y= `Rate/100,000`, group= Age, color= Age)) +
geom_line() +
theme(axis.text.x = element_text(size=12),
axis.text.y = element_text(size=12),
axis.title.x = element_text(size=12),
axis.title.y = element_text(size=12),
legend.position = "bottom", legend.text=element_text(size=10))+
labs(
#title = "Attendance rate per 100,000 in Scottish emergency departments \nby age group",
x = "Year",
y = "Attendance rate per 100,000")
save_plot("Output/Scot_ED_attendancerate_agegroup_legendbottom.svg", fig = Scot_ED_attendancerate_agegroup_legendbottom, width = 12, height = 14)
ggplot(data = agegroupScotAE, aes(x= Month, y= `Rate/100,000`, group= Age, color= Age)) +
geom_line() +
theme(axis.text.x = element_text(size=12),
axis.text.y = element_text(size=12),
axis.title.x = element_text(size=12),
axis.title.y = element_text(size=12),
legend.position = "bottom", legend.text=element_text(size=10))+
labs(
#title = "Attendance rate per 100,000 in Scottish A&E by age group",
x = "Year",
y = "Attendance rate per 100,000")
Scot_AE_attendancerate_agegroup_legendbottom <- ggplot(data = agegroupScotAE, aes(x= Month, y= `Rate/100,000`, group= Age, color= Age)) +
geom_line() +
theme(axis.text.x = element_text(size=12),
axis.text.y = element_text(size=12),
axis.title.x = element_text(size=12),
axis.title.y = element_text(size=12),
legend.position = "bottom", legend.text=element_text(size=10))+
labs(
#title = "Attendance rate per 100,000 in Scottish A&E by age group",
x = "Year",
y = "Attendance rate per 100,000")
save_plot("Output/Scot_AE_attendancerate_agegroup_legendbottom.svg", fig = Scot_AE_attendancerate_agegroup_legendbottom, width = 12, height = 14)
ggplot(data = agegroupScotAE, aes(x= Month, y= `Rate/100,000`, group= Age, color= Age)) +
geom_line() +
theme(axis.text.x = element_text(size=12),
axis.text.y = element_text(size=12),
axis.title.x = element_text(size=12),
axis.title.y = element_text(size=12),
legend.position = "bottom", legend.text=element_text(size=10))+
labs(
#title = "Attendance rate per 100,000 in Scottish A&E by age group",
x = "Year",
y = "Attendance rate per 100,000",
col="Age")
View(percent4HwaitingbyHB2022)
View(percent4HwaitingbyHB2022)
View(ae_4HwaitingbyHB_2022reorder)
View(ae_4HwaitingbyHB_2022reorder)
library(tidyverse)
library(here)
library(readxl)
library(dplyr)
library(ggplot2)
library(lubridate)
library(sf)
library(scales)
library(sjPlot)
summary(glm_sexageSIMDdaytypehourHBTime_predictions)
#install.packages("tidyverse")
#install.packages("here")
#install.packages("dplyr")
#install.packages("ggplot2")
#install.packages("sf")
#install.packages("sjPlot")
install.packages("pscl")
library(pscl)
#McFadden's R-squared
pR2(glm_sexageSIMDdaytypehourHBTime_predictions)['McFadden']
with(summary(glm_sexageSIMDdaytypehourHBTime_predictions), 1 - deviance/null.deviance)
View(glmsexageSIMDdaytypehourHBTimeprediction)
#method two using the following calculations
with(summary(glm_sexageSIMDdaytypehourHBTime_predictions), 1 - deviance/null.deviance)
pR2(glm_sexageSIMDdaytypehourHBupdatedmonth_predictions)['McFadden']
ScotUpdatespopulation2018to2023glmplot <- HBUpdatespopulation_estimate_HBname %>%
filter(!HB%in%"S92000003") %>%
group_by(Year) %>%
summarise(AllAges=sum(AllAges)) %>%
filter(Year=="2018"|Year=="2019"|Year=="2020"|Year=="2021"|Year=="2022"|Year=="2023") %>%
select(Year, AllAges)
with(summary(glm_sexageSIMDdaytypehourHBupdatedmonth_predictions), 1 - deviance/null.deviance)
#McFadden's R-squared
#with reference to https://www.statology.org/glm-r-squared/
#method one using the package pscl
pR2(glm_sexageSIMDdaytypehourHBTime)['McFadden']
pR2(glm_sexageSIMDdaytypehourHBupdatedmonth)['McFadden']
#method two using the following equation
with(summary(glm_sexageSIMDdaytypehourHBTime), 1 - deviance/null.deviance)
with(summary(glm_sexageSIMDdaytypehourHBupdatedmonth), 1 - deviance/null.deviance)
#method two using the following equation
with(summary(glm_sexageSIMDdaytypehourHBTime), 1 - deviance/null.deviance)
with(summary(glm_sexageSIMDdaytypehourHBupdatedmonth), 1 - deviance/null.deviance)
ggplot(data = scottish_health_boardsUpdatedattendancerate2012) +
geom_sf(aes(fill = attendanceper1000pop)) +  # Plot the health board regions with fill mapped to your data
geom_sf_text(data = labels_data, aes(label = HBName), size = 3) +  # Add labels
#scale_fill_viridis_c() +  # Optional: Use a nice color scale
scale_fill_continuous(labels = label_comma(), type="viridis",
direction = -1,
limits=c(10, 35),
guide_legend(title = "Attendance rate \nper 1,000 population")) +
#labs(title = "Attendance rate per 1,000 population in 2012 \nby Scottish health board", fill = "attendanceper1000pop") +
#theme_minimal()
theme_void()
library(tidyverse)
library(here)
library(readxl)
library(dplyr)
library(ggplot2)
library(lubridate)
library(sf)
library(scales)
library(sjPlot)
ggplot(data = scottish_health_boardsUpdatedattendancerate2022) +
geom_sf(aes(fill = attendanceper1000pop)) +  # Plot the health board regions with fill mapped to your data
geom_sf_text(data = labels_data, aes(label = HBName), size = 3) +  # Add labels
#scale_fill_viridis_c() +  # Optional: Use a nice color scale
scale_fill_continuous(labels = label_comma(), type="viridis",
direction = -1,
limits=c(10, 35),
guide_legend(title = "Attendance rate \nper 1,000 population")) +
#labs(title = "Attendance rate per 1000 population in 2022 \nby Scottish health board", fill = "attendanceper1000pop") +
#theme_minimal()
theme_void()
ScottishMapUpdatedattendancerate2022 <- ggplot(data = scottish_health_boardsUpdatedattendancerate2022) +
geom_sf(aes(fill = attendanceper1000pop)) +  # Plot the health board regions with fill mapped to your data
geom_sf_text(data = labels_data, aes(label = HBName), size = 3) +  # Add labels
#scale_fill_viridis_c() +  # Optional: Use a nice color scale
scale_fill_continuous(labels = label_comma(), type="viridis",
direction = -1,
limits=c(10, 35),
guide_legend(title = "Attendance rate \nper 1,000 population")) +
#labs(title = "Attendance rate per 1000 population in 2022 \nby Scottish health board", fill = "attendanceper1000pop") +
#theme_minimal()
theme_void()
save_plot("Output/ScottishMapUpdatedattendancerate2022.svg", fig = ScottishMapUpdatedattendancerate2022, width = 12, height = 14)
ggplot(data = scottish_health_boardsUpdatedattendancerate2012) +
geom_sf(aes(fill = attendanceper1000pop)) +  # Plot the health board regions with fill mapped to your data
geom_sf_text(data = labels_data, aes(label = HBName), size = 3) +  # Add labels
#scale_fill_viridis_c() +  # Optional: Use a nice color scale
scale_fill_continuous(labels = label_comma(), type="viridis",
direction = -1,
limits=c(10, 35),
guide_legend(title = "Attendance rate \nper 1,000 population")) +
#labs(title = "Attendance rate per 1,000 population in 2012 \nby Scottish health board", fill = "attendanceper1000pop") +
#theme_minimal()
theme_void()
ScottishMapUpdatedattendancerate2012 <- ggplot(data = scottish_health_boardsUpdatedattendancerate2012) +
geom_sf(aes(fill = attendanceper1000pop)) +  # Plot the health board regions with fill mapped to your data
geom_sf_text(data = labels_data, aes(label = HBName), size = 3) +  # Add labels
#scale_fill_viridis_c() +  # Optional: Use a nice color scale
scale_fill_continuous(labels = label_comma(), type="viridis",
direction = -1,
limits=c(10, 35),
guide_legend(title = "Attendance rate \nper 1,000 population")) +
#labs(title = "Attendance rate per 1,000 population in 2012 \nby Scottish health board", fill = "attendanceper1000pop") +
#theme_minimal()
theme_void()
save_plot("Output/ScottishMapUpdatedattendancerate2012.svg", fig = ScottishMapUpdatedattendancerate2012, width = 12, height = 14)
View(ae_4HwaitingbyHB_2022reorder)
View(ae_4HwaitingbyHB_2022reorder)
library(tidyverse)
library(here)
library(readxl)
library(dplyr)
library(ggplot2)
library(lubridate)
library(sf)
library(scales)
library(sjPlot)
#Qualitative statistics for waiting times by month and HB in AE (includes ED and MIU/Other)
summary(ae_4HwaitingbyHB)
#Entry with the lowest and highest PercentageWithin4HoursAll
ae_monthly_attendance[which.min(ae_monthly_attendance$PercentageWithin4HoursAll),]
ae_monthly_attendance %>%
summarise(mean=mean(NumberOfAttendancesAll),
median = median(NumberOfAttendancesAll),
sd=sd(NumberOfAttendancesAll),
min=min(NumberOfAttendancesAll),
max=max(NumberOfAttendancesAll),
var=var(NumberOfAttendancesAll))
ae_monthly_attendance[which.max(ae_monthly_attendance$PercentageWithin4HoursAll),]
#WAITING TIMES
#Comparing 4H waiting times by HB
ae_4HwaitingbyHB <- ae_monthly_attendance %>%
group_by(NHSBoardName, MonthEndingDate) %>%
summarise(NumberOfAttendancesAll=sum(NumberOfAttendancesAll),
NumberWithin4HoursAll=sum(NumberWithin4HoursAll),
PercentageWithin4HoursAll=mean(PercentageWithin4HoursAll))
#Qualitative statistics for waiting times by month and HB in AE (includes ED and MIU/Other)
summary(ae_4HwaitingbyHB)
#rounding up percent4Hr to 1 decimal point
ae_4HwaitingbyHB_2022$percent4Hr<-round(ae_4HwaitingbyHB_2022$percent4Hr,digits = 3)
#rounding up percent4Hr to 1 decimal point
ae_4HwaitingbyHB_2022$percent4Hr<-round(ae_4HwaitingbyHB_2022$percent4Hr,digits = 3)
ae_4HwaitingbyHB_2022reorder <- ae_4HwaitingbyHB_2022 %>%
mutate(NHSBoardName = fct_reorder(NHSBoardName, percent4Hr)) #to reorder by value
percent4HwaitingbyHB2022 <- ggplot(ae_4HwaitingbyHB_2022reorder, aes(x=NHSBoardName, y=percent4Hr)) +
geom_col()+
geom_text(aes(label=percent4Hr), hjust = -0.2, size=2.5)+
coord_flip()+
labs(
#title = "Percentage A&E attendances seen within 4 hours by \nScottish Health Boards in 2022",
y = "Percentage A&E attendances seen within 4 hours",
x = "NHS Health Board")
save_plot("Output/percent4HwaitingbyHB2022.svg", fig = percent4HwaitingbyHB2022, width = 19, height = 14)
View(percent4HwaitingbyHB2022)
View(ae_4HwaitingbyHB_2022reorder)
View(ae_4HwaitingbyHB_2022)
#rounding up percent4Hr to 1 decimal point
ae_4HwaitingbyHB_2022$percent4Hr<-round(ae_4HwaitingbyHB_2022$percent4Hr,digits = 3)
View(ae_4HwaitingbyHB_2022)
#WAITING TIMES
#Comparing 4H waiting times by HB
ae_4HwaitingbyHB <- ae_monthly_attendance %>%
group_by(NHSBoardName, MonthEndingDate) %>%
summarise(NumberOfAttendancesAll=sum(NumberOfAttendancesAll),
NumberWithin4HoursAll=sum(NumberWithin4HoursAll),
PercentageWithin4HoursAll=mean(PercentageWithin4HoursAll))
ae_4HwaitingbyHB$Year<-as.numeric(format(ae_4HwaitingbyHB$MonthEndingDate, "%Y"))
ae_4HwaitingbyHB_2022<-ae_4HwaitingbyHB %>%
filter(Year=="2022")
ae_4HwaitingbyHB_2022<- ae_4HwaitingbyHB_2022 %>%
select(NHSBoardName, NumberOfAttendancesAll, NumberWithin4HoursAll) %>%
group_by(NHSBoardName)%>%
summarise(NumberOfAttendancesAll=sum(NumberOfAttendancesAll),
NumberWithin4HoursAll=sum(NumberWithin4HoursAll))
#counting the percentages for within 4 hours
ae_4HwaitingbyHB_2022$percent4Hr<-ae_4HwaitingbyHB_2022$NumberWithin4HoursAll/ae_4HwaitingbyHB_2022$NumberOfAttendancesAll
ae_4HwaitingbyHB_2022$percent4Hr<-ae_4HwaitingbyHB_2022$percent4Hr*100
#rounding up percent4Hr to 1 decimal point
ae_4HwaitingbyHB_2022$percent4Hr<-round(ae_4HwaitingbyHB_2022$percent4Hr,digits = 3)
View(ae_4HwaitingbyHB_2022)
ae_4HwaitingbyHB_2022reorder <- ae_4HwaitingbyHB_2022 %>%
mutate(NHSBoardName = fct_reorder(NHSBoardName, percent4Hr)) #to reorder by value
percent4HwaitingbyHB2022 <- ggplot(ae_4HwaitingbyHB_2022reorder, aes(x=NHSBoardName, y=percent4Hr)) +
geom_col()+
geom_text(aes(label=percent4Hr), hjust = -0.2, size=2.5)+
coord_flip()+
labs(
#title = "Percentage A&E attendances seen within 4 hours by \nScottish Health Boards in 2022",
y = "Percentage A&E attendances seen within 4 hours",
x = "NHS Health Board")
save_plot("Output/percent4HwaitingbyHB2022.svg", fig = percent4HwaitingbyHB2022, width = 19, height = 14)
percent4HwaitingbyHB2022 <- ggplot(ae_4HwaitingbyHB_2022reorder, aes(x=NHSBoardName, y=percent4Hr)) +
geom_col()+
geom_text(aes(label=percent4Hr), hjust = -0.2, size=2.5)+
coord_flip()+
labs(
#title = "Percentage A&E attendances seen within 4 hours by \nScottish Health Boards in 2022",
y = "Percentage A&E attendances seen within 4 hours",
x = "NHS Health Board")
save_plot("Output/percent4HwaitingbyHB2022.svg", fig = percent4HwaitingbyHB2022, width = 21, height = 14)
percent4HwaitingbyHB2022 <- ggplot(ae_4HwaitingbyHB_2022reorder, aes(x=NHSBoardName, y=percent4Hr)) +
geom_col()+
geom_text(aes(label=percent4Hr), hjust = -0.2, size=2.5)+
coord_flip()+
labs(
#title = "Percentage A&E attendances seen within 4 hours by \nScottish Health Boards in 2022",
y = "Percentage A&E attendances seen within 4 hours",
x = "NHS Health Board")
save_plot("Output/percent4HwaitingbyHB2022.svg", fig = percent4HwaitingbyHB2022, width = 23, height = 14)
percent4HwaitingbyHB2022 <- ggplot(ae_4HwaitingbyHB_2022reorder, aes(x=NHSBoardName, y=percent4Hr)) +
geom_col()+
geom_text(aes(label=percent4Hr), hjust = -0.2, size=2.5)+
coord_flip()+
labs(
#title = "Percentage A&E attendances seen within 4 hours by \nScottish Health Boards in 2022",
y = "Percentage A&E attendances seen within 4 hours",
x = "NHS Health Board")
save_plot("Output/percent4HwaitingbyHB2022.svg", fig = percent4HwaitingbyHB2022, width = 26, height = 14)
percent4HwaitingbyHB2022 <- ggplot(ae_4HwaitingbyHB_2022reorder, aes(x=NHSBoardName, y=percent4Hr)) +
geom_col()+
geom_text(aes(label=percent4Hr), hjust = -0.2, size=2.5)+
coord_flip()+
labs(
#title = "Percentage A&E attendances seen within 4 hours by \nScottish Health Boards in 2022",
y = "Percentage A&E attendances seen within 4 hours",
x = "NHS Health Board")
save_plot("Output/percent4HwaitingbyHB2022.svg", fig = percent4HwaitingbyHB2022, width = 28, height = 14)
View(ae_4HwaitingbyHB_2012)
View(ae_4HwaitingbyHB_2022)
ae_4HwaitingbyHB_2012 <-ae_4HwaitingbyHB %>%
filter(Year=="2012")
ae_4HwaitingbyHB_2012<- ae_4HwaitingbyHB_2012 %>%
select(NHSBoardName, NumberOfAttendancesAll, NumberWithin4HoursAll) %>%
group_by(NHSBoardName)%>%
summarise(NumberOfAttendancesAll=sum(NumberOfAttendancesAll),
NumberWithin4HoursAll=sum(NumberWithin4HoursAll))
#counting the percentages for within 4 hours
ae_4HwaitingbyHB_2012$percent4Hr<-ae_4HwaitingbyHB_2012$NumberWithin4HoursAll/ae_4HwaitingbyHB_2012$NumberOfAttendancesAll
ae_4HwaitingbyHB_2012$percent4Hr<-ae_4HwaitingbyHB_2012$percent4Hr*100
#rounding up percent4Hr to 1 decimal point
ae_4HwaitingbyHB_2012$percent4Hr<-round(ae_4HwaitingbyHB_2012$percent4Hr,digits = 3)
View(ae_4HwaitingbyHB_2012)
View(ae_4HwaitingbyHB_2022)
#Creating a dataframe with 2022 attendance rate data
ae_byboard_Updatedpopulation_2022 <- ae_byboard_Updatedpopulation %>%
filter(Year=="2022")
ae_byboard_Updatedpopulation_2022<- ae_byboard_Updatedpopulation_2022 %>%
select(HBName, Year, NumberOfAttendancesAll, AllAges) %>%
group_by(HBName, Year) %>%
summarise(NumberOfAttendancesAll = sum(NumberOfAttendancesAll),
AllAges = sum(AllAges))
#Calculating attendance rate per pop in 2022 using Chris's updated estimate
ae_byboard_Updatedpopulation_2022$attendanceperpop<-ae_byboard_Updatedpopulation_2022$NumberOfAttendancesAll/ae_byboard_Updatedpopulation_2022$AllAges
#Calculating attendance per 1,000 population using Chris's updated population estimate
ae_byboard_Updatedpopulation_2022$attendanceper1000pop<-ae_byboard_Updatedpopulation_2022$attendanceperpop*1000
#rounding up attendanceper1000pop to 1 decimal point
ae_byboard_Updatedpopulation_2022$attendanceper1000pop<-round(ae_byboard_Updatedpopulation_2022$attendanceper1000pop,digits = 3)
View(ae_byboard_Updatedpopulation_2022)
#Creating a dataframe with 2012 attendance rate data
ae_byboard_Updatedpopulation_2012 <- ae_byboard_Updatedpopulation %>%
filter(Year=="2012")
ae_byboard_Updatedpopulation_2012<- ae_byboard_Updatedpopulation_2012 %>%
select(HBName, Year, NumberOfAttendancesAll, AllAges) %>%
group_by(HBName, Year) %>%
summarise(NumberOfAttendancesAll = sum(NumberOfAttendancesAll),
AllAges = sum(AllAges))
#Calculating attendance rate per pop in 2012 using Chris's updated estimate
ae_byboard_Updatedpopulation_2012$attendanceperpop<-ae_byboard_Updatedpopulation_2012$NumberOfAttendancesAll/ae_byboard_Updatedpopulation_2012$AllAges
#Calculating attendance per 1,000 population using Chris's updated population estimate
ae_byboard_Updatedpopulation_2012$attendanceper1000pop<-ae_byboard_Updatedpopulation_2012$attendanceperpop*1000
#rounding up attendanceper1000pop to 1 decimal point
ae_byboard_Updatedpopulation_2012$attendanceper1000pop<-round(ae_byboard_Updatedpopulation_2012$attendanceper1000pop,digits = 3)
View(ae_byboard_Updatedpopulation_2012)
summary(ae_monthly_attendance)
#Summary split by ED and MIU/Other
ae_monthly_attendance %>%filter(DepartmentType == 'ED')%>%summary()
