Neteffect_age$monthnumeric <- as.numeric(Neteffect_age$monthnumeric)
Neteffect_age$day <- as.numeric(Neteffect_age$day)
#making a date column using the Year, monthnumeric and day columns
Neteffect_age<- Neteffect_age %>%
mutate(date=make_date(Year, monthnumeric, day))
View(Neteffect_sexdiff)
View(Neteffect_agediff)
#changing column names so it is clear it is for diff
colnames(Neteffect_agediff)<- c(EighteentoTwentyfourdiff, TwentyfivetoThirtyninediff, FortytoSixtyfourdiff, SixtyfivetoSeventyfourdiff, Seventyfiveplusdiff, Undereighteendiff, UnknownAgediff)
View(Neteffect_agediff)
#creating a dataframe to calculate the difference in proportions
Neteffect_agediff <- Neteffect_age %>%
select(EighteentoTwentyfour, TwentyfivetoThirtynine, FortytoSixtyfour, SixtyfivetoSeventyfour, Seventyfiveplus, Undereighteen, UnknownAge)
#to calculate the difference in proportions
Neteffect_agediff <- sapply(Neteffect_agediff, diff)
#to add a row for the first line of zero
firstdiffline_age <- c(0, 0, 0, 0, 0, 0, 0)
#to combine the line of zero with the proportion differences
Neteffect_agediff <- rbind(firstdiffline_age, Neteffect_agediff)
View(Neteffect_agediff)
#changing column names so it is clear it is for diff
colnames(Neteffect_agediff)<- c(EighteentoTwentyfourdiff, TwentyfivetoThirtyninediff, FortytoSixtyfourdiff, SixtyfivetoSeventyfourdiff, Seventyfiveplusdiff, Undereighteendiff, UnknownAgediff)
View(Neteffect_agediff)
View(Neteffect_agediff)
##AGE
#Net effect of age on attendances
Neteffect_age <- Covid_AE_Prop_Time_Pivot_GLM %>%
select(Month, EighteentoTwentyfour, TwentyfivetoThirtynine, FortytoSixtyfour, SixtyfivetoSeventyfour, Seventyfiveplus, Undereighteen, UnknownAge)
#To create a date column
#creating a new column for Year, monthnumeric and day using data from the Month column
Neteffect_age$Year <- substr(Neteffect_age$Month, 1,4)
Neteffect_age$monthnumeric <- substr(Neteffect_age$Month, 5,6)
Neteffect_age$day <- "01"
#converting from character to numeric variable
Neteffect_age$Year <- as.numeric(Neteffect_age$Year)
Neteffect_age$monthnumeric <- as.numeric(Neteffect_age$monthnumeric)
Neteffect_age$day <- as.numeric(Neteffect_age$day)
#making a date column using the Year, monthnumeric and day columns
Neteffect_age<- Neteffect_age %>%
mutate(date=make_date(Year, monthnumeric, day))
#creating a dataframe to calculate the difference in proportions
Neteffect_agediff <- Neteffect_age %>%
select(EighteentoTwentyfour, TwentyfivetoThirtynine, FortytoSixtyfour, SixtyfivetoSeventyfour, Seventyfiveplus, Undereighteen, UnknownAge)
View(Neteffect_agediff)
#to calculate the difference in proportions
Neteffect_agediff <- sapply(Neteffect_agediff, diff)
View(Neteffect_agediff)
#to add a row for the first line of zero
firstdiffline_age <- c(0, 0, 0, 0, 0, 0, 0)
#to combine the line of zero with the proportion differences
Neteffect_agediff <- rbind(firstdiffline_age, Neteffect_agediff)
View(Neteffect_agediff)
#changing column names so it is clear it is for diff
colnames(Neteffect_agediff)<- c("EighteentoTwentyfourdiff", "TwentyfivetoThirtyninediff", "FortytoSixtyfourdiff", "SixtyfivetoSeventyfourdiff", "Seventyfiveplusdiff", "Undereighteendiff", "UnknownAgediff")
View(Neteffect_agediff)
#Combine original Neteffect_sex dataframe to contain the proportion differences
Neteffect_age <- cbind(Neteffect_age, Neteffect_agediff)
View(Neteffect_age)
#Calculate diff for male and female. Then times the coefficient. Then add it and then overall exponentiation.
#Calculating the coefficient times proportion for males, females and unknownsex
Undereighteencoeff <- 2.594
Neteffect_age$coeffpropUndereighteen <- Neteffect_age$Undereighteendiff*Undereighteencoeff
EighteentoTwentyfourcoeff <- 2.478
Neteffect_age$coeffpropEighteentoTwentyfour <-Neteffect_age$EighteentoTwentyfourdiff*EighteentoTwentyfourcoeff
TwentyfivetoThirtyninecoeff <- -3.873
Neteffect_age$coeffpropTwentyfivetoThirtynine <- Neteffect_age$TwentyfivetoThirtyninediff*TwentyfivetoThirtyninecoeff
FortytoSixtyfourcoeff <- 2.599
Neteffect_age$coeffpropFortytoSixtyfour <- Neteffect_age$FortytoSixtyfourdiff*FortytoSixtyfourcoeff
Seventyfivepluscoeff <- 4.365
Neteffect_age$coeffpropSeventyfiveplus <- Neteffect_age$Seventyfiveplusdiff*Seventyfivepluscoeff
#sum of the coefficient times proportion for all ages
Neteffect_age$coeffpropallages<- Neteffect_age$coeffpropUndereighteen + Neteffect_age$coeffpropEighteentoTwentyfour + Neteffect_age$coeffpropTwentyfivetoThirtynine + Neteffect_age$coeffpropFortytoSixtyfour +
#Neteffect_age$coeffpropSixtyfivetoSeventyfour +
Neteffect_age$coeffpropSeventyfiveplus
#exponentiating the sum of the coefficient times proportion for all ages
Neteffect_age$expcoeffpropallages <- exp(Neteffect_age$coeffpropallages)
ggplot(data=Neteffect_age, aes(x=date, y=expcoeffpropallages))+
geom_line()+
labs(title="Net effect of age on total attendances over time",
x = "Date",
y = "Net effect on attendances")
Neteffect_age_plot <- ggplot(data=Neteffect_age, aes(x=date, y=expcoeffpropallages))+
geom_line()+
labs(title="Net effect of age on total attendances over time",
x = "Date",
y = "Net effect on attendances")
save_plot("Output/Neteffect_age_plot.svg", fig=Neteffect_age_plot, width=14, height=12)
library(tidyverse)
library(here)
library(readxl)
library(dplyr)
library(ggplot2)
library(lubridate)
library(sf)
library(scales)
library(sjPlot)
library(pscl)
library(flexmix)
#Net effect of SIMD on attendances
Neteffect_simd <- Covid_AE_Prop_Time_Pivot_GLM %>%
select(Month, SIMD1, SIMD2, SIMD3, SIMD4, SIMD5, UnknownSIMD)
#To create a date column
#creating a new column for Year, monthnumeric and day using data from the Month column
Neteffect_simd$Year <- substr(Neteffect_simd$Month, 1,4)
Neteffect_simd$monthnumeric <- substr(Neteffect_simd$Month, 5,6)
Neteffect_simd$day <- "01"
#converting from character to numeric variable
Neteffect_simd$Year <- as.numeric(Neteffect_simd$Year)
Neteffect_simd$monthnumeric <- as.numeric(Neteffect_simd$monthnumeric)
Neteffect_simd$day <- as.numeric(Neteffect_simd$day)
#making a date column using the Year, monthnumeric and day columns
Neteffect_simd<- Neteffect_simd %>%
mutate(date=make_date(Year, monthnumeric, day))
View(Neteffect_simd)
#creating a dataframe to calculate the difference in proportions
Neteffect_simddiff <- Neteffect_simd %>%
select(SIMD1, SIMD2, SIMD3, SIMD4, SIMD5, UnknownSIMD)
#to calculate the difference in proportions
Neteffect_simddiff <- sapply(Neteffect_simddiff, diff)
View(Neteffect_simddiff)
#to add a row for the first line of zero
firstdiffline_simd <- c(0, 0, 0, 0, 0, 0)
#to combine the line of zero with the proportion differences
Neteffect_simddiff <- rbind(firstdiffline_simd, Neteffect_simddiff)
View(Neteffect_simddiff)
#changing column names so it is clear it is for diff
colnames(Neteffect_simddiff)<- c("SIMD1diff", "SIMD2diff", "SIMD3diff", "SIMD4diff", "SIMD5diff", "UnknownSIMDdiff")
View(Neteffect_simddiff)
#Combine original Neteffect_sex dataframe to contain the proportion differences
Neteffect_simd <- cbind(Neteffect_simd, Neteffect_simddiff)
View(Neteffect_simd)
#Calculate diff for each simd. Then times the coefficient. Then add it and then overall exponentiation.
#Calculating the coefficient times proportion for each simd
SIMD1coeff <- -5.219
Neteffect_simd$coeffpropSIMD1 <-  Neteffect_simd$SIMD1diff*SIMD1coeff
SIMD2coeff <-  -3.753
Neteffect_simd$coeffpropSIMD2 <-  Neteffect_simd$SIMD2diff*SIMD2coeff
SIMD3coeff <-  -8.404
Neteffect_simd$coeffpropSIMD3 <-  Neteffect_simd$SIMD3diff*SIMD3coeff
SIMD4coeff <-  -13.32
Neteffect_simd$coeffpropSIMD4 <-  Neteffect_simd$SIMD4diff*SIMD4coeff
SIMD5coeff <-  -0.7546
Neteffect_simd$coeffpropSIMD5 <-  Neteffect_simd$SIMD5diff*SIMD5coeff
#sum of the coefficient times proportion for males and females
Neteffect_simd$coeffpropallSIMD <- Neteffect_simd$coeffpropSIMD1 + Neteffect_simd$coeffpropSIMD2 + Neteffect_simd$coeffpropSIMD3 + Neteffect_simd$coeffpropSIMD4 + Neteffect_simd$coeffpropSIMD5
View(Neteffect_simd)
#exponentiating the sum of the coefficient times proportion for simd
Neteffect_simd$expcoeffpropallSIMD <- exp(Neteffect_simd$coeffpropallSIMD)
View(Neteffect_simd)
ggplot(data=Neteffect_simd, aes(x=date, y=expcoeffpropallSIMD))+
geom_line()+
labs(title="Net effect of simd on total attendances over time",
x = "Date",
y = "Net effect on attendances")
Neteffect_simd_plot <- ggplot(data=Neteffect_simd, aes(x=date, y=expcoeffpropallSIMD))+
geom_line()+
labs(title="Net effect of SIMD on total attendances over time",
x = "Date",
y = "Net effect on attendances")
save_plot("Output/Neteffect_simd_plot.svg", fig=Neteffect_simd_plot, width=14, height=12)
#Net effect of department type on attendances
Neteffect_type <- Covid_AE_Prop_Time_Pivot_GLM %>%
select(Month, ED, MIU)
#To create a date column
#creating a new column for Year, monthnumeric and day using data from the Month column
Neteffect_type$Year <- substr(Neteffect_type$Month, 1,4)
Neteffect_type$monthnumeric <- substr(Neteffect_type$Month, 5,6)
Neteffect_type$day <- "01"
#converting from character to numeric variable
Neteffect_type$Year <- as.numeric(Neteffect_type$Year)
Neteffect_type$monthnumeric <- as.numeric(Neteffect_type$monthnumeric)
Neteffect_type$day <- as.numeric(Neteffect_type$day)
#making a date column using the Year, monthnumeric and day columns
Neteffect_type<- Neteffect_type %>%
mutate(date=make_date(Year, monthnumeric, day))
View(Neteffect_type)
#creating a dataframe to calculate the difference in proportions
Neteffect_typediff <- Neteffect_type %>%
select(ED, MIU)
#to calculate the difference in proportions
Neteffect_typediff <- sapply(Neteffect_typediff, diff)
#to add a row for the first line of zero
firstdiffline_type <- c(0, 0)
View(Neteffect_typediff)
#to combine the line of zero with the proportion differences
Neteffect_typediff <- rbind(firstdiffline_type, Neteffect_typediff)
#changing column names so it is clear it is for diff
colnames(Neteffect_typediff)<- c("EDdiff", "MIUdiff")
View(Neteffect_typediff)
#Combine original Neteffect_type dataframe to contain the proportion differences
Neteffect_type <- cbind(Neteffect_type, Neteffect_typediff)
View(Neteffect_type)
#Calculate diff for each type. Then times the coefficient. Then add it and then overall exponentiation.
#Calculating the coefficient times proportion for each type
EDcoeff <- -1.367
Neteffect_type$coeffpropED <-  Neteffect_type$EDdiff*EDcoeff
#sum of the coefficient times proportion for each department type
Neteffect_type$coeffpropalltype <- Neteffect_type$coeffpropED
#exponentiating the sum of the coefficient times proportion for type
Neteffect_type$expcoeffpropalltype <- exp(Neteffect_type$coeffpropalltype)
View(Neteffect_typediff)
View(Neteffect_type)
ggplot(data=Neteffect_type, aes(x=date, y=expcoeffpropalltype))+
geom_line()+
labs(title="Net effect of department type on total attendances over time",
x = "Date",
y = "Net effect on attendances")
Neteffect_type_plot <- ggplot(data=Neteffect_type, aes(x=date, y=expcoeffpropalltype))+
geom_line()+
labs(title="Net effect of department type on total attendances over time",
x = "Date",
y = "Net effect on attendances")
save_plot("Output/Neteffect_type_plot.svg", fig=Neteffect_type_plot, width=14, height=12)
#HEALTH BOARD
#Net effect of health board on attendances
Neteffect_hb <- Covid_AE_Prop_Time_Pivot_GLM %>%
select(Month, NHSAyshireandArran, NHSBorders, NHSDumfriesandGalloway, NHSForthValley, NHSGrampian, NHSHighland, NHSLothian, NHSOrkney, NHSShetland, NHSWesternIsles, NHSFife, NHSTayside, NHSGreaterGlasgowandClyde, NHSLanarkshire)
#HEALTH BOARD
#Net effect of health board on attendances
Neteffect_hb <- Covid_AE_Prop_Time_Pivot_GLM %>%
select(Month, NHSAyrshireandArran, NHSBorders, NHSDumfriesandGalloway, NHSForthValley, NHSGrampian, NHSHighland, NHSLothian, NHSOrkney, NHSShetland, NHSWesternIsles, NHSFife, NHSTayside, NHSGreaterGlasgowandClyde, NHSLanarkshire)
#To create a date column
#creating a new column for Year, monthnumeric and day using data from the Month column
Neteffect_hb$Year <- substr(Neteffect_hb$Month, 1,4)
Neteffect_hb$monthnumeric <- substr(Neteffect_hb$Month, 5,6)
Neteffect_hb$day <- "01"
#converting from character to numeric variable
Neteffect_hb$Year <- as.numeric(Neteffect_hb$Year)
Neteffect_hb$monthnumeric <- as.numeric(Neteffect_hb$monthnumeric)
Neteffect_hb$day <- as.numeric(Neteffect_hb$day)
#making a date column using the Year, monthnumeric and day columns
Neteffect_hb<- Neteffect_hb %>%
mutate(date=make_date(Year, monthnumeric, day))
View(Neteffect_hb)
#creating a dataframe to calculate the difference in proportions
Neteffect_hbdiff <- Neteffect_hb %>%
select(NHSAyrshireandArran, NHSBorders, NHSDumfriesandGalloway, NHSForthValley, NHSGrampian, NHSHighland, NHSLothian, NHSOrkney, NHSShetland, NHSWesternIsles, NHSFife, NHSTayside, NHSGreaterGlasgowandClyde, NHSLanarkshire)
#to calculate the difference in proportions
Neteffect_hbdiff <- sapply(Neteffect_hbdiff, diff)
View(Neteffect_hbdiff)
#to add a row for the first line of zero
firstdiffline_hb <- c(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0)
#to combine the line of zero with the proportion differences
Neteffect_hbdiff <- rbind(firstdiffline_hb, Neteffect_hbdiff)
#changing column names so it is clear it is for diff
colnames(Neteffect_hbdiff)<- c("NHSAyrshireandArrandiff", "NHSBordersdiff", "NHSDumfriesandGallowaydiff", "NHSForthValleydiff", "NHSGrampiandiff", "NHSHighlanddiff", "NHSLothiandiff", "NHSOrkneydiff", "NHSShetlanddiff", "NHSWesternIslesdiff", "NHSFifediff", "NHSTaysidediff", "NHSGreaterGlasgowandClydediff", "NHSLanarkshirediff")
#Combine original Neteffect_hb dataframe to contain the proportion differences
Neteffect_hb <- cbind(Neteffect_hb, Neteffect_hbdiff)
View(Neteffect_hb)
#Calculate diff for each hb. Then times the coefficient. Then add it and then overall exponentiation.
#Calculating the coefficient times proportion for each hb
NHSAyrshireandArrancoeff <- 15.47
Neteffect_hb$coeffpropNHSAyrshireandArran <-  Neteffect_hb$NHSAyrshireandArrandiff*NHSAyrshireandArrancoeff
NHSBorderscoeff <-  -7.949
Neteffect_hb$coeffpropNHSBorders <-  Neteffect_hb$NHSBordersdiff*NHSBorderscoeff
NHSFifecoeff <-  4.307
Neteffect_hb$coeffpropNHSFife <-  Neteffect_hb$NHSFifediff*NHSFifecoeff
NHSDumfriesandGallowaycoeff <-  0.4295
Neteffect_hb$coeffpropNHSDumfriesandGalloway <-  Neteffect_hb$NHSDumfriesandGallowaydiff*SNHSDumfriesandGallowaycoeff
Neteffect_hb$coeffpropNHSDumfriesandGalloway <-  Neteffect_hb$NHSDumfriesandGallowaydiff*NHSDumfriesandGallowaycoeff
NHSForthValleycoeff <-  18.46
Neteffect_hb$coeffpropNHSForthValley <-  Neteffect_hb$NHSForthValleydiff*NHSForthValleycoeff
NHSGrampiancoeff <-  -1.458
Neteffect_hb$coeffpropNHSGrampian <-  Neteffect_hb$NHSGrampiandiff*NHSGrampiancoeff
NHSHighlandcoeff <-  7.609
Neteffect_hb$coeffpropNHSHighland <-  Neteffect_hb$NHSHighlanddiff*NHSHighlandcoeff
NHSOrkneycoeff <-  59.08
Neteffect_hb$coeffpropNHSOrkney <-  Neteffect_hb$NHSOrkneydiff*NHSOrkneycoeff
NHSShetlandcoeff <-  -20.99
Neteffect_hb$coeffpropNHSShetland <-  Neteffect_hb$NHSShetlanddiff*NHSShetlandcoeff
NHSWesternIslescoeff <-  11.69
Neteffect_hb$coeffpropNHSWesternIsles <-  Neteffect_hb$NHSWesternIslesdiff*NHSWesternIslescoeff
NHSTaysidecoeff <-  13.75
Neteffect_hb$coeffpropNHSTayside <-  Neteffect_hb$NHSTaysidediff*NHSTaysidecoeff
NHSGreaterGlasgowandClydecoeff <-  14.48
Neteffect_hb$coeffpropNHSGreaterGlasgowandClyde <-  Neteffect_hb$NHSGreaterGlasgowandClydediff*NHSGreaterGlasgowandClydecoeff
NHSLanarkshirecoeff <-  10.06
Neteffect_hb$coeffpropNHSLanarkshire <-  Neteffect_hb$NHSLanarkshirediff*NHSLanarkshirecoeff
#sum of the coefficient times proportion for all SIMD
Neteffect_hb$coeffpropallhb <- Neteffect_hb$coeffpropNHSAyrshireandArran + Neteffect_hb$coeffpropNHSBorders + Neteffect_hb$coeffpropNHSFife + Neteffect_hb$coeffpropNHSDumfriesandGalloway + Neteffect_hb$coeffpropNHSForthValley + Neteffect_hb$coeffpropNHSGrampian + Neteffect_hb$coeffpropNHSHighland + Neteffect_hb$coeffpropNHSOrkney + Neteffect_hb$coeffpropNHSShetland + Neteffect_hb$coeffpropNHSWesternIsles + Neteffect_hb$coeffpropNHSTayside + Neteffect_hb$coeffpropNHSGreaterGlasgowandClyde + Neteffect_hb$coeffpropNHSLanarkshire
#exponentiating the sum of the coefficient times proportion for simd
Neteffect_hb$expcoeffpropallhb <- exp(Neteffect_hb$coeffpropallhb)
View(Neteffect_hb)
ggplot(data=Neteffect_hb, aes(x=date, y=expcoeffpropallhb))+
geom_line()+
labs(title="Net effect of health board on total attendances over time",
x = "Date",
y = "Net effect on attendances")
Neteffect_hb_plot <- ggplot(data=Neteffect_hb, aes(x=date, y=expcoeffpropallhb))+
geom_line()+
labs(title="Net effect of health board on total attendances over time",
x = "Date",
y = "Net effect on attendances")
save_plot("Output/Neteffect_hb_plot.svg", fig=Neteffect_hb_plot, width=14, height=12)
#Net effect of day of the week on attendances
Neteffect_day <- Covid_AE_Prop_Time_Pivot_GLM %>%
select(Month, Monday, Tuesday, Wednesday, Thursday, Friday, Saturday, Sunday)
#To create a date column
#creating a new column for Year, monthnumeric and day using data from the Month column
Neteffect_day$Year <- substr(Neteffect_day$Month, 1,4)
Neteffect_day$monthnumeric <- substr(Neteffect_day$Month, 5,6)
Neteffect_day$day <- "01"
#converting from character to numeric variable
Neteffect_day$Year <- as.numeric(Neteffect_day$Year)
Neteffect_day$monthnumeric <- as.numeric(Neteffect_day$monthnumeric)
Neteffect_day$day <- as.numeric(Neteffect_day$day)
#making a date column using the Year, monthnumeric and day columns
Neteffect_day<- Neteffect_day %>%
mutate(date=make_date(Year, monthnumeric, day))
#creating a dataframe to calculate the difference in proportions
Neteffect_daydiff <- Neteffect_day %>%
select(Monday, Tuesday, Wednesday, Thursday, Friday, Saturday, Sunday)
View(Neteffect_day)
View(Neteffect_daydiff)
#to calculate the difference in proportions
Neteffect_daydiff <- sapply(Neteffect_daydiff, diff)
#to add a row for the first line of zero
firstdiffline_day <- c(0, 0, 0, 0, 0, 0, 0)
View(Neteffect_daydiff)
#to combine the line of zero with the proportion differences
Neteffect_daydiff <- rbind(firstdiffline_day, Neteffect_daydiff)
#changing column names so it is clear it is for diff
colnames(Neteffect_daydiff)<- c("Mondaydiff", "Tuesdaydiff", "Wednesdaydiff", "Thursdaydiff", "Fridaydiff", "Saturdaydiff", "Sundaydiff")
View(Neteffect_daydiff)
#Combine original Neteffect_day dataframe to contain the proportion differences
Neteffect_day <- cbind(Neteffect_day, Neteffect_daydiff)
View(Neteffect_day)
#Calculate diff for each day. Then times the coefficient. Then add it and then overall exponentiation.
#Calculating the coefficient times proportion for each day
Mondaycoeff <- 1.244
Neteffect_day$coeffpropMonday <-  Neteffect_day$Mondaydiff*Mondaycoeff
Tuesdaycoeff <- -0.6717
Neteffect_day$coeffpropTuesday <-  Neteffect_day$Tuesdaydiff*Tuesdaycoeff
Wednesdaycoeff <- 0.8354
Neteffect_day$coeffpropWednesday <-  Neteffect_day$Wednesdaydiff*Wednesdaycoeff
Thursdaycoeff <- 0.3252
Neteffect_day$coeffpropThursday <-  Neteffect_day$Thursdaydiff*Thursdaycoeff
Fridaycoeff <- 0.3131
Neteffect_day$coeffpropFriday <-  Neteffect_day$Fridaydiff*Fridaycoeff
Saturdaycoeff <- -0.3669
Neteffect_day$coeffpropSaturday <-  Neteffect_day$Saturdaydiff*Saturdaycoeff
#sum of the coefficient times proportion for all days of the week
Neteffect_day$coeffpropallday <- Neteffect_day$coeffpropMonday + Neteffect_day$coeffpropTuesday + Neteffect_day$coeffpropWednesday + Neteffect_day$coeffpropThursday + Neteffect_day$coeffpropFriday + Neteffect_day$coeffpropSaturday
#exponentiating the sum of the coefficient times proportion for day
Neteffect_day$expcoeffpropallday <- exp(Neteffect_day$coeffpropallday)
ggplot(data=Neteffect_day, aes(x=date, y=expcoeffpropallday))+
geom_line()+
labs(title="Net effect of day of the week on total attendances over time",
x = "Date",
y = "Net effect on attendances")
Neteffect_day_plot <- ggplot(data=Neteffect_day, aes(x=date, y=expcoeffpropallday))+
geom_line()+
labs(title="Net effect of day of the week on total attendances over time",
x = "Date",
y = "Net effect on attendances")
save_plot("Output/Neteffect_day_plot.svg", fig=Neteffect_day_plot, width=14, height=12)
ggplot(data=Covid_monthlyae_activity_timeline, aes(x=date, y=NumberOfAttendancesAll))+
geom_point()+
geom_line(size=1,colour="black")+
geom_label(aes(label= ("1 Lockdown \n 2 Tightening \n 3 Easing \n 4 Removed"),x=as.Date("2018-11-01"), y=90000))+
#legend("bottomleft", inset=0.2, title="Restrictions", c("1 Lockdown", "2 Tightening", "3 Easing", "4 No restrictions"), col=c("#FF0033", "#FF00CC", "#9966FF", "#00FFFF", lty=1:2, cex=0.8)) +
geom_rect(aes(xmin = as.Date("2018-01-01"), xmax = as.Date("2020-03-31"), ymin=-Inf, ymax=Inf), fill="#00FFFF", alpha=.01) + #4
#annotate(geom="text", x=as.Date("2019-02-28"), color="black", y=60100, size=3, label="4")+
geom_rect(aes(xmin = as.Date("2020-04-01"), xmax = as.Date("2020-05-31"), ymin=-Inf, ymax=Inf), fill="#FF0033", alpha=.01) + #1
#annotate(geom="text", x=as.Date("2020-04-30"), color="black", y=60100, size=3, label="1")+
geom_rect(aes(xmin = as.Date("2020-06-01"), xmax = as.Date("2020-09-30"), ymin=-Inf, ymax=Inf), fill="#9966FF", alpha=.01) + #3
#annotate(geom="text", x=as.Date("2020-07-30"), color="black", y=60100, size=3, label="3")+
geom_rect(aes(xmin = as.Date("2020-10-01"), xmax = as.Date("2020-12-31"), ymin=-Inf, ymax=Inf), fill="#FF00CC", alpha=.01) + #2
#annotate(geom="text", x=as.Date("2020-11-15"), color="black", y=60100, size=3, label="2")+
geom_rect(aes(xmin = as.Date("2021-01-01"), xmax = as.Date("2021-04-30"), ymin=-Inf, ymax=Inf), fill="#FF0033", alpha=.01) + #1
#annotate(geom="text", x=as.Date("2021-03-01"), color="black", y=60100, size=3, label="1")+
geom_rect(aes(xmin = as.Date("2021-05-01"), xmax = as.Date("2021-07-31"), ymin=-Inf, ymax=Inf), fill="#9966FF", alpha=.01) + #3
#annotate(geom="text", x=as.Date("2021-06-15"), color="black", y=60100, size=3, label="3")+
geom_rect(aes(xmin = as.Date("2021-08-01"), xmax = as.Date("2022-12-31"), ymin=-Inf, ymax=Inf), fill="#00FFFF", alpha=.01) + #4
#annotate(geom="text", x=as.Date("2022-04-01"), color="black", y=60100, size=3, label="4")+
labs(x= "Date",
y = "Total number of Scottish A&E attendances")
library(tidyverse)
library(here)
library(readxl)
library(dplyr)
library(ggplot2)
library(lubridate)
library(sf)
library(scales)
library(sjPlot)
ggplot(data=Covid_monthlyae_activity_timeline, aes(x=date, y=NumberOfAttendancesAll))+
geom_point()+
geom_line(size=1,colour="black")+
geom_rect(aes(xmin = as.Date("2018-01-01"), xmax = as.Date("2020-03-23"), ymin=-Inf, ymax=Inf), fill="#00FFFF", alpha=.01) +
geom_rect(aes(xmin = as.Date("2020-03-23"), xmax = as.Date("2020-05-29"), ymin=-Inf, ymax=Inf), fill="#FF0033", alpha=.01) + #UKlockdown
geom_rect(aes(xmin = as.Date("2020-05-29"), xmax = as.Date("2020-06-19"), ymin=-Inf, ymax=Inf), fill="#FF0099", alpha=.01) + #Phase 1
geom_rect(aes(xmin = as.Date("2020-06-19"), xmax = as.Date("2020-07-10"), ymin=-Inf, ymax=Inf), fill="#CC33CC", alpha=.01) + #Phase2
geom_rect(aes(xmin = as.Date("2020-07-10"), xmax = as.Date("2020-09-23"), ymin=-Inf, ymax=Inf), fill="#CC66FF", alpha=.01) + #Phase3
geom_rect(aes(xmin = as.Date("2020-09-23"), xmax = as.Date("2021-01-05"), ymin=-Inf, ymax=Inf), fill="#FF00CC", alpha=.01) + #Scottish restrictions
geom_rect(aes(xmin = as.Date("2021-01-05"), xmax = as.Date("2021-04-02"), ymin=-Inf, ymax=Inf), fill="#FF0033", alpha=.01) + #Scottish mainland lockdown
geom_rect(aes(xmin = as.Date("2021-04-02"), xmax = as.Date("2021-04-26"), ymin=-Inf, ymax=Inf), fill="#FF00CC", alpha=.01) + #Stay home to stay local
geom_rect(aes(xmin = as.Date("2021-04-26"), xmax = as.Date("2021-05-17"), ymin=-Inf, ymax=Inf), fill="#CC66FF", alpha=.01) + #Level 3
geom_rect(aes(xmin = as.Date("2021-05-17"), xmax = as.Date("2021-06-05"), ymin=-Inf, ymax=Inf), fill="#9966FF", alpha=.01) + #Level 2
geom_rect(aes(xmin = as.Date("2021-06-05"), xmax = as.Date("2021-07-19"), ymin=-Inf, ymax=Inf), fill="#9999FF", alpha=.01) + #Most mainland level 1
geom_rect(aes(xmin = as.Date("2021-07-19"), xmax = as.Date("2021-08-09"), ymin=-Inf, ymax=Inf), fill="#66CCFF", alpha=.01) + #Level 0
geom_rect(aes(xmin = as.Date("2021-08-09"), xmax = as.Date("2022-12-31"), ymin=-Inf, ymax=Inf), fill="#00FFFF", alpha=.01) + #Beyond level 0
#theme_classic()+
labs(x= "Date",
y = "Total number of Scottish A&E attendances")
ggplot(data=Covid_monthlyae_activity_timeline, aes(x=date, y=NumberOfAttendancesAll))+
geom_point()+
geom_line(size=1,colour="black")+
geom_label(aes(label= ("1 Lockdown \n 2 Tightening \n 3 Easing \n 4 Removed"),x=as.Date("2018-11-01"), y=90000))+
#legend("bottomleft", inset=0.2, title="Restrictions", c("1 Lockdown", "2 Tightening", "3 Easing", "4 No restrictions"), col=c("#FF0033", "#FF00CC", "#9966FF", "#00FFFF", lty=1:2, cex=0.8)) +
geom_rect(aes(xmin = as.Date("2018-01-01"), xmax = as.Date("2020-03-31"), ymin=-Inf, ymax=Inf), fill="#00FFFF", alpha=.01) + #4
#annotate(geom="text", x=as.Date("2019-02-28"), color="black", y=60100, size=3, label="4")+
geom_rect(aes(xmin = as.Date("2020-04-01"), xmax = as.Date("2020-05-31"), ymin=-Inf, ymax=Inf), fill="#FF0033", alpha=.01) + #1
#annotate(geom="text", x=as.Date("2020-04-30"), color="black", y=60100, size=3, label="1")+
geom_rect(aes(xmin = as.Date("2020-06-01"), xmax = as.Date("2020-09-30"), ymin=-Inf, ymax=Inf), fill="#9966FF", alpha=.01) + #3
#annotate(geom="text", x=as.Date("2020-07-30"), color="black", y=60100, size=3, label="3")+
geom_rect(aes(xmin = as.Date("2020-10-01"), xmax = as.Date("2020-12-31"), ymin=-Inf, ymax=Inf), fill="#FF00CC", alpha=.01) + #2
#annotate(geom="text", x=as.Date("2020-11-15"), color="black", y=60100, size=3, label="2")+
geom_rect(aes(xmin = as.Date("2021-01-01"), xmax = as.Date("2021-04-30"), ymin=-Inf, ymax=Inf), fill="#FF0033", alpha=.01) + #1
#annotate(geom="text", x=as.Date("2021-03-01"), color="black", y=60100, size=3, label="1")+
geom_rect(aes(xmin = as.Date("2021-05-01"), xmax = as.Date("2021-07-31"), ymin=-Inf, ymax=Inf), fill="#9966FF", alpha=.01) + #3
#annotate(geom="text", x=as.Date("2021-06-15"), color="black", y=60100, size=3, label="3")+
geom_rect(aes(xmin = as.Date("2021-08-01"), xmax = as.Date("2022-12-31"), ymin=-Inf, ymax=Inf), fill="#00FFFF", alpha=.01) + #4
#annotate(geom="text", x=as.Date("2022-04-01"), color="black", y=60100, size=3, label="4")+
labs(x= "Date",
y = "Total number of Scottish A&E attendances")
ggplot(data=Covid_monthlyae_activity_timeline, aes(x=date, y=NumberOfAttendancesAll))+
geom_point()+
geom_line(size=1,colour="black")+
geom_label(aes(label= ("1 Lockdown \n 2 Tightening \n 3 Easing \n 4 Removed"),x=as.Date("2018-11-01"), y=90000))+
#legend("bottomleft", inset=0.2, title="Restrictions", c("1 Lockdown", "2 Tightening", "3 Easing", "4 No restrictions"), col=c("#FF0033", "#FF00CC", "#9966FF", "#00FFFF", lty=1:2, cex=0.8)) +
geom_rect(aes(xmin = as.Date("2018-01-01"), xmax = as.Date("2020-03-31"), ymin=-Inf, ymax=Inf), fill="#00FFFF", alpha=.01) + #4
#annotate(geom="text", x=as.Date("2019-02-28"), color="black", y=60100, size=3, label="4")+
geom_rect(aes(xmin = as.Date("2020-04-01"), xmax = as.Date("2020-05-31"), ymin=-Inf, ymax=Inf), fill="#FF0033", alpha=.01) + #1
#annotate(geom="text", x=as.Date("2020-04-30"), color="black", y=60100, size=3, label="1")+
geom_rect(aes(xmin = as.Date("2020-06-01"), xmax = as.Date("2020-09-30"), ymin=-Inf, ymax=Inf), fill="#9900FF", alpha=.01) + #3
#annotate(geom="text", x=as.Date("2020-07-30"), color="black", y=60100, size=3, label="3")+
geom_rect(aes(xmin = as.Date("2020-10-01"), xmax = as.Date("2020-12-31"), ymin=-Inf, ymax=Inf), fill="#FF00CC", alpha=.01) + #2
#annotate(geom="text", x=as.Date("2020-11-15"), color="black", y=60100, size=3, label="2")+
geom_rect(aes(xmin = as.Date("2021-01-01"), xmax = as.Date("2021-04-30"), ymin=-Inf, ymax=Inf), fill="#FF0033", alpha=.01) + #1
#annotate(geom="text", x=as.Date("2021-03-01"), color="black", y=60100, size=3, label="1")+
geom_rect(aes(xmin = as.Date("2021-05-01"), xmax = as.Date("2021-07-31"), ymin=-Inf, ymax=Inf), fill="#9900FF", alpha=.01) + #3
#annotate(geom="text", x=as.Date("2021-06-15"), color="black", y=60100, size=3, label="3")+
geom_rect(aes(xmin = as.Date("2021-08-01"), xmax = as.Date("2022-12-31"), ymin=-Inf, ymax=Inf), fill="#00FFFF", alpha=.01) + #4
#annotate(geom="text", x=as.Date("2022-04-01"), color="black", y=60100, size=3, label="4")+
labs(x= "Date",
y = "Total number of Scottish A&E attendances")
Covid_aeScotlandactivity_encodingtimeline2018to2022<- ggplot(data=Covid_monthlyae_activity_timeline, aes(x=date, y=NumberOfAttendancesAll))+
geom_point()+
geom_line(size=1,colour="black")+
geom_label(aes(label= ("1 Lockdown \n 2 Tightening \n 3 Easing \n 4 Removed"),x=as.Date("2018-11-01"), y=90000))+
#legend("bottomleft", inset=0.2, title="Restrictions", c("1 Lockdown", "2 Tightening", "3 Easing", "4 No restrictions"), col=c("#FF0033", "#FF00CC", "#9966FF", "#00FFFF", lty=1:2, cex=0.8)) +
geom_rect(aes(xmin = as.Date("2018-01-01"), xmax = as.Date("2020-03-31"), ymin=-Inf, ymax=Inf), fill="#00FFFF", alpha=.01) + #4
#annotate(geom="text", x=as.Date("2019-02-28"), color="black", y=60100, size=3, label="4")+
geom_rect(aes(xmin = as.Date("2020-04-01"), xmax = as.Date("2020-05-31"), ymin=-Inf, ymax=Inf), fill="#FF0033", alpha=.01) + #1
#annotate(geom="text", x=as.Date("2020-04-30"), color="black", y=60100, size=3, label="1")+
geom_rect(aes(xmin = as.Date("2020-06-01"), xmax = as.Date("2020-09-30"), ymin=-Inf, ymax=Inf), fill="#9900FF", alpha=.01) + #3
#annotate(geom="text", x=as.Date("2020-07-30"), color="black", y=60100, size=3, label="3")+
geom_rect(aes(xmin = as.Date("2020-10-01"), xmax = as.Date("2020-12-31"), ymin=-Inf, ymax=Inf), fill="#FF00CC", alpha=.01) + #2
#annotate(geom="text", x=as.Date("2020-11-15"), color="black", y=60100, size=3, label="2")+
geom_rect(aes(xmin = as.Date("2021-01-01"), xmax = as.Date("2021-04-30"), ymin=-Inf, ymax=Inf), fill="#FF0033", alpha=.01) + #1
#annotate(geom="text", x=as.Date("2021-03-01"), color="black", y=60100, size=3, label="1")+
geom_rect(aes(xmin = as.Date("2021-05-01"), xmax = as.Date("2021-07-31"), ymin=-Inf, ymax=Inf), fill="#9900FF", alpha=.01) + #3
#annotate(geom="text", x=as.Date("2021-06-15"), color="black", y=60100, size=3, label="3")+
geom_rect(aes(xmin = as.Date("2021-08-01"), xmax = as.Date("2022-12-31"), ymin=-Inf, ymax=Inf), fill="#00FFFF", alpha=.01) + #4
#annotate(geom="text", x=as.Date("2022-04-01"), color="black", y=60100, size=3, label="4")+
labs(x= "Date",
y = "Total number of Scottish A&E attendances")
save_plot("Output/Covid_aeScotlandactivity_encodingtimeline2018to2022.svg", fig=Covid_aeScotlandactivity_encodingtimeline2018to2022, width=14, height=12)
ggplot(data=Covid_monthlyae_activity_timeline, aes(x=date, y=NumberOfAttendancesAll))+
geom_point()+
geom_line(size=1,colour="black")+
geom_label(aes(label= ("1 Lockdown \n 2 Tightening \n 3 Easing \n 4 No restriction"),x=as.Date("2018-11-01"), y=90000))+
#legend("bottomleft", inset=0.2, title="Restrictions", c("1 Lockdown", "2 Tightening", "3 Easing", "4 No restrictions"), col=c("#FF0033", "#FF00CC", "#9966FF", "#00FFFF", lty=1:2, cex=0.8)) +
geom_rect(aes(xmin = as.Date("2018-01-01"), xmax = as.Date("2020-03-31"), ymin=-Inf, ymax=Inf), fill="#00FFFF", alpha=.01) + #4
#annotate(geom="text", x=as.Date("2019-02-28"), color="black", y=60100, size=3, label="4")+
geom_rect(aes(xmin = as.Date("2020-04-01"), xmax = as.Date("2020-05-31"), ymin=-Inf, ymax=Inf), fill="#FF0033", alpha=.01) + #1
#annotate(geom="text", x=as.Date("2020-04-30"), color="black", y=60100, size=3, label="1")+
geom_rect(aes(xmin = as.Date("2020-06-01"), xmax = as.Date("2020-09-30"), ymin=-Inf, ymax=Inf), fill="#9900FF", alpha=.01) + #3
#annotate(geom="text", x=as.Date("2020-07-30"), color="black", y=60100, size=3, label="3")+
geom_rect(aes(xmin = as.Date("2020-10-01"), xmax = as.Date("2020-12-31"), ymin=-Inf, ymax=Inf), fill="#FF00CC", alpha=.01) + #2
#annotate(geom="text", x=as.Date("2020-11-15"), color="black", y=60100, size=3, label="2")+
geom_rect(aes(xmin = as.Date("2021-01-01"), xmax = as.Date("2021-04-30"), ymin=-Inf, ymax=Inf), fill="#FF0033", alpha=.01) + #1
#annotate(geom="text", x=as.Date("2021-03-01"), color="black", y=60100, size=3, label="1")+
geom_rect(aes(xmin = as.Date("2021-05-01"), xmax = as.Date("2021-07-31"), ymin=-Inf, ymax=Inf), fill="#9900FF", alpha=.01) + #3
#annotate(geom="text", x=as.Date("2021-06-15"), color="black", y=60100, size=3, label="3")+
geom_rect(aes(xmin = as.Date("2021-08-01"), xmax = as.Date("2022-12-31"), ymin=-Inf, ymax=Inf), fill="#00FFFF", alpha=.01) + #4
#annotate(geom="text", x=as.Date("2022-04-01"), color="black", y=60100, size=3, label="4")+
labs(x= "Date",
y = "Total number of Scottish A&E attendances")
Covid_aeScotlandactivity_encodingtimeline2018to2022<- ggplot(data=Covid_monthlyae_activity_timeline, aes(x=date, y=NumberOfAttendancesAll))+
geom_point()+
geom_line(size=1,colour="black")+
geom_label(aes(label= ("1 Lockdown \n 2 Tightening \n 3 Easing \n 4 No restriction"),x=as.Date("2018-11-01"), y=90000))+
#legend("bottomleft", inset=0.2, title="Restrictions", c("1 Lockdown", "2 Tightening", "3 Easing", "4 No restrictions"), col=c("#FF0033", "#FF00CC", "#9966FF", "#00FFFF", lty=1:2, cex=0.8)) +
geom_rect(aes(xmin = as.Date("2018-01-01"), xmax = as.Date("2020-03-31"), ymin=-Inf, ymax=Inf), fill="#00FFFF", alpha=.01) + #4
#annotate(geom="text", x=as.Date("2019-02-28"), color="black", y=60100, size=3, label="4")+
geom_rect(aes(xmin = as.Date("2020-04-01"), xmax = as.Date("2020-05-31"), ymin=-Inf, ymax=Inf), fill="#FF0033", alpha=.01) + #1
#annotate(geom="text", x=as.Date("2020-04-30"), color="black", y=60100, size=3, label="1")+
geom_rect(aes(xmin = as.Date("2020-06-01"), xmax = as.Date("2020-09-30"), ymin=-Inf, ymax=Inf), fill="#9900FF", alpha=.01) + #3
#annotate(geom="text", x=as.Date("2020-07-30"), color="black", y=60100, size=3, label="3")+
geom_rect(aes(xmin = as.Date("2020-10-01"), xmax = as.Date("2020-12-31"), ymin=-Inf, ymax=Inf), fill="#FF00CC", alpha=.01) + #2
#annotate(geom="text", x=as.Date("2020-11-15"), color="black", y=60100, size=3, label="2")+
geom_rect(aes(xmin = as.Date("2021-01-01"), xmax = as.Date("2021-04-30"), ymin=-Inf, ymax=Inf), fill="#FF0033", alpha=.01) + #1
#annotate(geom="text", x=as.Date("2021-03-01"), color="black", y=60100, size=3, label="1")+
geom_rect(aes(xmin = as.Date("2021-05-01"), xmax = as.Date("2021-07-31"), ymin=-Inf, ymax=Inf), fill="#9900FF", alpha=.01) + #3
#annotate(geom="text", x=as.Date("2021-06-15"), color="black", y=60100, size=3, label="3")+
geom_rect(aes(xmin = as.Date("2021-08-01"), xmax = as.Date("2022-12-31"), ymin=-Inf, ymax=Inf), fill="#00FFFF", alpha=.01) + #4
#annotate(geom="text", x=as.Date("2022-04-01"), color="black", y=60100, size=3, label="4")+
labs(x= "Date",
y = "Total number of Scottish A&E attendances")
save_plot("Output/Covid_aeScotlandactivity_encodingtimeline2018to2022.svg", fig=Covid_aeScotlandactivity_encodingtimeline2018to2022, width=14, height=12)
