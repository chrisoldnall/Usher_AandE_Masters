dataforecast1<- data.frame(Male =1, Female =0, Under18 =0, EighteentoTwentyfour =0, TwentyfivetoThirtynine =1, FortytoSixtyfour =0,  SixtyfivetoSeventyfour =0, SIMDOne=0, SIMDTwo =1, SIMDThree =0, SIMDFour =0, SIMDFive =0, Tuesday =0, Wednesday =0, Thursday =0, Friday =0, Saturday =1, Sunday =0, ED =1, Midnighttoone =0, Twotothreeam =0, Threetofouram =0, Fourtofiveam =0, Fivetosixam =0, Sixtosevenam =0, Seventoeightam =0, Eighttonineam =0, Ninetotenam =1, Tentoelevenam =0, Eleventonoon =0, Noontoonepm =0, Onetotwopm =0, Twotothreepm =0, Threetofourpm =0, Fourtofivepm =0, Fivetosixpm =0, Sixtosevenpm =0, Seventoeightpm =0, Eighttoninepm =0, Ninetotenpm =0, Tentoelevenpm =0, Eleventomidnight =0, NHSBorders =0, NHSFife =0, NHSShetland =0, NHSLanarkshire =0, NHSDumfriesandGalloway =0, NHSForthValley =0, NHSGrampian =0, NHSWesternIsles =0, NHSOrkney =1, NHSTayside =0, NHSGreaterGlasgowandClyde =0, NHSHighland =0, NHSLothian =0)
predict(glm_sexageSIMDdaytypehourHB, dataforecast1, type="response")
#Chris said doing this doesn't make sense because it is me assuming that the whole population only consist of males (for example)
#Male= 1, TwentyfivetoThirtynine = 1, SIMDTwo = 1, Saturday = 1, Ninetotenam = 1, ED = 1, NHSOrkney = 1
dataforecast1<- data.frame(Male =1, Female =0, Under18 =0, EighteentoTwentyfour =0, TwentyfivetoThirtynine =1, FortytoSixtyfour =0,  SixtyfivetoSeventyfour =0, SIMDTwo =1, SIMDThree =0, SIMDFour =0, SIMDFive =0, Tuesday =0, Wednesday =0, Thursday =0, Friday =0, Saturday =1, Sunday =0, ED =1, Midnighttoone =0, Twotothreeam =0, Threetofouram =0, Fourtofiveam =0, Fivetosixam =0, Sixtosevenam =0, Seventoeightam =0, Eighttonineam =0, Ninetotenam =1, Tentoelevenam =0, Eleventonoon =0, Noontoonepm =0, Onetotwopm =0, Twotothreepm =0, Threetofourpm =0, Fourtofivepm =0, Fivetosixpm =0, Sixtosevenpm =0, Seventoeightpm =0, Eighttoninepm =0, Ninetotenpm =0, Tentoelevenpm =0, Eleventomidnight =0, NHSBorders =0, NHSFife =0, NHSShetland =0, NHSLanarkshire =0, NHSDumfriesandGalloway =0, NHSForthValley =0, NHSGrampian =0, NHSWesternIsles =0, NHSOrkney =1, NHSTayside =0, NHSGreaterGlasgowandClyde =0, NHSHighland =0, NHSLothian =0)
predict(glm_sexageSIMDdaytypehourHB, dataforecast1, type="response")
dataforecast1<- data.frame(Male =1, Female =0, Under18 =0, EighteentoTwentyfour =0, TwentyfivetoThirtynine =1, FortytoSixtyfour =0,  SixtyfivetoSeventyfour =0, SIMDTwo =1, SIMDThree =0, SIMDFour =0, SIMDFive =0, Tuesday =0, Wednesday =0, Thursday =0, Friday =0, Saturday =1, Sunday =0, ED =1, Midnighttoone =0, Twotothreeam =0, Threetofouram =0, Fourtofiveam =0, Fivetosixam =0, Sixtosevenam =0, Seventoeightam =0, Eighttonineam =0, Ninetotenam =1, Tentoelevenam =0, Eleventonoon =0, Noontoonepm =0, Onetotwopm =0, Twotothreepm =0, Threetofourpm =0, Fourtofivepm =0, Fivetosixpm =0, Sixtosevenpm =0, Seventoeightpm =0, Eighttoninepm =0, Ninetotenpm =0, Tentoelevenpm =0, Eleventomidnight =0, NHSBorders =0, NHSFife =0, NHSShetland =0, NHSLanarkshire =0, NHSDumfriesandGalloway =0, NHSForthValley =0, NHSGrampian =0, NHSWesternIsles =0, NHSOrkney =1, NHSTayside =0, NHSGreaterGlasgowandClyde =0, NHSHighland =0, NHSLothian =0)
predict(glm_sexageSIMDdaytypehourHB, dataforecast1, type="response")
#using month august
dataforecast2<- data.frame(Male =0.4892402, Female =0.4831486, Under18 =0.1824, EighteentoTwentyfour =0.08412196, TwentyfivetoThirtynine =0.1833776, FortytoSixtyfour =0.2799453,  SixtyfivetoSeventyfour =0.10060757, SIMDOne =0.2573839,SIMDTwo =0.2128418, SIMDThree =0.1744787, SIMDFour =0.1546053, SIMDFive =0.1318929, Tuesday =0.1456571, Wednesday =0.1449873, Thursday =0.1390299, Friday =0.1377609, Saturday =0.1347645, Sunday =0.1395234, ED =0.8473706, Midnighttoone =0.02342818, Twotothreeam =0.01517344, Threetofouram =0.01303421, Fourtofiveam =0.012867208, Fivetosixam =0.012525249, Sixtosevenam =0.0134716, Seventoeightam =0.01639814, Eighttonineam =0.03026736, Ninetotenam =0.05104735, Tentoelevenam =0.06138565, Eleventonoon =0.06703195, Noontoonepm =0.06518696, Onetotwopm =0.0656164, Twotothreepm =0.06416109, Threetofourpm =0.06517901, Fourtofivepm =0.06414518, Fivetosixpm =0.06195028, Sixtosevenpm =0.06039954, Seventoeightpm =0.05431584, Eighttoninepm =0.05063382, Ninetotenpm =0.04506704, Tentoelevenpm =0.03786999, Eleventomidnight =0.02978226, NHSBorders =0.01947048, NHSFife =0.05778455, NHSShetland =0.005656719, NHSLanarkshire =0.1265399, NHSDumfriesandGalloway =0.03022991, NHSForthValley =0.0536222, NHSGrampian =0.07932528, NHSWesternIsles =0.005678588, NHSOrkney =0.004278987, NHSTayside =0.05844061, NHSGreaterGlasgowandClyde =0.2583648, NHSHighland =0.06884285, NHSLothian =0.1691621, Jan= 0, Feb= 0, March = 0, April =0, May =0 , June =0, July=0, August=1, Sept=0, Oct = 0, Nov=0, Dec=0)
predict(glm_sexageSIMDdaytypehourHBmonth, dataforecast2, type="response")
#using month and July 2023 proportions for all for month and time (should have only used month tbh), set ED as 1 because Orkney only has ED
OrkneyAug23<- data.frame(Male =0.5, Female =0.5, Under18 =0.1824, EighteentoTwentyfour =0.08412196, TwentyfivetoThirtynine =0.1833776, FortytoSixtyfour =0.2799453,  SixtyfivetoSeventyfour =0.10060757, SIMDOne =0.2573839,SIMDTwo =0.2128418, SIMDThree =0.1744787, SIMDFour =0.1546053, SIMDFive =0.1318929, Tuesday =0.1456571, Wednesday =0.1449873, Thursday =0.1390299, Friday =0.1377609, Saturday =0.1347645, Sunday =0.1395234, ED =1, Midnighttoone =0.02342818, Twotothreeam =0.01517344, Threetofouram =0.01303421, Fourtofiveam =0.012867208, Fivetosixam =0.012525249, Sixtosevenam =0.0134716, Seventoeightam =0.01639814, Eighttonineam =0.03026736, Ninetotenam =0.05104735, Tentoelevenam =0.06138565, Eleventonoon =0.06703195, Noontoonepm =0.06518696, Onetotwopm =0.0656164, Twotothreepm =0.06416109, Threetofourpm =0.06517901, Fourtofivepm =0.06414518, Fivetosixpm =0.06195028, Sixtosevenpm =0.06039954, Seventoeightpm =0.05431584, Eighttoninepm =0.05063382, Ninetotenpm =0.04506704, Tentoelevenpm =0.03786999, Eleventomidnight =0.02978226, NHSBorders =0, NHSFife =0, NHSShetland =0, NHSLanarkshire =0, NHSDumfriesandGalloway =0, NHSForthValley =0, NHSGrampian =0, NHSWesternIsles =0, NHSOrkney =1, NHSTayside =0, NHSGreaterGlasgowandClyde =0, NHSHighland =0, NHSLothian =0, Jan= 0, Feb= 0, March = 0, April =0, May =0 , June =0, July=0, August=1, Sept=0, Oct = 0, Nov=0, Dec=0)
predict(glm_sexageSIMDdaytypehourHBmonth, OrkneyAug23, type="response")
#using month and real orkney proportions for age, sex, simd from July 2023, set ED as 1 because Orkney only has ED
OrkneyAug23<- data.frame(Male =0.464179104, Female =0.426865672, Under18 =0.131343284, EighteentoTwentyfour =0.092537313, TwentyfivetoThirtynine =0.153731343, FortytoSixtyfour =0.26119403,  SixtyfivetoSeventyfour =0.126865672, SIMDOne =0.013432836,SIMDTwo =0.155223881, SIMDThree =0.235820896, SIMDFour =0.405970149, SIMDFive =0.068656716, Tuesday =0.1456571, Wednesday =0.1449873, Thursday =0.1390299, Friday =0.1377609, Saturday =0.1347645, Sunday =0.1395234, ED =1, Midnighttoone =0.02342818, Twotothreeam =0.01517344, Threetofouram =0.01303421, Fourtofiveam =0.012867208, Fivetosixam =0.012525249, Sixtosevenam =0.0134716, Seventoeightam =0.01639814, Eighttonineam =0.03026736, Ninetotenam =0.05104735, Tentoelevenam =0.06138565, Eleventonoon =0.06703195, Noontoonepm =0.06518696, Onetotwopm =0.0656164, Twotothreepm =0.06416109, Threetofourpm =0.06517901, Fourtofivepm =0.06414518, Fivetosixpm =0.06195028, Sixtosevenpm =0.06039954, Seventoeightpm =0.05431584, Eighttoninepm =0.05063382, Ninetotenpm =0.04506704, Tentoelevenpm =0.03786999, Eleventomidnight =0.02978226, NHSBorders =0, NHSFife =0, NHSShetland =0, NHSLanarkshire =0, NHSDumfriesandGalloway =0, NHSForthValley =0, NHSGrampian =0, NHSWesternIsles =0, NHSOrkney =1, NHSTayside =0, NHSGreaterGlasgowandClyde =0, NHSHighland =0, NHSLothian =0, Jan= 0, Feb= 0, March = 0, April =0, May =0 , June =0, July=0, August=1, Sept=0, Oct = 0, Nov=0, Dec=0)
predict(glm_sexageSIMDdaytypehourHBmonth, OrkneyAug23, type="response")
#using real orkney proportions for age, sex, simd from July 2023, set ED as 1 because Orkney only has ED
OrkneyAug23Time<- data.frame(Male =0.464179104, Female =0.426865672, Under18 =0.131343284, EighteentoTwentyfour =0.092537313, TwentyfivetoThirtynine =0.153731343, FortytoSixtyfour =0.26119403,  SixtyfivetoSeventyfour =0.126865672, SIMDOne =0.013432836,SIMDTwo =0.155223881, SIMDThree =0.235820896, SIMDFour =0.405970149, SIMDFive =0.068656716, Tuesday =0.1456571, Wednesday =0.1449873, Thursday =0.1390299, Friday =0.1377609, Saturday =0.1347645, Sunday =0.1395234, ED =1, Midnighttoone =0.02342818, Twotothreeam =0.01517344, Threetofouram =0.01303421, Fourtofiveam =0.012867208, Fivetosixam =0.012525249, Sixtosevenam =0.0134716, Seventoeightam =0.01639814, Eighttonineam =0.03026736, Ninetotenam =0.05104735, Tentoelevenam =0.06138565, Eleventonoon =0.06703195, Noontoonepm =0.06518696, Onetotwopm =0.0656164, Twotothreepm =0.06416109, Threetofourpm =0.06517901, Fourtofivepm =0.06414518, Fivetosixpm =0.06195028, Sixtosevenpm =0.06039954, Seventoeightpm =0.05431584, Eighttoninepm =0.05063382, Ninetotenpm =0.04506704, Tentoelevenpm =0.03786999, Eleventomidnight =0.02978226, NHSBorders =0, NHSFife =0, NHSShetland =0, NHSLanarkshire =0, NHSDumfriesandGalloway =0, NHSForthValley =0, NHSGrampian =0, NHSWesternIsles =0, NHSOrkney =1, NHSTayside =0, NHSGreaterGlasgowandClyde =0, NHSHighland =0, NHSLothian =0, Time=2039)
predict(glm_sexageSIMDdaytypehourHBTime, OrkneyAug23Time, type="response")
#using real orkney proportions for age, sex, simd from July 2023, set ED as 1 because Orkney only has ED
OrkneySept23Time<- data.frame(Male =0.464179104, Female =0.426865672, Under18 =0.131343284, EighteentoTwentyfour =0.092537313, TwentyfivetoThirtynine =0.153731343, FortytoSixtyfour =0.26119403,  SixtyfivetoSeventyfour =0.126865672, SIMDOne =0.013432836,SIMDTwo =0.155223881, SIMDThree =0.235820896, SIMDFour =0.405970149, SIMDFive =0.068656716, Tuesday =0.1456571, Wednesday =0.1449873, Thursday =0.1390299, Friday =0.1377609, Saturday =0.1347645, Sunday =0.1395234, ED =1, Midnighttoone =0.02342818, Twotothreeam =0.01517344, Threetofouram =0.01303421, Fourtofiveam =0.012867208, Fivetosixam =0.012525249, Sixtosevenam =0.0134716, Seventoeightam =0.01639814, Eighttonineam =0.03026736, Ninetotenam =0.05104735, Tentoelevenam =0.06138565, Eleventonoon =0.06703195, Noontoonepm =0.06518696, Onetotwopm =0.0656164, Twotothreepm =0.06416109, Threetofourpm =0.06517901, Fourtofivepm =0.06414518, Fivetosixpm =0.06195028, Sixtosevenpm =0.06039954, Seventoeightpm =0.05431584, Eighttoninepm =0.05063382, Ninetotenpm =0.04506704, Tentoelevenpm =0.03786999, Eleventomidnight =0.02978226, NHSBorders =0, NHSFife =0, NHSShetland =0, NHSLanarkshire =0, NHSDumfriesandGalloway =0, NHSForthValley =0, NHSGrampian =0, NHSWesternIsles =0, NHSOrkney =1, NHSTayside =0, NHSGreaterGlasgowandClyde =0, NHSHighland =0, NHSLothian =0, Time=2070)
predict(glm_sexageSIMDdaytypehourHBTime, OrkneySept23Time, type="response")
#using real orkney proportions for age, sex, simd from July 2023, set ED as 1 because Orkney only has ED
OrkneyOct23Time<- data.frame(Male =0.464179104, Female =0.426865672, Under18 =0.131343284, EighteentoTwentyfour =0.092537313, TwentyfivetoThirtynine =0.153731343, FortytoSixtyfour =0.26119403,  SixtyfivetoSeventyfour =0.126865672, SIMDOne =0.013432836,SIMDTwo =0.155223881, SIMDThree =0.235820896, SIMDFour =0.405970149, SIMDFive =0.068656716, Tuesday =0.1456571, Wednesday =0.1449873, Thursday =0.1390299, Friday =0.1377609, Saturday =0.1347645, Sunday =0.1395234, ED =1, Midnighttoone =0.02342818, Twotothreeam =0.01517344, Threetofouram =0.01303421, Fourtofiveam =0.012867208, Fivetosixam =0.012525249, Sixtosevenam =0.0134716, Seventoeightam =0.01639814, Eighttonineam =0.03026736, Ninetotenam =0.05104735, Tentoelevenam =0.06138565, Eleventonoon =0.06703195, Noontoonepm =0.06518696, Onetotwopm =0.0656164, Twotothreepm =0.06416109, Threetofourpm =0.06517901, Fourtofivepm =0.06414518, Fivetosixpm =0.06195028, Sixtosevenpm =0.06039954, Seventoeightpm =0.05431584, Eighttoninepm =0.05063382, Ninetotenpm =0.04506704, Tentoelevenpm =0.03786999, Eleventomidnight =0.02978226, NHSBorders =0, NHSFife =0, NHSShetland =0, NHSLanarkshire =0, NHSDumfriesandGalloway =0, NHSForthValley =0, NHSGrampian =0, NHSWesternIsles =0, NHSOrkney =1, NHSTayside =0, NHSGreaterGlasgowandClyde =0, NHSHighland =0, NHSLothian =0, Time=2100)
predict(glm_sexageSIMDdaytypehourHBTime, OrkneyOct23Time, type="response")
#Orkney attendance rates 2018-2023
Orkney_rates2018to2023 <- ae_byboard2018to2023 %>% filter(NHSBoardName=="NHS Orkney") %>% mutate(Month = ae_byboard2018to2023_proportionsnewdate$Month)
Orkney_Updatespopulation2018to2023 <- HBUpdatespopulation_estimate_HBname %>% filter(HBName=="NHS Orkney")
Orkney_Updatespopulation2018to2023 <- Orkney_Updatespopulation2018to2023 %>% filter(Year=="2019"|Year=="2020"|Year=="2021"|Year=="2022"|Year=="2023")
#combining the dataframe for attendance and Orkney population in 2018-2023
Orkney_rates2018to2023 <- merge(Orkney_rates2018to2023, Orkney_Updatespopulation2018to2023, by=c("Year"))
#adding a new column containing the attendance rate
Orkney_rates2018to2023 <- Orkney_rates2018to2023 %>% mutate(attendancerate = Attendances/AllAges)
#removing unnecessary columns
Orkney_rates2018to2023 <- Orkney_rates2018to2023 %>% select(-MonthEndingDate, -HBName, -HB, -Sex, -Year)
#creating a dataframe for the attendance rate predicted for Aug 2023 and Sept 2023
OrkneyAug23Time_attendancerate <- c(NHSBoardName = "NHS Orkney", Attendances = 178, Month = "2023-08-01", AllAges= 22731, attendancerate=0.0078371)
OrkneySept23Time_attendancerate <- c(NHSBoardName = "NHS Orkney", Attendances = 177, Month = "2023-09-01", AllAges= 22731, attendancerate=0.0078106)
OrkneyOct23Time_attendancerate <- c(NHSBoardName = "NHS Orkney", Attendances = 176, Month = "2023-10-01", AllAges= 22731, attendancerate=0.0077851)
#Combining the dataframe containing actual rates with the prediction for Sept and Aug 2023
Orkney_rates2018to2023 <- rbind(Orkney_rates2018to2023, OrkneyAug23Time_attendancerate)
Orkney_rates2018to2023 <- rbind(Orkney_rates2018to2023, OrkneySept23Time_attendancerate)
Orkney_rates2018to2023 <- rbind(Orkney_rates2018to2023, OrkneyOct23Time_attendancerate)
str(Orkney_rates2018to2023)
#changing attendancerate to a numeric
Orkney_rates2018to2023$attendancerate <- as.numeric(Orkney_rates2018to2023$attendancerate)
#graph of actual Orkney attendance rates followed by predicted
Orkney_predict_rates2018to2023 <- ggplot(data=Orkney_rates2018to2023, aes(x=Month, y=attendancerate))+
geom_point()+
geom_line()+
labs(x="Year",
y="Attendance rate")
save_plot("Output/Orkney_predict_rates2018to2023.svg", fig=Orkney_predict_rates2018to2023, width=14, height=12)
#trying with orkney as 1/14 - spoke with Chris no need to do 1/14
OrkneyAug23Time<- data.frame(Male =0.464179104, Female =0.426865672, Under18 =0.131343284, EighteentoTwentyfour =0.092537313, TwentyfivetoThirtynine =0.153731343, FortytoSixtyfour =0.26119403,  SixtyfivetoSeventyfour =0.126865672, SIMDOne =0.013432836,SIMDTwo =0.155223881, SIMDThree =0.235820896, SIMDFour =0.405970149, SIMDFive =0.068656716, Tuesday =0.1456571, Wednesday =0.1449873, Thursday =0.1390299, Friday =0.1377609, Saturday =0.1347645, Sunday =0.1395234, ED =1, Midnighttoone =0.02342818, Twotothreeam =0.01517344, Threetofouram =0.01303421, Fourtofiveam =0.012867208, Fivetosixam =0.012525249, Sixtosevenam =0.0134716, Seventoeightam =0.01639814, Eighttonineam =0.03026736, Ninetotenam =0.05104735, Tentoelevenam =0.06138565, Eleventonoon =0.06703195, Noontoonepm =0.06518696, Onetotwopm =0.0656164, Twotothreepm =0.06416109, Threetofourpm =0.06517901, Fourtofivepm =0.06414518, Fivetosixpm =0.06195028, Sixtosevenpm =0.06039954, Seventoeightpm =0.05431584, Eighttoninepm =0.05063382, Ninetotenpm =0.04506704, Tentoelevenpm =0.03786999, Eleventomidnight =0.02978226, NHSBorders =0, NHSFife =0, NHSShetland =0, NHSLanarkshire =0, NHSDumfriesandGalloway =0, NHSForthValley =0, NHSGrampian =0, NHSWesternIsles =0, NHSOrkney =0.0714285714285714, NHSTayside =0, NHSGreaterGlasgowandClyde =0, NHSHighland =0, NHSLothian =0, Time=2039)
predict(glm_sexageSIMDdaytypehourHBTime, OrkneyAug23Time, type="response")
#trying with Orkney as 1/14 and month as 1/12 - Spoke with Chris no need to do this
OrkneyAug23<- data.frame(Male =0.464179104, Female =0.426865672, Under18 =0.131343284, EighteentoTwentyfour =0.092537313, TwentyfivetoThirtynine =0.153731343, FortytoSixtyfour =0.26119403,  SixtyfivetoSeventyfour =0.126865672, SIMDOne =0.013432836,SIMDTwo =0.155223881, SIMDThree =0.235820896, SIMDFour =0.405970149, SIMDFive =0.068656716, Tuesday =0.1456571, Wednesday =0.1449873, Thursday =0.1390299, Friday =0.1377609, Saturday =0.1347645, Sunday =0.1395234, ED =1, Midnighttoone =0.02342818, Twotothreeam =0.01517344, Threetofouram =0.01303421, Fourtofiveam =0.012867208, Fivetosixam =0.012525249, Sixtosevenam =0.0134716, Seventoeightam =0.01639814, Eighttonineam =0.03026736, Ninetotenam =0.05104735, Tentoelevenam =0.06138565, Eleventonoon =0.06703195, Noontoonepm =0.06518696, Onetotwopm =0.0656164, Twotothreepm =0.06416109, Threetofourpm =0.06517901, Fourtofivepm =0.06414518, Fivetosixpm =0.06195028, Sixtosevenpm =0.06039954, Seventoeightpm =0.05431584, Eighttoninepm =0.05063382, Ninetotenpm =0.04506704, Tentoelevenpm =0.03786999, Eleventomidnight =0.02978226, NHSBorders =0, NHSFife =0, NHSShetland =0, NHSLanarkshire =0, NHSDumfriesandGalloway =0, NHSForthValley =0, NHSGrampian =0, NHSWesternIsles =0, NHSOrkney =0.0714285714285714, NHSTayside =0, NHSGreaterGlasgowandClyde =0, NHSHighland =0, NHSLothian =0, Jan= 0, Feb= 0, March = 0, April =0, May =0 , June =0, July=0, August=0.083333333
, Sept=0, Oct = 0, Nov=0, Dec=0)
predict(glm_sexageSIMDdaytypehourHBmonth, OrkneyAug23, type="response")
# Path to the downloaded shapefile
shapefile_path <- "/Users/hui_p/Documents/AandE_test/AandE_test/Rawdata/SG_NHS_HealthBoards_2019/SG_NHS_HealthBoards_2019.shp"
# Read the shapefile
scottish_health_boards <- st_read(shapefile_path)
labels_data <- scottish_health_boards %>%
mutate(geometry = st_centroid(geometry))
HBUpdatespopulation_estimate_HBname2022 <- HBUpdatespopulation_estimate_HBname %>%
filter(Year == "2022")
# Assuming your health boards' shapefile has an ID or name column called 'HBName'
HBUpdatespopulation_estimate_HBname2022_data <- data.frame(
HBName = c("Ayrshire and Arran", "Borders", "Dumfries and Galloway", "Forth Valley", "Grampian", "Highland", "Lothian", "Orkney", "Shetland", "Western Isles", "Fife", "Tayside", "Greater Glasgow and Clyde", "Lanarkshire"),
Population2022 = c(368837, 116520, 148892, 306927, 588868, 325310, 925939, 22731, 22968, 26606, 376267, 419000, 1192485, 666129)
)
# Ensure the merge key exists in both datasets
scottish_health_boards_pop2022 <- scottish_health_boards %>%
left_join(HBUpdatespopulation_estimate_HBname2022_data, by = "HBName")  # 'by' specifies the column to join by
ScottishMapHBPopulation2022 <- ggplot(data = scottish_health_boards_pop2022) +
geom_sf(aes(fill = Population2022)) +  # Plot the health board regions with fill mapped to your data
geom_sf_text(data = labels_data, aes(label = HBName), size = 3) +  # Add labels
#scale_fill_viridis_c() +  # Optional: Use a nice color scale
scale_fill_continuous(labels = label_comma(), type="viridis", direction = -1, guide_legend(title = "Population \nestimate")) +
labs(
#title = "Population estimate in 2022 by Scottish Health Board",
fill = "AllAges") +
#theme_minimal()
theme_void()
save_plot("Output/ScottishMapHBPopulation2022.svg", fig = ScottishMapHBPopulation2022, width = 12, height = 14)
#didn't work when I left_join with scottish_health_boards, had to manually input the data
HBwaiting4Hr2022 <- ae_4HwaitingbyHB_2022 %>% select(NHSBoardName, percent4Hr)
colnames(HBwaiting4Hr2022)<- c("HBName","percent4Hr")
#had to manually input the data for it to wokr
aeHBwaiting4Hr2022 <- data.frame(
HBName = c("Ayrshire and Arran", "Borders", "Dumfries and Galloway", "Fife","Forth Valley", "Grampian", "Greater Glasgow and Clyde", "Highland", "Lanarkshire", "Lothian", "Orkney", "Shetland", "Tayside", "Western Isles"),
percent4Hr = c(69.5, 64.5, 79.7, 73.0, 64.7, 70.9, 71.1, 85.4, 58.2, 63.4, 91.4, 94.0, 90.4, 97.8))
scottish_health_boards4Hwaiting2022 <- scottish_health_boards %>%
left_join(aeHBwaiting4Hr2022, by="HBName")
#Chloropeth of Scottish 4 hour waiting in 2022
png(file = "Output/ScottishMapHB4Hwaiting2022.png")
ggplot(data = scottish_health_boards4Hwaiting2022) +
geom_sf(aes(fill = percent4Hr)) +  # Plot the health board regions with fill mapped to your data
geom_sf_text(data = labels_data, aes(label = HBName), size = 3) +  # Add labels
#scale_fill_viridis_c() +  # Optional: Use a nice color scale
scale_fill_continuous(labels = label_comma(), type="viridis",
direction = -1,
limits=c(55, 100),
guide_legend(title = "% Patients seen \nwithin 4 hours")) +
labs(title = "% Patients seen within 4 hours in 2022 by Scottish Health Board", fill = "percent4Hr") +
#theme_minimal()
theme_void()
dev.off()
ScottishMapHB4Hwaiting2022 <- ggplot(data = scottish_health_boards4Hwaiting2022) +
geom_sf(aes(fill = percent4Hr)) +  # Plot the health board regions with fill mapped to your data
geom_sf_text(data = labels_data, aes(label = HBName), size = 3) +  # Add labels
#scale_fill_viridis_c() +  # Optional: Use a nice color scale
scale_fill_continuous(labels = label_comma(), type="viridis",
direction = -1,
limits=c(55, 100),
guide_legend(title = "% Patients seen \nwithin 4 hours")) +
labs(
#title = "% Patients seen within 4 hours in 2022 \nby Scottish Health Board",
fill = "percent4Hr") +
#theme_minimal()
theme_void()
save_plot("Output/ScottishMapHB4Hwaiting2022.svg", fig = ScottishMapHB4Hwaiting2022, width = 12, height = 14)
ae_4HwaitingbyHB_2012 <-ae_4HwaitingbyHB %>%
filter(Year=="2012")
ae_4HwaitingbyHB_2012<- ae_4HwaitingbyHB_2012 %>%
select(NHSBoardName, NumberOfAttendancesAll, NumberWithin4HoursAll) %>%
group_by(NHSBoardName)%>%
summarise(NumberOfAttendancesAll=sum(NumberOfAttendancesAll),
NumberWithin4HoursAll=sum(NumberWithin4HoursAll))
#counting the percentages for within 4 hours
ae_4HwaitingbyHB_2012$percent4Hr<-ae_4HwaitingbyHB_2012$NumberWithin4HoursAll/ae_4HwaitingbyHB_2012$NumberOfAttendancesAll
ae_4HwaitingbyHB_2012$percent4Hr<-ae_4HwaitingbyHB_2012$percent4Hr*100
#rounding up percent4Hr to 1 decimal point
ae_4HwaitingbyHB_2012$percent4Hr<-round(ae_4HwaitingbyHB_2012$percent4Hr,digits = 1)
#Creating the dataframe with percent within 4 hours by HB
aeHBwaiting4Hr2012 <- data.frame(
HBName = c("Ayrshire and Arran", "Borders", "Dumfries and Galloway", "Fife","Forth Valley", "Grampian", "Greater Glasgow and Clyde", "Highland", "Lanarkshire", "Lothian", "Orkney", "Shetland", "Tayside", "Western Isles"),
percent4Hr = c(93.4, 96.7, 94.2, 94.6, 92.8, 96.5, 94.4, 97.9, 93.0, 91.5, 98.6, 99.4, 98.9, 98.1))
scottish_health_boards4Hwaiting2012 <- scottish_health_boards %>%
left_join(aeHBwaiting4Hr2012, by="HBName")
#Chloropeth of Scottish 4 hour waiting in 2012
png(file = "Output/ScottishMapHB4Hwaiting2012.png")
ggplot(data = scottish_health_boards4Hwaiting2012) +
geom_sf(aes(fill = percent4Hr)) +  # Plot the health board regions with fill mapped to your data
geom_sf_text(data = labels_data, aes(label = HBName), size = 3) +  # Add labels
#scale_fill_viridis_c() +  # Optional: Use a nice color scale
scale_fill_continuous(labels = label_comma(), type="viridis",
direction = -1,
limits=c(55, 100),
guide_legend(title = "% Patients seen \nwithin 4 hours")) +
labs(title = "% Patients seen within 4 hours in 2012 by Scottish Health Board", fill = "percent4Hr") +
#theme_minimal()
theme_void()
dev.off()
ScottishMapHB4Hwaiting2012 <- ggplot(data = scottish_health_boards4Hwaiting2012) +
geom_sf(aes(fill = percent4Hr)) +  # Plot the health board regions with fill mapped to your data
geom_sf_text(data = labels_data, aes(label = HBName), size = 3) +  # Add labels
#scale_fill_viridis_c() +  # Optional: Use a nice color scale
scale_fill_continuous(labels = label_comma(), type="viridis",
direction = -1,
limits=c(55, 100),
guide_legend(title = "% Patients seen \nwithin 4 hours")) +
labs(
#title = "% Patients seen within 4 hours in 2012 \nby Scottish Health Board",
fill = "percent4Hr") +
#theme_minimal()
theme_void()
save_plot("Output/ScottishMapHB4Hwaiting2012.svg", fig = ScottishMapHB4Hwaiting2012, width = 12, height = 14)
#Creating a dataframe with 2022 attendance rate data
ae_byboard_Updatedpopulation_2022 <- ae_byboard_Updatedpopulation %>%
filter(Year=="2022")
ae_byboard_Updatedpopulation_2022<- ae_byboard_Updatedpopulation_2022 %>%
select(HBName, Year, NumberOfAttendancesAll, AllAges) %>%
group_by(HBName, Year) %>%
summarise(NumberOfAttendancesAll = sum(NumberOfAttendancesAll),
AllAges = sum(AllAges))
View(ae_4HwaitingbyHB)
View(ae_byboard_Updatedpopulation)
#Calculating attendance rate per pop in 2022 using Chris's updated estimate
ae_byboard_Updatedpopulation_2022$attendanceperpop<-ae_byboard_Updatedpopulation_2022$NumberOfAttendancesAll/ae_byboard_Updatedpopulation_2022$AllAges
#Calculating attendance per 1,000 population using Chris's updated population estimate
ae_byboard_Updatedpopulation_2022$attendanceper1000pop<-ae_byboard_Updatedpopulation_2022$attendanceperpop*1000
#rounding up attendanceper1000pop to 1 decimal point
ae_byboard_Updatedpopulation_2022$attendanceper1000pop<-round(ae_byboard_Updatedpopulation_2022$attendanceper1000pop,digits = 1)
#Creating the dataframe with attendanceper1000pop in 2022 by HB
ae_byboard_Updatedpopulation_2022 <- data.frame(
HBName = c("Ayrshire and Arran", "Borders", "Dumfries and Galloway", "Fife","Forth Valley", "Grampian", "Greater Glasgow and Clyde", "Highland", "Lanarkshire", "Lothian", "Orkney", "Shetland", "Tayside", "Western Isles"),
attendanceper1000pop = c(21.5, 21.2, 25.7, 18.7, 22.2, 16.7, 27.9, 24.1, 24.7, 24.6, 25.1, 27.3, 18.3, 22.9))
scottish_health_boardsUpdatedattendancerate2022 <- scottish_health_boards %>%
left_join(ae_byboard_Updatedpopulation_2022, by="HBName")
#Chloropeth of Scottish attendance rate in 2022 using Chris's updated population estimate
png(file = "Output/ScottishMapUpdatedattendancerate2022.png")
ggplot(data = scottish_health_boardsUpdatedattendancerate2022) +
geom_sf(aes(fill = attendanceper1000pop)) +  # Plot the health board regions with fill mapped to your data
geom_sf_text(data = labels_data, aes(label = HBName), size = 3) +  # Add labels
#scale_fill_viridis_c() +  # Optional: Use a nice color scale
scale_fill_continuous(labels = label_comma(), type="viridis",
direction = -1,
limits=c(10, 35),
guide_legend(title = "Attendance rate \nper 1000 population")) +
labs(title = "Attendance rate per 1000 population in 2022 by Scottish health board", fill = "attendanceper1000pop") +
#theme_minimal()
theme_void()
dev.off()
ScottishMapUpdatedattendancerate2022 <- ggplot(data = scottish_health_boardsUpdatedattendancerate2022) +
geom_sf(aes(fill = attendanceper1000pop)) +  # Plot the health board regions with fill mapped to your data
geom_sf_text(data = labels_data, aes(label = HBName), size = 3) +  # Add labels
#scale_fill_viridis_c() +  # Optional: Use a nice color scale
scale_fill_continuous(labels = label_comma(), type="viridis",
direction = -1,
limits=c(10, 35),
guide_legend(title = "Attendance rate \nper 1000 population")) +
#labs(title = "Attendance rate per 1000 population in 2022 \nby Scottish health board", fill = "attendanceper1000pop") +
#theme_minimal()
theme_void()
save_plot("Output/ScottishMapUpdatedattendancerate2022.svg", fig = ScottishMapUpdatedattendancerate2022, width = 12, height = 14)
#Creating a dataframe with 2012 attendance rate data
ae_byboard_Updatedpopulation_2012 <- ae_byboard_Updatedpopulation %>%
filter(Year=="2012")
ae_byboard_Updatedpopulation_2012<- ae_byboard_Updatedpopulation_2012 %>%
select(HBName, Year, NumberOfAttendancesAll, AllAges) %>%
group_by(HBName, Year) %>%
summarise(NumberOfAttendancesAll = sum(NumberOfAttendancesAll),
AllAges = sum(AllAges))
#Calculating attendance rate per pop in 2012 using Chris's updated estimate
ae_byboard_Updatedpopulation_2012$attendanceperpop<-ae_byboard_Updatedpopulation_2012$NumberOfAttendancesAll/ae_byboard_Updatedpopulation_2012$AllAges
#Calculating attendance per 1,000 population using Chris's updated population estimate
ae_byboard_Updatedpopulation_2012$attendanceper1000pop<-ae_byboard_Updatedpopulation_2012$attendanceperpop*1000
#rounding up attendanceper1000pop to 1 decimal point
ae_byboard_Updatedpopulation_2012$attendanceper1000pop<-round(ae_byboard_Updatedpopulation_2012$attendanceper1000pop,digits = 1)
#Creating the dataframe with attendanceper1000pop in 2012 by HB
ae_byboard_Updatedpopulation_2012 <- data.frame(
HBName = c("Ayrshire and Arran", "Borders", "Dumfries and Galloway", "Fife","Forth Valley", "Grampian", "Greater Glasgow and Clyde", "Highland", "Lanarkshire", "Lothian", "Orkney", "Shetland", "Tayside", "Western Isles"),
attendanceper1000pop = c(27.2, 19.6, 26.2, 19.9, 20.9, 21.3, 34.0, 25.0, 24.8, 24.8, 12.4, 28.1, 22.7, 25.8))
scottish_health_boardsUpdatedattendancerate2012 <- scottish_health_boards %>%
left_join(ae_byboard_Updatedpopulation_2012, by="HBName")
#Chloropeth of Scottish attendance rate in 2012 using Chris's updated population estimate
png(file = "Output/ScottishMapUpdatedattendancerate2012.png")
ggplot(data = scottish_health_boardsUpdatedattendancerate2012) +
geom_sf(aes(fill = attendanceper1000pop)) +  # Plot the health board regions with fill mapped to your data
geom_sf_text(data = labels_data, aes(label = HBName), size = 3) +  # Add labels
#scale_fill_viridis_c() +  # Optional: Use a nice color scale
scale_fill_continuous(labels = label_comma(), type="viridis",
direction = -1,
limits=c(10, 35),
guide_legend(title = "Attendance rate \nper 1000 population")) +
labs(title = "Attendance rate per 1000 population in 2012 by Scottish health board", fill = "attendanceper1000pop") +
#theme_minimal()
theme_void()
dev.off()
ScottishMapUpdatedattendancerate2012 <- ggplot(data = scottish_health_boardsUpdatedattendancerate2012) +
geom_sf(aes(fill = attendanceper1000pop)) +  # Plot the health board regions with fill mapped to your data
geom_sf_text(data = labels_data, aes(label = HBName), size = 3) +  # Add labels
#scale_fill_viridis_c() +  # Optional: Use a nice color scale
scale_fill_continuous(labels = label_comma(), type="viridis",
direction = -1,
limits=c(10, 35),
guide_legend(title = "Attendance rate \nper 1000 population")) +
#labs(title = "Attendance rate per 1000 population in 2012 \nby Scottish health board", fill = "attendanceper1000pop") +
#theme_minimal()
theme_void()
save_plot("Output/ScottishMapUpdatedattendancerate2012.svg", fig = ScottishMapUpdatedattendancerate2012, width = 12, height = 14)
library(tidyverse)
library(here)
library(readxl)
library(dplyr)
library(ggplot2)
library(lubridate)
library(sf)
library(scales)
library(sjPlot)
ggplot(ae_monthly_attendance ,aes(x=NumberOfAttendancesAll))+
geom_histogram() +
geom_vline(xintercept=mean(Attendances_stats$mean), color="blue", size=0.5)+
geom_vline(xintercept=median(Attendances_stats$median), color="orange", size=0.5)+
facet_wrap(~DepartmentType) +
labs(Title="Number of attendances by department type",
x="Number of attendances",
y="Count")
ggplot(ae_monthly_attendance ,aes(x=NumberOfAttendancesAll))+
geom_histogram() +
#geom_vline(xintercept=mean(Attendances_stats$mean), color="blue", size=0.5)+
#geom_vline(xintercept=median(Attendances_stats$median), color="orange", size=0.5)+
facet_wrap(~DepartmentType) +
labs(Title="Number of attendances by department type",
x="Number of attendances",
y="Count")
#saving HistogramAEattendancesbyDeptType as svg
HistogramAEattendancesbyDeptType <-ggplot(ae_monthly_attendance ,aes(x=NumberOfAttendancesAll))+
geom_histogram() +
facet_wrap(~DepartmentType) +
labs(Title="Number of attendances by department type",
x="Number of attendances",
y="Number of days")
save_plot("Output/HistogramAEattendancesbyDeptType.svg", fig = HistogramAEattendancesbyDeptType, width=12, height=8)
View(deprivation)
View(deprivation)
#SIMD proportions for Glasgow
Glasgow_glmproportions <- deprivation %>%
filter(HealthBoard=="NHS Greater Glasgow & Clyde")
#changing month from character to a date
ymd(Glasgow_glmproportions$Month)
str(Glasgow_glmproportions)
View(Glasgow_glmproportions)
#adding month and year column
Glasgow_glmproportions$yearnumeric <- format(as.Date(Glasgow_glmproportions$Month, format="%Y/%m/%d"),"%Y")
Glasgow_glmproportions$monthnumeric <- format(as.Date(Glasgow_glmproportions$Month, format="%Y/%m/%d"),"%m")
#calculate total monthly attendances and then proportion
Glasgow_glmproportions %>% filter(yearnumeric=="2023", monthnumeric=="07") %>%
summarise(Attendances=sum(Attendances))
View(Glasgow_glmproportions)
#33373
#Adding a new column for Orkney SIMD proportions in July 2023
Glasgow_glmproportions_July23simd <- Glasgow_glmproportions %>%
filter(yearnumeric=="2023", monthnumeric=="07") %>%
mutate(SIMDprop=Attendances/33373)
View(Glasgow_glmproportions_July23simd)
View(Glasgow_glmproportions)
Glasgow_glmproportions_July23simd <- Glasgow_glmproportions %>%
filter(yearnumeric=="2023", monthnumeric=="07") %>%
group_by(Month, Deprivation) %>%
summarise(Attendances=sum(Attendances))
View(Glasgow_glmproportions_July23simd)
View(Glasgow_glmproportions)
View(Glasgow_glmproportions_July23simd)
Glasgow_glmproportions_July23simd <- Glasgow_glmproportions_July23simd %>%
mutate(SIMDprop=Attendances/33373)
View(Glasgow_glmproportions_July23simd)
#Calculating proportions for Glasgow in July 23 for age
Glasgow_glmproportions_July23age <- agegroupHB %>%
filter(HealthBoard=="NHS Greater Glasgow & Clyde")
#changing from character to date
#Tried this didnt work: ymd(Orkney_glmproportions_July23age$Month)
Glasgow_glmproportions_July23age$Month<-as.Date(Glasgow_glmproportions_July23age$Month)
str(Glasgow_glmproportions_July23age)
#adding columns for month and year
Glasgow_glmproportions_July23age$yearnumeric <- format(as.Date(Glasgow_glmproportions_July23age$Month, format="%Y/%m/%d"), "%Y")
Glasgow_glmproportions_July23age$monthnumeric <- format(as.Date(Glasgow_glmproportions_July23age$Month, format="%Y/%m/%d"), "%m")
#calculate total monthly attendances and then proportion
Glasgow_glmproportions_July23age<- Glasgow_glmproportions_July23age %>% filter(yearnumeric=="2023", monthnumeric=="07")
Glasgow_glmproportions_July23age %>%
summarise(Attendances=sum(Attendances))
#33373
#Adding a new column for Orkney age proportions in July 2023
Glasgow_glmproportions_July23age <- Glasgow_glmproportions_July23age %>%
mutate(ageprop=Attendances/33373)
Glasgow_glmproportions_July23sex <- whoattends_sexHB %>%
filter(HealthBoard=="NHS Greater Glasgow & Clyde")
whoattends_sexHB <- read_excel("Rawdata/2023-09-05-whoattends-sex.xlsx",
sheet = "HealthBoard")
Glasgow_glmproportions_July23sex <- whoattends_sexHB %>%
filter(HealthBoard=="NHS Greater Glasgow & Clyde")
#changing from character to date
Glasgow_glmproportions_July23sex$Month<-as.Date(Glasgow_glmproportions_July23sex$Month)
str(Glasgow_glmproportions_July23sex)
#adding columns for month and year
Glasgow_glmproportions_July23sex$yearnumeric <- format(as.Date(Glasgow_glmproportions_July23sex$Month, format="%Y/%m/%d"), "%Y")
Glasgow_glmproportions_July23sex$monthnumeric <- format(as.Date(Glasgow_glmproportions_July23sex$Month, format="%Y/%m/%d"), "%m")
#calculate total monthly attendances and then proportion
Glasgow_glmproportions_July23sex<- Glasgow_glmproportions_July23sex %>% filter(yearnumeric=="2023", monthnumeric=="07")
Glasgow_glmproportions_July23sex %>%
summarise(Attendances=sum(Attendances))
#33373
#Adding a new column for Orkney sex proportions in July 2023
Glasgow_glmproportions_July23sex <- Glasgow_glmproportions_July23sex %>%
mutate(sexprop=Attendances/33373)
##creating a graph for Glasgow for Jan 2018- July 2023
#creating a dataframe for Glasgow
ae_monthly_Glasgow20182023 <- ae_monthly_totalae %>%
filter(between(MonthEndingDate, as.Date("2017-12-31"), as.Date("2023-06-30")),NHSBoardName=="NHS Greater Glasgow & Clyde")
View(ae_monthly_attendance_proportionsnewdate)
View(ae_monthly_total)
View(ae_monthly_attendance)
View(ae_monthly_total)
View(ae_monthly_attendance)
##creating a graph for Glasgow for Jan 2018- July 2023
#creating a dataframe for Glasgow
ae_monthly_Glasgow20182023 <-ae_monthly_attendance %>%
select(MonthEndingDate, NHSBoardName, DepartmentType, NumberOfAttendancesAll) %>%
filter(between(MonthEndingDate, as.Date("2017-12-31"), as.Date("2023-06-30")),NHSBoardName=="NHS Greater Glasgow & Clyde") %>%
summarise(NumberOfAttendancesAll=sum(NumberOfAttendancesAll))
View(ae_monthly_total_2018to2023)
View(ae_monthly_Glasgow20182023)
View(ae_monthly_attendance)
##creating a graph for Glasgow for Jan 2018- July 2023
#creating a dataframe for Glasgow
ae_monthly_Glasgow20182023 <-ae_monthly_attendance %>%
select(MonthEndingDate, NHSBoardName, DepartmentType, NumberOfAttendancesAll) %>%
filter(between(MonthEndingDate, as.Date("2017-12-31"), as.Date("2023-06-30")),NHSBoardName=="NHS Greater Glasgow & Clyde") %>%
group_by(MonthEndingDate) %>%
summarise(NumberOfAttendancesAll=sum(NumberOfAttendancesAll))
View(ae_monthly_Glasgow20182023)
View(ae_monthly_Glasgow20182023)
View(sexagesimddayhourdepttypeHBmonth_proportions)
#aligning the dates in the Glasgow dataframe by combining with the correct column of dates as per in the proportions table
ae_monthly_Glasgow20182023 <- cbind(ae_monthly_Glasgow20182023, Month=sexagesimddayhourdepttypeHBmonth_proportions$Month)
ae_attendance_Glasgow20182023 <- ggplot(data=ae_monthly_Glasgow20182023, aes(x=Month, y=NumberOfAttendancesAll))+
geom_line()+
labs(x="Year",
y="Number of A&E attendances at NHS Greater Glasgow and Clyde")
save_plot("Output/aeAttendanceGlasgow20182023.svg", fig=ae_attendance_Glasgow20182023, width=14, height=12)
View(Glasgow_glmproportions)
View(ae_byboard)
View(ae_monthly_attendance)
Glasgow_glmproportions_July23type <- ae_monthly_attendance %>%
select(MonthEndingDate, NHSBoardName, DepartmentType, NumberOfAttendancesAll) %>%
filter(between(MonthEndingDate, as.Date("2017-12-31"), as.Date("2023-06-30")),NHSBoardName=="NHS Greater Glasgow & Clyde") %>%
group_by(DepartmentType) %>%
summarise(NumberOfAttendancesAll=sum(NumberOfAttendancesAll))
View(Glasgow_glmproportions_July23type)
Glasgow_glmproportions_July23type <- ae_monthly_attendance %>%
select(MonthEndingDate, NHSBoardName, DepartmentType, NumberOfAttendancesAll) %>%
filter(between(MonthEndingDate, as.Date("2017-12-31"), as.Date("2023-06-30")),NHSBoardName=="NHS Greater Glasgow & Clyde") %>%
group_by(DepartmentType)
View(Glasgow_glmproportions_July23type)
Glasgow_glmproportions_July23type <- ae_monthly_attendance %>%
select(MonthEndingDate, NHSBoardName, DepartmentType, NumberOfAttendancesAll) %>%
filter(between(MonthEndingDate, as.Date("2017-12-31"), as.Date("2023-06-30")),NHSBoardName=="NHS Greater Glasgow & Clyde") %>%
group_by(DepartmentType) %>%
summarise(NumberOfAttendancesAll=sum(NumberOfAttendancesAll))
View(Glasgow_glmproportions_July23type)
View(Glasgow_glmproportions_July23simd)
Glasgow_glmproportions_July23type <- ae_monthly_attendance %>%
select(MonthEndingDate, NHSBoardName, DepartmentType, NumberOfAttendancesAll) %>%
filter(between(MonthEndingDate, as.Date("2023-06-30"), as.Date("2023-06-30")),NHSBoardName=="NHS Greater Glasgow & Clyde") %>%
group_by(DepartmentType) %>%
summarise(NumberOfAttendancesAll=sum(NumberOfAttendancesAll))
View(Glasgow_glmproportions_July23type)
Glasgow_glmproportions_July23type <- ae_monthly_attendance %>%
select(MonthEndingDate, NHSBoardName, DepartmentType, NumberOfAttendancesAll) %>%
filter(between(MonthEndingDate, as.Date("2023-06-30"), as.Date("2023-06-30")),NHSBoardName=="NHS Greater Glasgow & Clyde") %>%
group_by(DepartmentType)
View(Glasgow_glmproportions_July23type)
Glasgow_glmproportions_July23type <- ae_monthly_attendance %>%
select(MonthEndingDate, NHSBoardName, DepartmentType, NumberOfAttendancesAll) %>%
filter(between(MonthEndingDate, as.Date("2023-06-30"), as.Date("2023-06-30")),NHSBoardName=="NHS Greater Glasgow & Clyde") %>%
group_by(DepartmentType) %>%
summarise(NumberOfAttendancesAll=sum(NumberOfAttendancesAll))
View(Glasgow_glmproportions_July23type)
Glasgow_glmproportions_July23type <- Glasgow_glmproportions_July23type %>%
mutate(typeprop=Attendances/35443)
View(Glasgow_glmproportions_July23type)
Glasgow_glmproportions_July23type <- Glasgow_glmproportions_July23type %>%
mutate(typeprop=NumberOfAttendancesAll/35443)
View(Glasgow_glmproportions_July23type)
View(Glasgow_glmproportions_July23age)
View(Glasgow_glmproportions_July23sex)
View(Glasgow_glmproportions_July23simd)
View(Glasgow_glmproportions_July23type)
View(Glasgow_glmproportions_July23simd)
#Calculating proportions for Glasgow in July 23 for age
Glasgow_glmproportions_July23age <- agegroupHB %>%
filter(HealthBoard=="NHS Greater Glasgow & Clyde")
#changing from character to date
#Tried this didnt work: ymd(Orkney_glmproportions_July23age$Month)
Glasgow_glmproportions_July23age$Month<-as.Date(Glasgow_glmproportions_July23age$Month)
str(Glasgow_glmproportions_July23age)
#adding columns for month and year
Glasgow_glmproportions_July23age$yearnumeric <- format(as.Date(Glasgow_glmproportions_July23age$Month, format="%Y/%m/%d"), "%Y")
Glasgow_glmproportions_July23age$monthnumeric <- format(as.Date(Glasgow_glmproportions_July23age$Month, format="%Y/%m/%d"), "%m")
#calculate total monthly attendances and then proportion
Glasgow_glmproportions_July23age<- Glasgow_glmproportions_July23age %>% filter(yearnumeric=="2023", monthnumeric=="07")%>%
group_by(Month, Deprivation)
View(Glasgow_glmproportions_July23age)
Glasgow_glmproportions_July23age<- Glasgow_glmproportions_July23age %>% filter(yearnumeric=="2023", monthnumeric=="07")%>%
group_by(Month, Age)
View(Glasgow_glmproportions_July23age)
Glasgow_glmproportions_July23age<- Glasgow_glmproportions_July23age %>% filter(yearnumeric=="2023", monthnumeric=="07")%>%
group_by(Month, Age) %>%
summarise(Attendances=sum(Attendances))
View(Glasgow_glmproportions_July23age)
Glasgow_glmproportions_July23age %>%
summarise(Attendances=sum(Attendances))
Glasgow_glmproportions_July23age <- Glasgow_glmproportions_July23age %>%
mutate(ageprop=Attendances/33373)
View(Glasgow_glmproportions_July23age)
Glasgow_glmproportions_July23sex <- whoattends_sexHB %>%
filter(HealthBoard=="NHS Greater Glasgow & Clyde")
View(Glasgow_glmproportions_July23sex)
#changing from character to date
Glasgow_glmproportions_July23sex$Month<-as.Date(Glasgow_glmproportions_July23sex$Month)
str(Glasgow_glmproportions_July23sex)
#adding columns for month and year
Glasgow_glmproportions_July23sex$yearnumeric <- format(as.Date(Glasgow_glmproportions_July23sex$Month, format="%Y/%m/%d"), "%Y")
Glasgow_glmproportions_July23sex$monthnumeric <- format(as.Date(Glasgow_glmproportions_July23sex$Month, format="%Y/%m/%d"), "%m")
#calculate total monthly attendances and then proportion
Glasgow_glmproportions_July23sex<- Glasgow_glmproportions_July23sex %>% filter(yearnumeric=="2023", monthnumeric=="07")%>%
group_by(Month, Sex) %>%
summarise(Attendances=sum(Attendances))
View(Glasgow_glmproportions_July23sex)
Glasgow_glmproportions_July23sex %>%
summarise(Attendances=sum(Attendances))
#33373
#Adding a new column for Glasgow sex proportions in July 2023
Glasgow_glmproportions_July23sex <- Glasgow_glmproportions_July23sex %>%
mutate(sexprop=Attendances/33373)
View(Glasgow_glmproportions_July23sex)
#using real Glasgow proportions for age, sex, simd, type from July 2023
GlasgowAug23Time<- data.frame(Male =0.493452791, Female =0.497677763, Under18 =0.205825068, EighteentoTwentyfour =0.087945345, TwentyfivetoThirtynine =0.201719953, FortytoSixtyfour =0.282623678,  SixtyfivetoSeventyfour =0.090971744, SIMDOne =0.41566536,SIMDTwo =0.17439247, SIMDThree =0.12435202, SIMDFour =0.11266593, SIMDFive =0.12105594, Tuesday =0.1456571, Wednesday =0.1449873, Thursday =0.1390299, Friday =0.1377609, Saturday =0.1347645, Sunday =0.1395234, ED =1, Midnighttoone =0.02342818, Twotothreeam =0.01517344, Threetofouram =0.01303421, Fourtofiveam =0.012867208, Fivetosixam =0.012525249, Sixtosevenam =0.0134716, Seventoeightam =0.01639814, Eighttonineam =0.03026736, Ninetotenam =0.05104735, Tentoelevenam =0.06138565, Eleventonoon =0.06703195, Noontoonepm =0.06518696, Onetotwopm =0.0656164, Twotothreepm =0.06416109, Threetofourpm =0.06517901, Fourtofivepm =0.06414518, Fivetosixpm =0.06195028, Sixtosevenpm =0.06039954, Seventoeightpm =0.05431584, Eighttoninepm =0.05063382, Ninetotenpm =0.04506704, Tentoelevenpm =0.03786999, Eleventomidnight =0.02978226, NHSBorders =0, NHSFife =0, NHSShetland =0, NHSLanarkshire =0, NHSDumfriesandGalloway =0, NHSForthValley =0, NHSGrampian =0, NHSWesternIsles =0, NHSOrkney =0, NHSTayside =0, NHSGreaterGlasgowandClyde =1, NHSHighland =0, NHSLothian =0, Time=2039)
predict(glm_sexageSIMDdaytypehourHBTime, GlasgowAug23Time, type="response")
#using real orkney proportions for age, sex, simd from July 2023, set ED as 1 because Orkney only has ED
GlasgowSept23Time<- data.frame(Male =0.493452791, Female =0.497677763, Under18 =0.205825068, EighteentoTwentyfour =0.087945345, TwentyfivetoThirtynine =0.201719953, FortytoSixtyfour =0.282623678,  SixtyfivetoSeventyfour =0.090971744, SIMDOne =0.41566536,SIMDTwo =0.17439247, SIMDThree =0.12435202, SIMDFour =0.11266593, SIMDFive =0.12105594, Tuesday =0.1456571, Wednesday =0.1449873, Thursday =0.1390299, Friday =0.1377609, Saturday =0.1347645, Sunday =0.1395234, ED =1, Midnighttoone =0.02342818, Twotothreeam =0.01517344, Threetofouram =0.01303421, Fourtofiveam =0.012867208, Fivetosixam =0.012525249, Sixtosevenam =0.0134716, Seventoeightam =0.01639814, Eighttonineam =0.03026736, Ninetotenam =0.05104735, Tentoelevenam =0.06138565, Eleventonoon =0.06703195, Noontoonepm =0.06518696, Onetotwopm =0.0656164, Twotothreepm =0.06416109, Threetofourpm =0.06517901, Fourtofivepm =0.06414518, Fivetosixpm =0.06195028, Sixtosevenpm =0.06039954, Seventoeightpm =0.05431584, Eighttoninepm =0.05063382, Ninetotenpm =0.04506704, Tentoelevenpm =0.03786999, Eleventomidnight =0.02978226, NHSBorders =0, NHSFife =0, NHSShetland =0, NHSLanarkshire =0, NHSDumfriesandGalloway =0, NHSForthValley =0, NHSGrampian =0, NHSWesternIsles =0, NHSOrkney =0, NHSTayside =0, NHSGreaterGlasgowandClyde =1, NHSHighland =0, NHSLothian =0, Time=2070)
predict(glm_sexageSIMDdaytypehourHBTime, OrkneySept23Time, type="response")
#using real orkney proportions for age, sex, simd from July 2023, set ED as 1 because Orkney only has ED
GlasgowOct23Time<- data.frame(Male =0.493452791, Female =0.497677763, Under18 =0.205825068, EighteentoTwentyfour =0.087945345, TwentyfivetoThirtynine =0.201719953, FortytoSixtyfour =0.282623678,  SixtyfivetoSeventyfour =0.090971744, SIMDOne =0.41566536,SIMDTwo =0.17439247, SIMDThree =0.12435202, SIMDFour =0.11266593, SIMDFive =0.12105594, Tuesday =0.1456571, Wednesday =0.1449873, Thursday =0.1390299, Friday =0.1377609, Saturday =0.1347645, Sunday =0.1395234, ED =1, Midnighttoone =0.02342818, Twotothreeam =0.01517344, Threetofouram =0.01303421, Fourtofiveam =0.012867208, Fivetosixam =0.012525249, Sixtosevenam =0.0134716, Seventoeightam =0.01639814, Eighttonineam =0.03026736, Ninetotenam =0.05104735, Tentoelevenam =0.06138565, Eleventonoon =0.06703195, Noontoonepm =0.06518696, Onetotwopm =0.0656164, Twotothreepm =0.06416109, Threetofourpm =0.06517901, Fourtofivepm =0.06414518, Fivetosixpm =0.06195028, Sixtosevenpm =0.06039954, Seventoeightpm =0.05431584, Eighttoninepm =0.05063382, Ninetotenpm =0.04506704, Tentoelevenpm =0.03786999, Eleventomidnight =0.02978226, NHSBorders =0, NHSFife =0, NHSShetland =0, NHSLanarkshire =0, NHSDumfriesandGalloway =0, NHSForthValley =0, NHSGrampian =0, NHSWesternIsles =0, NHSOrkney =0, NHSTayside =0, NHSGreaterGlasgowandClyde =1, NHSHighland =0, NHSLothian =0, Time=2100)
predict(glm_sexageSIMDdaytypehourHBTime, GlasgowOct23Time, type="response")
View(ScotUpdatespopulation2018to2023glmplot)
View(HBUpdatespopulation_estimate)
View(HBpopulation_estimate_2023_HBnames)
